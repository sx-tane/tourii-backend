{
  "openapi": "3.0.0",
  "paths": {
    "/health-check": {
      "get": {
        "description": "Check if the API is running and accessible.",
        "operationId": "TouriiBackendController_checkHealth",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Health Check",
        "tags": [
          "Health Check"
        ]
      }
    },
    "/user/sensitive-info": {
      "get": {
        "description": "Get user sensitive info",
        "operationId": "TouriiBackendController_getUserSensitiveInfo",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User sensitive info",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "description": "Password",
                  "type": "string"
                },
                "refreshToken": {
                  "description": "Refresh token",
                  "type": "string"
                },
                "encryptedPrivateKey": {
                  "description": "Encrypted private key",
                  "type": "string"
                },
                "passportWalletAddress": {
                  "description": "Passport wallet address",
                  "type": "string"
                },
                "perksWalletAddress": {
                  "description": "Perks wallet address",
                  "type": "string"
                },
                "latestIpAddress": {
                  "description": "Latest IP address",
                  "type": "string"
                }
              },
              "required": [
                "password"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSensitiveInfoResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get user sensitive info",
        "tags": [
          "User"
        ]
      }
    },
    "/user": {
      "post": {
        "description": "Create a new user in the system.",
        "operationId": "TouriiBackendController_createUser",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "User creation request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserEntity"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_006"
                    },
                    "message": {
                      "type": "string",
                      "example": "User already exists"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Create User",
        "tags": [
          "User"
        ]
      }
    },
    "/login": {
      "post": {
        "description": "Login using username or other identifiers with optional wallet/social checks.",
        "operationId": "TouriiBackendController_login",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Login request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_004"
                    },
                    "message": {
                      "type": "string",
                      "example": "User is not registered"
                    },
                    "type": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "User Login",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/signup": {
      "post": {
        "description": "Create user account using wallet signature verification.",
        "operationId": "TouriiBackendController_signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Signup info",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Email address for signup",
                    "type": "string",
                    "format": "email"
                  },
                  "socialProvider": {
                    "description": "Social provider for signup",
                    "type": "string"
                  },
                  "socialId": {
                    "description": "Social ID for signup",
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "socialProvider",
                  "socialId"
                ],
                "$ref": "#/components/schemas/AuthSignupRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signup success",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "description": "Unique identifier for the user",
                  "type": "string"
                },
                "walletAddress": {
                  "description": "Wallet address for the user",
                  "type": "string"
                }
              },
              "required": [
                "userId",
                "walletAddress"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSignupResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request body or version",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_001"
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "User signup with wallet",
        "tags": [
          "Auth"
        ]
      }
    },
    "/user/me": {
      "get": {
        "description": "Retrieve authenticated user's profile information.",
        "operationId": "TouriiBackendController_me",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current user basic profile",
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "username": {
                  "description": "Username",
                  "type": "string"
                },
                "discordId": {
                  "description": "Discord ID",
                  "type": "string"
                },
                "discordUsername": {
                  "description": "Discord username",
                  "type": "string"
                },
                "twitterId": {
                  "description": "Twitter ID",
                  "type": "string"
                },
                "twitterUsername": {
                  "description": "Twitter username",
                  "type": "string"
                },
                "googleEmail": {
                  "description": "Google email",
                  "type": "string"
                },
                "passportWalletAddress": {
                  "description": "Passport wallet address",
                  "type": "string"
                },
                "perksWalletAddress": {
                  "description": "Perks wallet address",
                  "type": "string"
                },
                "email": {
                  "description": "Email",
                  "type": "string"
                },
                "isPremium": {
                  "description": "Premium status",
                  "type": "boolean"
                },
                "totalQuestCompleted": {
                  "description": "Total quests completed",
                  "type": "number"
                },
                "totalTravelDistance": {
                  "description": "Total travel distance",
                  "type": "number"
                },
                "role": {
                  "description": "User role",
                  "type": "string",
                  "enum": [
                    "USER",
                    "MODERATOR",
                    "ADMIN"
                  ],
                  "x-enumNames": [
                    "USER",
                    "MODERATOR",
                    "ADMIN"
                  ]
                },
                "registeredAt": {
                  "description": "Registration date"
                },
                "discordJoinedAt": {
                  "description": "Discord joined date"
                },
                "isBanned": {
                  "description": "Ban status",
                  "type": "boolean"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                },
                "userInfo": {
                  "description": "User info",
                  "type": "object",
                  "properties": {
                    "userId": {
                      "description": "User ID",
                      "type": "string"
                    },
                    "digitalPassportAddress": {
                      "description": "Digital passport NFT address",
                      "type": "string"
                    },
                    "logNftAddress": {
                      "description": "Log NFT address",
                      "type": "string"
                    },
                    "userDigitalPassportType": {
                      "description": "Digital passport type",
                      "type": "string",
                      "enum": [
                        "BONJIN",
                        "AMATSUKAMI",
                        "KUNITSUKAMI",
                        "YOKAI"
                      ],
                      "x-enumNames": [
                        "BONJIN",
                        "AMATSUKAMI",
                        "KUNITSUKAMI",
                        "YOKAI"
                      ]
                    },
                    "level": {
                      "description": "User level",
                      "type": "string",
                      "enum": [
                        "BONJIN",
                        "E_CLASS_AMATSUKAMI",
                        "E_CLASS_KUNITSUKAMI",
                        "E_CLASS_YOKAI",
                        "D_CLASS_AMATSUKAMI",
                        "D_CLASS_KUNITSUKAMI",
                        "D_CLASS_YOKAI",
                        "C_CLASS_AMATSUKAMI",
                        "C_CLASS_KUNITSUKAMI",
                        "C_CLASS_YOKAI",
                        "B_CLASS_AMATSUKAMI",
                        "B_CLASS_KUNITSUKAMI",
                        "B_CLASS_YOKAI",
                        "A_CLASS_AMATSUKAMI",
                        "A_CLASS_KUNITSUKAMI",
                        "A_CLASS_YOKAI",
                        "S_CLASS_AMATSUKAMI",
                        "S_CLASS_KUNITSUKAMI",
                        "S_CLASS_YOKAI"
                      ],
                      "x-enumNames": [
                        "BONJIN",
                        "E_CLASS_AMATSUKAMI",
                        "E_CLASS_KUNITSUKAMI",
                        "E_CLASS_YOKAI",
                        "D_CLASS_AMATSUKAMI",
                        "D_CLASS_KUNITSUKAMI",
                        "D_CLASS_YOKAI",
                        "C_CLASS_AMATSUKAMI",
                        "C_CLASS_KUNITSUKAMI",
                        "C_CLASS_YOKAI",
                        "B_CLASS_AMATSUKAMI",
                        "B_CLASS_KUNITSUKAMI",
                        "B_CLASS_YOKAI",
                        "A_CLASS_AMATSUKAMI",
                        "A_CLASS_KUNITSUKAMI",
                        "A_CLASS_YOKAI",
                        "S_CLASS_AMATSUKAMI",
                        "S_CLASS_KUNITSUKAMI",
                        "S_CLASS_YOKAI"
                      ]
                    },
                    "discountRate": {
                      "description": "User discount rate",
                      "type": "number"
                    },
                    "magatamaPoints": {
                      "description": "Magatama points balance",
                      "type": "number"
                    },
                    "magatamaBags": {
                      "description": "Magatama bags count",
                      "type": "number"
                    },
                    "totalQuestCompleted": {
                      "description": "Total quests completed",
                      "type": "number"
                    },
                    "totalTravelDistance": {
                      "description": "Total travel distance",
                      "type": "number"
                    },
                    "isPremium": {
                      "description": "Premium status",
                      "type": "boolean"
                    },
                    "prayerBead": {
                      "description": "Prayer bead count",
                      "type": "number"
                    },
                    "sword": {
                      "description": "Sword count",
                      "type": "number"
                    },
                    "orgeMask": {
                      "description": "Orge mask count",
                      "type": "number"
                    },
                    "delFlag": {
                      "description": "Flag to indicate if the record is deleted",
                      "type": "boolean"
                    },
                    "insUserId": {
                      "description": "ID of user who created this record",
                      "type": "string"
                    },
                    "insDateTime": {
                      "description": "Timestamp of record creation",
                      "type": "string"
                    },
                    "updUserId": {
                      "description": "ID of user who last updated this record",
                      "type": "string"
                    },
                    "updDateTime": {
                      "description": "Timestamp of last record update",
                      "type": "string"
                    }
                  },
                  "required": [
                    "userId",
                    "digitalPassportAddress",
                    "logNftAddress",
                    "magatamaPoints",
                    "totalQuestCompleted",
                    "totalTravelDistance",
                    "isPremium"
                  ]
                },
                "userAchievements": {
                  "description": "User achievements",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userAchievementId": {
                        "description": "Achievement ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "achievementName": {
                        "description": "Achievement name",
                        "type": "string"
                      },
                      "achievementDesc": {
                        "description": "Achievement description",
                        "type": "string"
                      },
                      "iconUrl": {
                        "description": "Icon URL",
                        "type": "string"
                      },
                      "achievementType": {
                        "description": "Achievement type",
                        "type": "string",
                        "enum": [
                          "UNKNOWN",
                          "STORY",
                          "TRAVEL",
                          "EXPLORE",
                          "COMMUNITY",
                          "MILESTONE"
                        ],
                        "x-enumNames": [
                          "UNKNOWN",
                          "STORY",
                          "TRAVEL",
                          "EXPLORE",
                          "COMMUNITY",
                          "MILESTONE"
                        ]
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded",
                        "type": "number"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userAchievementId",
                      "userId",
                      "achievementName",
                      "achievementType",
                      "magatamaPointAwarded"
                    ]
                  }
                },
                "userOnchainItems": {
                  "description": "User onchain items",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userOnchainItemId": {
                        "description": "Onchain item ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "itemType": {
                        "description": "Item type",
                        "type": "string",
                        "enum": [
                          "UNKNOWN",
                          "LOG_NFT",
                          "DIGITAL_PASSPORT",
                          "PERK"
                        ],
                        "x-enumNames": [
                          "UNKNOWN",
                          "LOG_NFT",
                          "DIGITAL_PASSPORT",
                          "PERK"
                        ]
                      },
                      "itemTxnHash": {
                        "description": "Transaction hash",
                        "type": "string"
                      },
                      "blockchainType": {
                        "description": "Blockchain type",
                        "type": "string",
                        "enum": [
                          "UNKNOWN",
                          "VARA",
                          "CAMINO"
                        ],
                        "x-enumNames": [
                          "UNKNOWN",
                          "VARA",
                          "CAMINO"
                        ]
                      },
                      "mintedAt": {
                        "description": "Minted date"
                      },
                      "onchainItemId": {
                        "description": "Onchain item ID",
                        "type": "string"
                      },
                      "status": {
                        "description": "Item status",
                        "type": "string",
                        "enum": [
                          "ACTIVE",
                          "USED",
                          "EXPIRED",
                          "PENDING"
                        ],
                        "x-enumNames": [
                          "ACTIVE",
                          "USED",
                          "EXPIRED",
                          "PENDING"
                        ]
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userOnchainItemId",
                      "itemType",
                      "itemTxnHash",
                      "blockchainType",
                      "status"
                    ]
                  }
                },
                "userItemClaimLogs": {
                  "description": "User item claim logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userItemClaimLogId": {
                        "description": "Item claim log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "onchainItemId": {
                        "description": "Onchain item ID",
                        "type": "string"
                      },
                      "offchainItemName": {
                        "description": "Offchain item name",
                        "type": "string"
                      },
                      "itemAmount": {
                        "description": "Item amount",
                        "type": "number"
                      },
                      "itemDetails": {
                        "description": "Item details",
                        "type": "string"
                      },
                      "type": {
                        "description": "Item type",
                        "type": "string",
                        "enum": [
                          "ONCHAIN",
                          "OFFCHAIN"
                        ],
                        "x-enumNames": [
                          "ONCHAIN",
                          "OFFCHAIN"
                        ]
                      },
                      "claimedAt": {
                        "description": "Claimed date"
                      },
                      "status": {
                        "description": "Claim status",
                        "type": "string",
                        "enum": [
                          "SUCCESS",
                          "FAILED"
                        ],
                        "x-enumNames": [
                          "SUCCESS",
                          "FAILED"
                        ]
                      },
                      "errorMsg": {
                        "description": "Error message",
                        "type": "string"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userItemClaimLogId",
                      "userId",
                      "itemAmount",
                      "type",
                      "status"
                    ]
                  }
                },
                "userStoryLogs": {
                  "description": "User story logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userStoryLogId": {
                        "description": "Story log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "storyChapterId": {
                        "description": "Story chapter ID",
                        "type": "string"
                      },
                      "status": {
                        "description": "Story status",
                        "type": "string",
                        "enum": [
                          "UNREAD",
                          "IN_PROGRESS",
                          "COMPLETED"
                        ],
                        "x-enumNames": [
                          "UNREAD",
                          "IN_PROGRESS",
                          "COMPLETED"
                        ]
                      },
                      "unlockedAt": {
                        "description": "Unlocked date"
                      },
                      "finishedAt": {
                        "description": "Finished date"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userStoryLogId",
                      "userId",
                      "storyChapterId",
                      "status"
                    ]
                  }
                },
                "userTaskLogs": {
                  "description": "User task logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userTaskLogId": {
                        "description": "Task log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "questId": {
                        "description": "Quest ID",
                        "type": "string"
                      },
                      "taskId": {
                        "description": "Task ID",
                        "type": "string"
                      },
                      "status": {
                        "description": "Task status",
                        "type": "string",
                        "enum": [
                          "AVAILABLE",
                          "ONGOING",
                          "COMPLETED",
                          "FAILED"
                        ],
                        "x-enumNames": [
                          "AVAILABLE",
                          "ONGOING",
                          "COMPLETED",
                          "FAILED"
                        ]
                      },
                      "action": {
                        "description": "Task action type",
                        "type": "string",
                        "enum": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ],
                        "x-enumNames": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ]
                      },
                      "userResponse": {
                        "description": "User response",
                        "type": "string"
                      },
                      "groupActivityMembers": {
                        "description": "Group activity members",
                        "type": "array",
                        "items": {}
                      },
                      "submissionData": {
                        "description": "Submission data"
                      },
                      "failedReason": {
                        "description": "Failed reason",
                        "type": "string"
                      },
                      "completedAt": {
                        "description": "Completed date"
                      },
                      "claimedAt": {
                        "description": "Claimed date"
                      },
                      "totalMagatamaPointAwarded": {
                        "description": "Total magatama points awarded",
                        "type": "number"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userTaskLogId",
                      "userId",
                      "questId",
                      "taskId",
                      "status",
                      "action",
                      "groupActivityMembers",
                      "totalMagatamaPointAwarded"
                    ]
                  }
                },
                "userTravelLogs": {
                  "description": "User travel logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userTravelLogId": {
                        "description": "Travel log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "questId": {
                        "description": "Quest ID",
                        "type": "string"
                      },
                      "taskId": {
                        "description": "Task ID",
                        "type": "string"
                      },
                      "touristSpotId": {
                        "description": "Tourist spot ID",
                        "type": "string"
                      },
                      "userLongitude": {
                        "description": "User longitude",
                        "type": "number"
                      },
                      "userLatitude": {
                        "description": "User latitude",
                        "type": "number"
                      },
                      "travelDistanceFromTarget": {
                        "description": "Distance from target",
                        "type": "number"
                      },
                      "travelDistance": {
                        "description": "Travel distance",
                        "type": "number"
                      },
                      "qrCodeValue": {
                        "description": "QR code value",
                        "type": "string"
                      },
                      "checkInMethod": {
                        "description": "Check-in method",
                        "type": "string",
                        "enum": [
                          "QR_CODE",
                          "GPS",
                          "AUTO_DETECTED",
                          "BACKGROUND_GPS"
                        ],
                        "x-enumNames": [
                          "QR_CODE",
                          "GPS",
                          "AUTO_DETECTED",
                          "BACKGROUND_GPS"
                        ]
                      },
                      "detectedFraud": {
                        "description": "Fraud detected",
                        "type": "boolean"
                      },
                      "fraudReason": {
                        "description": "Fraud reason",
                        "type": "string"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userTravelLogId",
                      "userId",
                      "questId",
                      "taskId",
                      "touristSpotId",
                      "userLongitude",
                      "userLatitude",
                      "travelDistance"
                    ]
                  }
                },
                "discordActivityLogs": {
                  "description": "Discord activity logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "discordActivityLogId": {
                        "description": "Discord activity log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "activityType": {
                        "description": "Activity type",
                        "type": "string"
                      },
                      "activityDetails": {
                        "description": "Activity details",
                        "type": "string"
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded",
                        "type": "number"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "discordActivityLogId",
                      "userId",
                      "activityType",
                      "magatamaPointAwarded"
                    ]
                  }
                },
                "discordUserRoles": {
                  "description": "Discord user roles",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "discordUserRolesId": {
                        "description": "Discord user roles ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "roleId": {
                        "description": "Role ID",
                        "type": "string"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "discordUserRolesId",
                      "userId",
                      "roleId"
                    ]
                  }
                },
                "discordRewardedRoles": {
                  "description": "Discord rewarded roles",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "discordRewardedRolesId": {
                        "description": "Discord rewarded roles ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "roleId": {
                        "description": "Role ID",
                        "type": "string"
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded",
                        "type": "number"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "discordRewardedRolesId",
                      "userId",
                      "roleId",
                      "magatamaPointAwarded"
                    ]
                  }
                },
                "userInviteLogs": {
                  "description": "User invite logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "inviteLogId": {
                        "description": "Invite log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "inviteeDiscordId": {
                        "description": "Invitee Discord ID",
                        "type": "string"
                      },
                      "inviteeUserId": {
                        "description": "Invitee user ID",
                        "type": "string"
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded",
                        "type": "number"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "inviteLogId",
                      "userId",
                      "magatamaPointAwarded"
                    ]
                  }
                }
              },
              "required": [
                "userId",
                "username",
                "isPremium",
                "totalQuestCompleted",
                "totalTravelDistance",
                "role",
                "registeredAt",
                "discordJoinedAt",
                "isBanned"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid request body or version",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_001"
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_004"
                    },
                    "message": {
                      "type": "string",
                      "example": "User is not registered"
                    },
                    "type": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get current user's basic profile",
        "tags": [
          "User"
        ]
      }
    },
    "/checkins": {
      "get": {
        "description": "Retrieve user travel checkin history with location coordinates for map rendering. Supports pagination and filtering by quest, tourist spot, and date range.",
        "operationId": "TouriiBackendController_getCheckins",
        "parameters": [
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Filter to date (ISO format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Filter from date (ISO format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "touristSpotId",
            "required": false,
            "in": "query",
            "description": "Filter by specific tourist spot ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "questId",
            "required": false,
            "in": "query",
            "description": "Filter by specific quest ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "description": "Filter by specific user ID (admin only)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page (default: 20, max: 100)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User travel checkins retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "checkins": {
                  "description": "List of user travel log checkins",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userTravelLogId": {
                        "description": "Travel log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "questId": {
                        "description": "Quest ID",
                        "type": "string"
                      },
                      "taskId": {
                        "description": "Task ID",
                        "type": "string"
                      },
                      "touristSpotId": {
                        "description": "Tourist spot ID",
                        "type": "string"
                      },
                      "userLongitude": {
                        "description": "User longitude",
                        "type": "number"
                      },
                      "userLatitude": {
                        "description": "User latitude",
                        "type": "number"
                      },
                      "travelDistanceFromTarget": {
                        "description": "Distance from target",
                        "type": "number"
                      },
                      "travelDistance": {
                        "description": "Travel distance",
                        "type": "number"
                      },
                      "qrCodeValue": {
                        "description": "QR code value",
                        "type": "string"
                      },
                      "checkInMethod": {
                        "description": "Check-in method",
                        "type": "string",
                        "enum": [
                          "QR_CODE",
                          "GPS",
                          "AUTO_DETECTED",
                          "BACKGROUND_GPS"
                        ],
                        "x-enumNames": [
                          "QR_CODE",
                          "GPS",
                          "AUTO_DETECTED",
                          "BACKGROUND_GPS"
                        ]
                      },
                      "detectedFraud": {
                        "description": "Fraud detected",
                        "type": "boolean"
                      },
                      "fraudReason": {
                        "description": "Fraud reason",
                        "type": "string"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userTravelLogId",
                      "userId",
                      "questId",
                      "taskId",
                      "touristSpotId",
                      "userLongitude",
                      "userLatitude",
                      "travelDistance"
                    ]
                  }
                },
                "pagination": {
                  "description": "Pagination information",
                  "type": "object",
                  "properties": {
                    "currentPage": {
                      "description": "Current page number",
                      "type": "number"
                    },
                    "totalPages": {
                      "description": "Total number of pages",
                      "type": "number"
                    },
                    "totalItems": {
                      "description": "Total number of items",
                      "type": "number"
                    }
                  },
                  "required": [
                    "currentPage",
                    "totalPages",
                    "totalItems"
                  ]
                }
              },
              "required": [
                "checkins",
                "pagination"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTravelLogListResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get User Travel Checkins",
        "tags": [
          "User"
        ]
      }
    },
    "/admin/users": {
      "get": {
        "description": "Retrieve all users with comprehensive details, pagination, and advanced filtering options for admin dashboard.",
        "operationId": "TouriiBackendController_getAllUsersForAdmin",
        "parameters": [
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order (default: desc)",
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Sort field (default: registered_at)",
            "schema": {
              "enum": [
                "username",
                "registered_at",
                "total_quest_completed",
                "total_travel_distance"
              ],
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Filter by registration end date (ISO format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Filter by registration start date (ISO format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isBanned",
            "required": false,
            "in": "query",
            "description": "Filter by banned status (true/false)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isPremium",
            "required": false,
            "in": "query",
            "description": "Filter by premium status (true/false)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": false,
            "in": "query",
            "description": "Filter by user role",
            "schema": {
              "enum": [
                "USER",
                "MODERATOR",
                "ADMIN"
              ],
              "type": "string"
            }
          },
          {
            "name": "searchTerm",
            "required": false,
            "in": "query",
            "description": "Search in username, email, discord/twitter usernames",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Users per page (default: 20, max: 100)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All users retrieved successfully with pagination and filtering",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "description": "List of users",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "username": {
                        "description": "Username",
                        "type": "string"
                      },
                      "discordId": {
                        "description": "Discord ID",
                        "type": "string"
                      },
                      "discordUsername": {
                        "description": "Discord username",
                        "type": "string"
                      },
                      "twitterId": {
                        "description": "Twitter ID",
                        "type": "string"
                      },
                      "twitterUsername": {
                        "description": "Twitter username",
                        "type": "string"
                      },
                      "googleEmail": {
                        "description": "Google email",
                        "type": "string"
                      },
                      "email": {
                        "description": "Email",
                        "type": "string"
                      },
                      "passportWalletAddress": {
                        "description": "Passport wallet address",
                        "type": "string"
                      },
                      "perksWalletAddress": {
                        "description": "Perks wallet address",
                        "type": "string"
                      },
                      "latestIpAddress": {
                        "description": "Latest IP address",
                        "type": "string"
                      },
                      "isPremium": {
                        "description": "Premium status",
                        "type": "boolean"
                      },
                      "totalQuestCompleted": {
                        "description": "Total quests completed",
                        "type": "number"
                      },
                      "totalTravelDistance": {
                        "description": "Total travel distance",
                        "type": "number"
                      },
                      "role": {
                        "description": "User role",
                        "type": "string",
                        "enum": [
                          "USER",
                          "MODERATOR",
                          "ADMIN"
                        ],
                        "x-enumNames": [
                          "USER",
                          "MODERATOR",
                          "ADMIN"
                        ]
                      },
                      "registeredAt": {
                        "description": "Registration date"
                      },
                      "discordJoinedAt": {
                        "description": "Discord joined date"
                      },
                      "isBanned": {
                        "description": "Ban status",
                        "type": "boolean"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      },
                      "userInfo": {
                        "description": "User detailed info",
                        "type": "object",
                        "properties": {
                          "userId": {
                            "description": "User ID",
                            "type": "string"
                          },
                          "digitalPassportAddress": {
                            "description": "Digital passport NFT address",
                            "type": "string"
                          },
                          "logNftAddress": {
                            "description": "Log NFT address",
                            "type": "string"
                          },
                          "userDigitalPassportType": {
                            "description": "Digital passport type",
                            "type": "string",
                            "enum": [
                              "BONJIN",
                              "AMATSUKAMI",
                              "KUNITSUKAMI",
                              "YOKAI"
                            ],
                            "x-enumNames": [
                              "BONJIN",
                              "AMATSUKAMI",
                              "KUNITSUKAMI",
                              "YOKAI"
                            ]
                          },
                          "level": {
                            "description": "User level",
                            "type": "string",
                            "enum": [
                              "BONJIN",
                              "E_CLASS_AMATSUKAMI",
                              "E_CLASS_KUNITSUKAMI",
                              "E_CLASS_YOKAI",
                              "D_CLASS_AMATSUKAMI",
                              "D_CLASS_KUNITSUKAMI",
                              "D_CLASS_YOKAI",
                              "C_CLASS_AMATSUKAMI",
                              "C_CLASS_KUNITSUKAMI",
                              "C_CLASS_YOKAI",
                              "B_CLASS_AMATSUKAMI",
                              "B_CLASS_KUNITSUKAMI",
                              "B_CLASS_YOKAI",
                              "A_CLASS_AMATSUKAMI",
                              "A_CLASS_KUNITSUKAMI",
                              "A_CLASS_YOKAI",
                              "S_CLASS_AMATSUKAMI",
                              "S_CLASS_KUNITSUKAMI",
                              "S_CLASS_YOKAI"
                            ],
                            "x-enumNames": [
                              "BONJIN",
                              "E_CLASS_AMATSUKAMI",
                              "E_CLASS_KUNITSUKAMI",
                              "E_CLASS_YOKAI",
                              "D_CLASS_AMATSUKAMI",
                              "D_CLASS_KUNITSUKAMI",
                              "D_CLASS_YOKAI",
                              "C_CLASS_AMATSUKAMI",
                              "C_CLASS_KUNITSUKAMI",
                              "C_CLASS_YOKAI",
                              "B_CLASS_AMATSUKAMI",
                              "B_CLASS_KUNITSUKAMI",
                              "B_CLASS_YOKAI",
                              "A_CLASS_AMATSUKAMI",
                              "A_CLASS_KUNITSUKAMI",
                              "A_CLASS_YOKAI",
                              "S_CLASS_AMATSUKAMI",
                              "S_CLASS_KUNITSUKAMI",
                              "S_CLASS_YOKAI"
                            ]
                          },
                          "discountRate": {
                            "description": "User discount rate",
                            "type": "number"
                          },
                          "magatamaPoints": {
                            "description": "Magatama points balance",
                            "type": "number"
                          },
                          "magatamaBags": {
                            "description": "Magatama bags count",
                            "type": "number"
                          },
                          "totalQuestCompleted": {
                            "description": "Total quests completed",
                            "type": "number"
                          },
                          "totalTravelDistance": {
                            "description": "Total travel distance",
                            "type": "number"
                          },
                          "isPremium": {
                            "description": "Premium status",
                            "type": "boolean"
                          },
                          "prayerBead": {
                            "description": "Prayer bead count",
                            "type": "number"
                          },
                          "sword": {
                            "description": "Sword count",
                            "type": "number"
                          },
                          "orgeMask": {
                            "description": "Orge mask count",
                            "type": "number"
                          },
                          "delFlag": {
                            "description": "Flag to indicate if the record is deleted",
                            "type": "boolean"
                          },
                          "insUserId": {
                            "description": "ID of user who created this record",
                            "type": "string"
                          },
                          "insDateTime": {
                            "description": "Timestamp of record creation",
                            "type": "string"
                          },
                          "updUserId": {
                            "description": "ID of user who last updated this record",
                            "type": "string"
                          },
                          "updDateTime": {
                            "description": "Timestamp of last record update",
                            "type": "string"
                          }
                        },
                        "required": [
                          "userId",
                          "digitalPassportAddress",
                          "logNftAddress",
                          "magatamaPoints",
                          "totalQuestCompleted",
                          "totalTravelDistance",
                          "isPremium"
                        ]
                      },
                      "userAchievements": {
                        "description": "User achievements",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "userAchievementId": {
                              "description": "Achievement ID",
                              "type": "string"
                            },
                            "userId": {
                              "description": "User ID",
                              "type": "string"
                            },
                            "achievementName": {
                              "description": "Achievement name",
                              "type": "string"
                            },
                            "achievementDesc": {
                              "description": "Achievement description",
                              "type": "string"
                            },
                            "iconUrl": {
                              "description": "Icon URL",
                              "type": "string"
                            },
                            "achievementType": {
                              "description": "Achievement type",
                              "type": "string",
                              "enum": [
                                "UNKNOWN",
                                "STORY",
                                "TRAVEL",
                                "EXPLORE",
                                "COMMUNITY",
                                "MILESTONE"
                              ],
                              "x-enumNames": [
                                "UNKNOWN",
                                "STORY",
                                "TRAVEL",
                                "EXPLORE",
                                "COMMUNITY",
                                "MILESTONE"
                              ]
                            },
                            "magatamaPointAwarded": {
                              "description": "Magatama points awarded",
                              "type": "number"
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "userAchievementId",
                            "userId",
                            "achievementName",
                            "achievementType",
                            "magatamaPointAwarded"
                          ]
                        }
                      },
                      "userOnchainItems": {
                        "description": "User onchain items",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "userOnchainItemId": {
                              "description": "Onchain item ID",
                              "type": "string"
                            },
                            "userId": {
                              "description": "User ID",
                              "type": "string"
                            },
                            "itemType": {
                              "description": "Item type",
                              "type": "string",
                              "enum": [
                                "UNKNOWN",
                                "LOG_NFT",
                                "DIGITAL_PASSPORT",
                                "PERK"
                              ],
                              "x-enumNames": [
                                "UNKNOWN",
                                "LOG_NFT",
                                "DIGITAL_PASSPORT",
                                "PERK"
                              ]
                            },
                            "itemTxnHash": {
                              "description": "Transaction hash",
                              "type": "string"
                            },
                            "blockchainType": {
                              "description": "Blockchain type",
                              "type": "string",
                              "enum": [
                                "UNKNOWN",
                                "VARA",
                                "CAMINO"
                              ],
                              "x-enumNames": [
                                "UNKNOWN",
                                "VARA",
                                "CAMINO"
                              ]
                            },
                            "mintedAt": {
                              "description": "Minted date"
                            },
                            "onchainItemId": {
                              "description": "Onchain item ID",
                              "type": "string"
                            },
                            "status": {
                              "description": "Item status",
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "USED",
                                "EXPIRED",
                                "PENDING"
                              ],
                              "x-enumNames": [
                                "ACTIVE",
                                "USED",
                                "EXPIRED",
                                "PENDING"
                              ]
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "userOnchainItemId",
                            "itemType",
                            "itemTxnHash",
                            "blockchainType",
                            "status"
                          ]
                        }
                      },
                      "userItemClaimLogs": {
                        "description": "User item claim logs",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "userItemClaimLogId": {
                              "description": "Item claim log ID",
                              "type": "string"
                            },
                            "userId": {
                              "description": "User ID",
                              "type": "string"
                            },
                            "onchainItemId": {
                              "description": "Onchain item ID",
                              "type": "string"
                            },
                            "offchainItemName": {
                              "description": "Offchain item name",
                              "type": "string"
                            },
                            "itemAmount": {
                              "description": "Item amount",
                              "type": "number"
                            },
                            "itemDetails": {
                              "description": "Item details",
                              "type": "string"
                            },
                            "type": {
                              "description": "Item type",
                              "type": "string",
                              "enum": [
                                "ONCHAIN",
                                "OFFCHAIN"
                              ],
                              "x-enumNames": [
                                "ONCHAIN",
                                "OFFCHAIN"
                              ]
                            },
                            "claimedAt": {
                              "description": "Claimed date"
                            },
                            "status": {
                              "description": "Claim status",
                              "type": "string",
                              "enum": [
                                "SUCCESS",
                                "FAILED"
                              ],
                              "x-enumNames": [
                                "SUCCESS",
                                "FAILED"
                              ]
                            },
                            "errorMsg": {
                              "description": "Error message",
                              "type": "string"
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "userItemClaimLogId",
                            "userId",
                            "itemAmount",
                            "type",
                            "status"
                          ]
                        }
                      },
                      "userStoryLogs": {
                        "description": "User story logs",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "userStoryLogId": {
                              "description": "Story log ID",
                              "type": "string"
                            },
                            "userId": {
                              "description": "User ID",
                              "type": "string"
                            },
                            "storyChapterId": {
                              "description": "Story chapter ID",
                              "type": "string"
                            },
                            "status": {
                              "description": "Story status",
                              "type": "string",
                              "enum": [
                                "UNREAD",
                                "IN_PROGRESS",
                                "COMPLETED"
                              ],
                              "x-enumNames": [
                                "UNREAD",
                                "IN_PROGRESS",
                                "COMPLETED"
                              ]
                            },
                            "unlockedAt": {
                              "description": "Unlocked date"
                            },
                            "finishedAt": {
                              "description": "Finished date"
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "userStoryLogId",
                            "userId",
                            "storyChapterId",
                            "status"
                          ]
                        }
                      },
                      "userTaskLogs": {
                        "description": "User task logs",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "userTaskLogId": {
                              "description": "Task log ID",
                              "type": "string"
                            },
                            "userId": {
                              "description": "User ID",
                              "type": "string"
                            },
                            "questId": {
                              "description": "Quest ID",
                              "type": "string"
                            },
                            "taskId": {
                              "description": "Task ID",
                              "type": "string"
                            },
                            "status": {
                              "description": "Task status",
                              "type": "string",
                              "enum": [
                                "AVAILABLE",
                                "ONGOING",
                                "COMPLETED",
                                "FAILED"
                              ],
                              "x-enumNames": [
                                "AVAILABLE",
                                "ONGOING",
                                "COMPLETED",
                                "FAILED"
                              ]
                            },
                            "action": {
                              "description": "Task action type",
                              "type": "string",
                              "enum": [
                                "VISIT_LOCATION",
                                "PHOTO_UPLOAD",
                                "ANSWER_TEXT",
                                "SELECT_OPTION",
                                "SHARE_SOCIAL",
                                "CHECK_IN",
                                "GROUP_ACTIVITY",
                                "LOCAL_INTERACTION"
                              ],
                              "x-enumNames": [
                                "VISIT_LOCATION",
                                "PHOTO_UPLOAD",
                                "ANSWER_TEXT",
                                "SELECT_OPTION",
                                "SHARE_SOCIAL",
                                "CHECK_IN",
                                "GROUP_ACTIVITY",
                                "LOCAL_INTERACTION"
                              ]
                            },
                            "userResponse": {
                              "description": "User response",
                              "type": "string"
                            },
                            "groupActivityMembers": {
                              "description": "Group activity members",
                              "type": "array",
                              "items": {}
                            },
                            "submissionData": {
                              "description": "Submission data"
                            },
                            "failedReason": {
                              "description": "Failed reason",
                              "type": "string"
                            },
                            "completedAt": {
                              "description": "Completed date"
                            },
                            "claimedAt": {
                              "description": "Claimed date"
                            },
                            "totalMagatamaPointAwarded": {
                              "description": "Total magatama points awarded",
                              "type": "number"
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "userTaskLogId",
                            "userId",
                            "questId",
                            "taskId",
                            "status",
                            "action",
                            "groupActivityMembers",
                            "totalMagatamaPointAwarded"
                          ]
                        }
                      },
                      "userTravelLogs": {
                        "description": "User travel logs",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "userTravelLogId": {
                              "description": "Travel log ID",
                              "type": "string"
                            },
                            "userId": {
                              "description": "User ID",
                              "type": "string"
                            },
                            "questId": {
                              "description": "Quest ID",
                              "type": "string"
                            },
                            "taskId": {
                              "description": "Task ID",
                              "type": "string"
                            },
                            "touristSpotId": {
                              "description": "Tourist spot ID",
                              "type": "string"
                            },
                            "userLongitude": {
                              "description": "User longitude",
                              "type": "number"
                            },
                            "userLatitude": {
                              "description": "User latitude",
                              "type": "number"
                            },
                            "travelDistanceFromTarget": {
                              "description": "Distance from target",
                              "type": "number"
                            },
                            "travelDistance": {
                              "description": "Travel distance",
                              "type": "number"
                            },
                            "qrCodeValue": {
                              "description": "QR code value",
                              "type": "string"
                            },
                            "checkInMethod": {
                              "description": "Check-in method",
                              "type": "string",
                              "enum": [
                                "QR_CODE",
                                "GPS",
                                "AUTO_DETECTED",
                                "BACKGROUND_GPS"
                              ],
                              "x-enumNames": [
                                "QR_CODE",
                                "GPS",
                                "AUTO_DETECTED",
                                "BACKGROUND_GPS"
                              ]
                            },
                            "detectedFraud": {
                              "description": "Fraud detected",
                              "type": "boolean"
                            },
                            "fraudReason": {
                              "description": "Fraud reason",
                              "type": "string"
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "userTravelLogId",
                            "userId",
                            "questId",
                            "taskId",
                            "touristSpotId",
                            "userLongitude",
                            "userLatitude",
                            "travelDistance"
                          ]
                        }
                      },
                      "discordActivityLogs": {
                        "description": "Discord activity logs",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "discordActivityLogId": {
                              "description": "Discord activity log ID",
                              "type": "string"
                            },
                            "userId": {
                              "description": "User ID",
                              "type": "string"
                            },
                            "activityType": {
                              "description": "Activity type",
                              "type": "string"
                            },
                            "activityDetails": {
                              "description": "Activity details",
                              "type": "string"
                            },
                            "magatamaPointAwarded": {
                              "description": "Magatama points awarded",
                              "type": "number"
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "discordActivityLogId",
                            "userId",
                            "activityType",
                            "magatamaPointAwarded"
                          ]
                        }
                      },
                      "discordUserRoles": {
                        "description": "Discord user roles",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "discordUserRolesId": {
                              "description": "Discord user roles ID",
                              "type": "string"
                            },
                            "userId": {
                              "description": "User ID",
                              "type": "string"
                            },
                            "roleId": {
                              "description": "Role ID",
                              "type": "string"
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "discordUserRolesId",
                            "userId",
                            "roleId"
                          ]
                        }
                      },
                      "discordRewardedRoles": {
                        "description": "Discord rewarded roles",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "discordRewardedRolesId": {
                              "description": "Discord rewarded roles ID",
                              "type": "string"
                            },
                            "userId": {
                              "description": "User ID",
                              "type": "string"
                            },
                            "roleId": {
                              "description": "Role ID",
                              "type": "string"
                            },
                            "magatamaPointAwarded": {
                              "description": "Magatama points awarded",
                              "type": "number"
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "discordRewardedRolesId",
                            "userId",
                            "roleId",
                            "magatamaPointAwarded"
                          ]
                        }
                      },
                      "userInviteLogs": {
                        "description": "User invite logs",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "inviteLogId": {
                              "description": "Invite log ID",
                              "type": "string"
                            },
                            "userId": {
                              "description": "User ID",
                              "type": "string"
                            },
                            "inviteeDiscordId": {
                              "description": "Invitee Discord ID",
                              "type": "string"
                            },
                            "inviteeUserId": {
                              "description": "Invitee user ID",
                              "type": "string"
                            },
                            "magatamaPointAwarded": {
                              "description": "Magatama points awarded",
                              "type": "number"
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "inviteLogId",
                            "userId",
                            "magatamaPointAwarded"
                          ]
                        }
                      },
                      "summaryStats": {
                        "description": "Summary statistics for admin view",
                        "type": "object",
                        "properties": {
                          "achievementCount": {
                            "description": "Total achievements earned",
                            "type": "number"
                          },
                          "onchainItemCount": {
                            "description": "Total onchain items",
                            "type": "number"
                          },
                          "storyCompletedCount": {
                            "description": "Stories completed",
                            "type": "number"
                          },
                          "taskCompletedCount": {
                            "description": "Tasks completed",
                            "type": "number"
                          },
                          "totalCheckinsCount": {
                            "description": "Total check-ins",
                            "type": "number"
                          },
                          "discordActivityCount": {
                            "description": "Discord activities",
                            "type": "number"
                          },
                          "invitesSentCount": {
                            "description": "Invitations sent",
                            "type": "number"
                          }
                        },
                        "required": [
                          "achievementCount",
                          "onchainItemCount",
                          "storyCompletedCount",
                          "taskCompletedCount",
                          "totalCheckinsCount",
                          "discordActivityCount",
                          "invitesSentCount"
                        ]
                      }
                    },
                    "required": [
                      "userId",
                      "username",
                      "isPremium",
                      "totalQuestCompleted",
                      "totalTravelDistance",
                      "role",
                      "registeredAt",
                      "discordJoinedAt",
                      "isBanned"
                    ]
                  }
                },
                "pagination": {
                  "description": "Pagination information",
                  "type": "object",
                  "properties": {
                    "totalCount": {
                      "description": "Total number of users",
                      "type": "number"
                    },
                    "page": {
                      "description": "Current page number",
                      "type": "number"
                    },
                    "limit": {
                      "description": "Users per page",
                      "type": "number"
                    },
                    "totalPages": {
                      "description": "Total number of pages",
                      "type": "number"
                    }
                  },
                  "required": [
                    "totalCount",
                    "page",
                    "limit",
                    "totalPages"
                  ]
                },
                "filters": {
                  "description": "Applied filters",
                  "type": "object",
                  "properties": {
                    "searchTerm": {
                      "description": "Applied search term",
                      "type": "string"
                    },
                    "role": {
                      "description": "Applied role filter",
                      "type": "string"
                    },
                    "isPremium": {
                      "description": "Applied premium filter",
                      "type": "boolean"
                    },
                    "isBanned": {
                      "description": "Applied banned filter",
                      "type": "boolean"
                    },
                    "startDate": {
                      "description": "Applied start date filter"
                    },
                    "endDate": {
                      "description": "Applied end date filter"
                    },
                    "sortBy": {
                      "description": "Applied sort field",
                      "type": "string"
                    },
                    "sortOrder": {
                      "description": "Applied sort order",
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "users",
                "pagination",
                "filters"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserListResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get all users with pagination and filtering (Admin only)",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/pending-submissions": {
      "get": {
        "description": "Retrieve photo upload, social share, and text answer submissions awaiting admin approval.",
        "operationId": "TouriiBackendController_getPendingSubmissions",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Submissions per page (default: 20, max: 100)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "taskType",
            "required": false,
            "in": "query",
            "description": "Filter by task type",
            "schema": {
              "enum": [
                "PHOTO_UPLOAD",
                "SHARE_SOCIAL",
                "ANSWER_TEXT",
                "LOCAL_INTERACTION"
              ],
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pending submissions retrieved successfully"
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get pending task submissions for manual verification (Admin only)",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/submissions/{id}/verify": {
      "post": {
        "description": "Admin endpoint to approve or reject pending photo/social share/text answer submissions.",
        "operationId": "TouriiBackendController_verifySubmission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Submission verification request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySubmissionRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Submission verification completed"
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Manually approve or reject task submission (Admin only)",
        "tags": [
          "Admin"
        ]
      }
    },
    "/stories": {
      "post": {
        "description": "Create a new story saga with optional chapters.",
        "operationId": "TouriiBackendController_createStory",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Story Saga creation request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sagaName": {
                    "description": "Name of the story saga (e.g., 'Prologue', 'Bungo Ono')",
                    "type": "string"
                  },
                  "sagaDesc": {
                    "description": "Detailed description of the saga's narrative",
                    "type": "string"
                  },
                  "backgroundMedia": {
                    "description": "URL to the saga's cover media (image or video)",
                    "type": "string"
                  },
                  "mapImage": {
                    "description": "URL to the map image for the saga",
                    "type": "string"
                  },
                  "location": {
                    "description": "Real-world location of the saga (e.g., 'Tokyo')",
                    "type": "string"
                  },
                  "order": {
                    "description": "Display order in the saga list",
                    "type": "number"
                  },
                  "isPrologue": {
                    "description": "Whether the saga is a prologue",
                    "type": "boolean"
                  },
                  "isSelected": {
                    "description": "Whether the saga is selected by default",
                    "type": "boolean"
                  },
                  "chapterList": {
                    "description": "List of chapters in the saga",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "touristSpotId": {
                          "description": "Unique identifier for the tourist spot",
                          "type": "string"
                        },
                        "chapterNumber": {
                          "description": "Chapter number or position (e.g., 'Prologue', 'Chapter 1')",
                          "type": "string"
                        },
                        "chapterTitle": {
                          "description": "Title of the story chapter",
                          "type": "string"
                        },
                        "chapterDesc": {
                          "description": "Detailed description or content of the story",
                          "type": "string"
                        },
                        "chapterImage": {
                          "description": "URL to the fictional chapter image",
                          "type": "string"
                        },
                        "characterNameList": {
                          "description": "List of character names involved in the chapter",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "realWorldImage": {
                          "description": "URL to the real-world location image",
                          "type": "string"
                        },
                        "chapterVideoUrl": {
                          "description": "URL to the chapter video for desktop viewing",
                          "type": "string"
                        },
                        "chapterVideoMobileUrl": {
                          "description": "URL to the chapter video optimized for mobile",
                          "type": "string"
                        },
                        "chapterPdfUrl": {
                          "description": "URL to the downloadable PDF version",
                          "type": "string"
                        },
                        "isUnlocked": {
                          "description": "Whether the chapter is available to users without prerequisites",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "touristSpotId",
                        "chapterNumber",
                        "chapterTitle",
                        "chapterDesc",
                        "chapterImage",
                        "characterNameList",
                        "realWorldImage",
                        "chapterVideoUrl",
                        "chapterVideoMobileUrl",
                        "chapterPdfUrl",
                        "isUnlocked"
                      ]
                    }
                  }
                },
                "required": [
                  "sagaName",
                  "sagaDesc",
                  "backgroundMedia",
                  "order",
                  "isPrologue",
                  "isSelected"
                ],
                "$ref": "#/components/schemas/StoryCreateRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created story saga",
            "schema": {
              "type": "object",
              "properties": {
                "storyId": {
                  "description": "Unique identifier for the story saga",
                  "type": "string"
                },
                "sagaName": {
                  "description": "Name of the story saga",
                  "type": "string"
                },
                "sagaDesc": {
                  "description": "Detailed description of the saga's narrative",
                  "type": "string"
                },
                "backgroundMedia": {
                  "description": "URL to the saga's cover media (image or video)",
                  "type": "string"
                },
                "mapImage": {
                  "description": "URL to the map image for the saga",
                  "type": "string"
                },
                "location": {
                  "description": "Real-world location of the saga",
                  "type": "string"
                },
                "order": {
                  "description": "Display order in the saga list",
                  "type": "number"
                },
                "isPrologue": {
                  "description": "Whether the saga is a prologue",
                  "type": "boolean"
                },
                "isSelected": {
                  "description": "Whether the saga is selected by default",
                  "type": "boolean"
                },
                "chapterList": {
                  "description": "List of stories in the saga",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "storyId": {
                        "description": "Unique identifier for the story",
                        "type": "string"
                      },
                      "touristSpotId": {
                        "description": "Unique identifier for the tourist spot",
                        "type": "string"
                      },
                      "storyChapterId": {
                        "description": "Unique identifier for the story chapter",
                        "type": "string"
                      },
                      "sagaName": {
                        "description": "Name of the saga",
                        "type": "string"
                      },
                      "chapterNumber": {
                        "description": "Chapter number or position",
                        "type": "string"
                      },
                      "chapterTitle": {
                        "description": "Title of the chapter",
                        "type": "string"
                      },
                      "chapterDesc": {
                        "description": "Detailed description of the chapter",
                        "type": "string"
                      },
                      "chapterImage": {
                        "description": "URL to the fictional chapter image",
                        "type": "string"
                      },
                      "characterNameList": {
                        "description": "List of character names involved in the chapter",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "realWorldImage": {
                        "description": "URL to the real-world location image",
                        "type": "string"
                      },
                      "chapterVideoUrl": {
                        "description": "URL to the chapter video for desktop viewing",
                        "type": "string"
                      },
                      "chapterVideoMobileUrl": {
                        "description": "URL to the chapter video optimized for mobile",
                        "type": "string"
                      },
                      "chapterPdfUrl": {
                        "description": "URL to the downloadable PDF version",
                        "type": "string"
                      },
                      "isUnlocked": {
                        "description": "Whether the chapter is available to users without prerequisites",
                        "type": "boolean"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "storyId",
                      "touristSpotId",
                      "storyChapterId",
                      "sagaName",
                      "chapterNumber",
                      "chapterTitle",
                      "chapterDesc",
                      "chapterImage",
                      "characterNameList",
                      "realWorldImage",
                      "chapterVideoUrl",
                      "chapterVideoMobileUrl",
                      "chapterPdfUrl",
                      "isUnlocked"
                    ]
                  }
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "storyId",
                "sagaName",
                "sagaDesc",
                "backgroundMedia",
                "mapImage",
                "location",
                "order",
                "isPrologue",
                "isSelected"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Create Story Saga",
        "tags": [
          "Stories"
        ]
      }
    },
    "/stories/{storyId}/chapters": {
      "post": {
        "description": "Create a new story chapter.",
        "operationId": "TouriiBackendController_createStoryChapter",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Story Chapter creation request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "touristSpotId": {
                    "description": "Unique identifier for the tourist spot",
                    "type": "string"
                  },
                  "chapterNumber": {
                    "description": "Chapter number or position (e.g., 'Prologue', 'Chapter 1')",
                    "type": "string"
                  },
                  "chapterTitle": {
                    "description": "Title of the story chapter",
                    "type": "string"
                  },
                  "chapterDesc": {
                    "description": "Detailed description or content of the story",
                    "type": "string"
                  },
                  "chapterImage": {
                    "description": "URL to the fictional chapter image",
                    "type": "string"
                  },
                  "characterNameList": {
                    "description": "List of character names involved in the chapter",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "realWorldImage": {
                    "description": "URL to the real-world location image",
                    "type": "string"
                  },
                  "chapterVideoUrl": {
                    "description": "URL to the chapter video for desktop viewing",
                    "type": "string"
                  },
                  "chapterVideoMobileUrl": {
                    "description": "URL to the chapter video optimized for mobile",
                    "type": "string"
                  },
                  "chapterPdfUrl": {
                    "description": "URL to the downloadable PDF version",
                    "type": "string"
                  },
                  "isUnlocked": {
                    "description": "Whether the chapter is available to users without prerequisites",
                    "type": "boolean"
                  }
                },
                "required": [
                  "touristSpotId",
                  "chapterNumber",
                  "chapterTitle",
                  "chapterDesc",
                  "chapterImage",
                  "characterNameList",
                  "realWorldImage",
                  "chapterVideoUrl",
                  "chapterVideoMobileUrl",
                  "chapterPdfUrl",
                  "isUnlocked"
                ],
                "$ref": "#/components/schemas/StoryChapterCreateRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created story chapter",
            "schema": {
              "type": "object",
              "properties": {
                "storyId": {
                  "description": "Unique identifier for the story",
                  "type": "string"
                },
                "touristSpotId": {
                  "description": "Unique identifier for the tourist spot",
                  "type": "string"
                },
                "storyChapterId": {
                  "description": "Unique identifier for the story chapter",
                  "type": "string"
                },
                "sagaName": {
                  "description": "Name of the saga",
                  "type": "string"
                },
                "chapterNumber": {
                  "description": "Chapter number or position",
                  "type": "string"
                },
                "chapterTitle": {
                  "description": "Title of the chapter",
                  "type": "string"
                },
                "chapterDesc": {
                  "description": "Detailed description of the chapter",
                  "type": "string"
                },
                "chapterImage": {
                  "description": "URL to the fictional chapter image",
                  "type": "string"
                },
                "characterNameList": {
                  "description": "List of character names involved in the chapter",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "realWorldImage": {
                  "description": "URL to the real-world location image",
                  "type": "string"
                },
                "chapterVideoUrl": {
                  "description": "URL to the chapter video for desktop viewing",
                  "type": "string"
                },
                "chapterVideoMobileUrl": {
                  "description": "URL to the chapter video optimized for mobile",
                  "type": "string"
                },
                "chapterPdfUrl": {
                  "description": "URL to the downloadable PDF version",
                  "type": "string"
                },
                "isUnlocked": {
                  "description": "Whether the chapter is available to users without prerequisites",
                  "type": "boolean"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "storyId",
                "touristSpotId",
                "storyChapterId",
                "sagaName",
                "chapterNumber",
                "chapterTitle",
                "chapterDesc",
                "chapterImage",
                "characterNameList",
                "realWorldImage",
                "chapterVideoUrl",
                "chapterVideoMobileUrl",
                "chapterPdfUrl",
                "isUnlocked"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryChapterResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Create Story Chapter",
        "tags": [
          "Stories"
        ]
      }
    },
    "/stories/update-saga": {
      "post": {
        "description": "Update an existing story saga.",
        "operationId": "TouriiBackendController_updateStory",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Story Saga update request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sagaName": {
                    "description": "Name of the story saga (e.g., 'Prologue', 'Bungo Ono')",
                    "type": "string"
                  },
                  "sagaDesc": {
                    "description": "Detailed description of the saga's narrative",
                    "type": "string"
                  },
                  "backgroundMedia": {
                    "description": "URL to the saga's cover media (image or video)",
                    "type": "string"
                  },
                  "mapImage": {
                    "description": "URL to the map image for the saga",
                    "type": "string"
                  },
                  "location": {
                    "description": "Real-world location of the saga (e.g., 'Tokyo')",
                    "type": "string"
                  },
                  "order": {
                    "description": "Display order in the saga list",
                    "type": "number"
                  },
                  "isPrologue": {
                    "description": "Whether the saga is a prologue",
                    "type": "boolean"
                  },
                  "isSelected": {
                    "description": "Whether the saga is selected by default",
                    "type": "boolean"
                  },
                  "chapterList": {
                    "description": "List of chapters",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "touristSpotId": {
                          "description": "Unique identifier for the tourist spot",
                          "type": "string"
                        },
                        "chapterNumber": {
                          "description": "Chapter number or position (e.g., 'Prologue', 'Chapter 1')",
                          "type": "string"
                        },
                        "chapterTitle": {
                          "description": "Title of the story chapter",
                          "type": "string"
                        },
                        "chapterDesc": {
                          "description": "Detailed description or content of the story",
                          "type": "string"
                        },
                        "chapterImage": {
                          "description": "URL to the fictional chapter image",
                          "type": "string"
                        },
                        "characterNameList": {
                          "description": "List of character names involved in the chapter",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "realWorldImage": {
                          "description": "URL to the real-world location image",
                          "type": "string"
                        },
                        "chapterVideoUrl": {
                          "description": "URL to the chapter video for desktop viewing",
                          "type": "string"
                        },
                        "chapterVideoMobileUrl": {
                          "description": "URL to the chapter video optimized for mobile",
                          "type": "string"
                        },
                        "chapterPdfUrl": {
                          "description": "URL to the downloadable PDF version",
                          "type": "string"
                        },
                        "isUnlocked": {
                          "description": "Whether the chapter is available to users without prerequisites",
                          "type": "boolean"
                        },
                        "storyChapterId": {
                          "description": "Unique identifier for the story chapter",
                          "type": "string"
                        },
                        "delFlag": {
                          "description": "Flag to indicate if the story chapter is deleted",
                          "type": "boolean"
                        },
                        "updUserId": {
                          "description": "Unique identifier for the user who updated the story chapter",
                          "type": "string"
                        }
                      },
                      "required": [
                        "touristSpotId",
                        "chapterNumber",
                        "chapterTitle",
                        "chapterDesc",
                        "chapterImage",
                        "characterNameList",
                        "realWorldImage",
                        "chapterVideoUrl",
                        "chapterVideoMobileUrl",
                        "chapterPdfUrl",
                        "isUnlocked",
                        "storyChapterId",
                        "delFlag",
                        "updUserId"
                      ]
                    }
                  },
                  "sagaId": {
                    "description": "Unique identifier for the story saga",
                    "type": "string"
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the story saga is deleted",
                    "type": "boolean"
                  },
                  "updUserId": {
                    "description": "Unique identifier for the user who updated the story saga",
                    "type": "string"
                  }
                },
                "required": [
                  "sagaName",
                  "sagaDesc",
                  "backgroundMedia",
                  "order",
                  "isPrologue",
                  "isSelected",
                  "chapterList",
                  "sagaId",
                  "delFlag",
                  "updUserId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully updated story saga",
            "schema": {
              "type": "object",
              "properties": {
                "storyId": {
                  "description": "Unique identifier for the story saga",
                  "type": "string"
                },
                "sagaName": {
                  "description": "Name of the story saga",
                  "type": "string"
                },
                "sagaDesc": {
                  "description": "Detailed description of the saga's narrative",
                  "type": "string"
                },
                "backgroundMedia": {
                  "description": "URL to the saga's cover media (image or video)",
                  "type": "string"
                },
                "mapImage": {
                  "description": "URL to the map image for the saga",
                  "type": "string"
                },
                "location": {
                  "description": "Real-world location of the saga",
                  "type": "string"
                },
                "order": {
                  "description": "Display order in the saga list",
                  "type": "number"
                },
                "isPrologue": {
                  "description": "Whether the saga is a prologue",
                  "type": "boolean"
                },
                "isSelected": {
                  "description": "Whether the saga is selected by default",
                  "type": "boolean"
                },
                "chapterList": {
                  "description": "List of stories in the saga",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "storyId": {
                        "description": "Unique identifier for the story",
                        "type": "string"
                      },
                      "touristSpotId": {
                        "description": "Unique identifier for the tourist spot",
                        "type": "string"
                      },
                      "storyChapterId": {
                        "description": "Unique identifier for the story chapter",
                        "type": "string"
                      },
                      "sagaName": {
                        "description": "Name of the saga",
                        "type": "string"
                      },
                      "chapterNumber": {
                        "description": "Chapter number or position",
                        "type": "string"
                      },
                      "chapterTitle": {
                        "description": "Title of the chapter",
                        "type": "string"
                      },
                      "chapterDesc": {
                        "description": "Detailed description of the chapter",
                        "type": "string"
                      },
                      "chapterImage": {
                        "description": "URL to the fictional chapter image",
                        "type": "string"
                      },
                      "characterNameList": {
                        "description": "List of character names involved in the chapter",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "realWorldImage": {
                        "description": "URL to the real-world location image",
                        "type": "string"
                      },
                      "chapterVideoUrl": {
                        "description": "URL to the chapter video for desktop viewing",
                        "type": "string"
                      },
                      "chapterVideoMobileUrl": {
                        "description": "URL to the chapter video optimized for mobile",
                        "type": "string"
                      },
                      "chapterPdfUrl": {
                        "description": "URL to the downloadable PDF version",
                        "type": "string"
                      },
                      "isUnlocked": {
                        "description": "Whether the chapter is available to users without prerequisites",
                        "type": "boolean"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "storyId",
                      "touristSpotId",
                      "storyChapterId",
                      "sagaName",
                      "chapterNumber",
                      "chapterTitle",
                      "chapterDesc",
                      "chapterImage",
                      "characterNameList",
                      "realWorldImage",
                      "chapterVideoUrl",
                      "chapterVideoMobileUrl",
                      "chapterPdfUrl",
                      "isUnlocked"
                    ]
                  }
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "storyId",
                "sagaName",
                "sagaDesc",
                "backgroundMedia",
                "mapImage",
                "location",
                "order",
                "isPrologue",
                "isSelected"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Update Story Saga",
        "tags": [
          "Stories"
        ]
      }
    },
    "/stories/update-chapter": {
      "post": {
        "description": "Update an existing story chapter.",
        "operationId": "TouriiBackendController_updateStoryChapter",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Story Chapter update request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "touristSpotId": {
                    "description": "Unique identifier for the tourist spot",
                    "type": "string"
                  },
                  "chapterNumber": {
                    "description": "Chapter number or position (e.g., 'Prologue', 'Chapter 1')",
                    "type": "string"
                  },
                  "chapterTitle": {
                    "description": "Title of the story chapter",
                    "type": "string"
                  },
                  "chapterDesc": {
                    "description": "Detailed description or content of the story",
                    "type": "string"
                  },
                  "chapterImage": {
                    "description": "URL to the fictional chapter image",
                    "type": "string"
                  },
                  "characterNameList": {
                    "description": "List of character names involved in the chapter",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "realWorldImage": {
                    "description": "URL to the real-world location image",
                    "type": "string"
                  },
                  "chapterVideoUrl": {
                    "description": "URL to the chapter video for desktop viewing",
                    "type": "string"
                  },
                  "chapterVideoMobileUrl": {
                    "description": "URL to the chapter video optimized for mobile",
                    "type": "string"
                  },
                  "chapterPdfUrl": {
                    "description": "URL to the downloadable PDF version",
                    "type": "string"
                  },
                  "isUnlocked": {
                    "description": "Whether the chapter is available to users without prerequisites",
                    "type": "boolean"
                  },
                  "storyChapterId": {
                    "description": "Unique identifier for the story chapter",
                    "type": "string"
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the story chapter is deleted",
                    "type": "boolean"
                  },
                  "updUserId": {
                    "description": "Unique identifier for the user who updated the story chapter",
                    "type": "string"
                  }
                },
                "required": [
                  "touristSpotId",
                  "chapterNumber",
                  "chapterTitle",
                  "chapterDesc",
                  "chapterImage",
                  "characterNameList",
                  "realWorldImage",
                  "chapterVideoUrl",
                  "chapterVideoMobileUrl",
                  "chapterPdfUrl",
                  "isUnlocked",
                  "storyChapterId",
                  "delFlag",
                  "updUserId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully updated story chapter",
            "schema": {
              "type": "object",
              "properties": {
                "storyId": {
                  "description": "Unique identifier for the story",
                  "type": "string"
                },
                "touristSpotId": {
                  "description": "Unique identifier for the tourist spot",
                  "type": "string"
                },
                "storyChapterId": {
                  "description": "Unique identifier for the story chapter",
                  "type": "string"
                },
                "sagaName": {
                  "description": "Name of the saga",
                  "type": "string"
                },
                "chapterNumber": {
                  "description": "Chapter number or position",
                  "type": "string"
                },
                "chapterTitle": {
                  "description": "Title of the chapter",
                  "type": "string"
                },
                "chapterDesc": {
                  "description": "Detailed description of the chapter",
                  "type": "string"
                },
                "chapterImage": {
                  "description": "URL to the fictional chapter image",
                  "type": "string"
                },
                "characterNameList": {
                  "description": "List of character names involved in the chapter",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "realWorldImage": {
                  "description": "URL to the real-world location image",
                  "type": "string"
                },
                "chapterVideoUrl": {
                  "description": "URL to the chapter video for desktop viewing",
                  "type": "string"
                },
                "chapterVideoMobileUrl": {
                  "description": "URL to the chapter video optimized for mobile",
                  "type": "string"
                },
                "chapterPdfUrl": {
                  "description": "URL to the downloadable PDF version",
                  "type": "string"
                },
                "isUnlocked": {
                  "description": "Whether the chapter is available to users without prerequisites",
                  "type": "boolean"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "storyId",
                "touristSpotId",
                "storyChapterId",
                "sagaName",
                "chapterNumber",
                "chapterTitle",
                "chapterDesc",
                "chapterImage",
                "characterNameList",
                "realWorldImage",
                "chapterVideoUrl",
                "chapterVideoMobileUrl",
                "chapterPdfUrl",
                "isUnlocked"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoryChapterResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Update Story Chapter",
        "tags": [
          "Stories"
        ]
      }
    },
    "/stories/{storyId}": {
      "delete": {
        "description": "Delete a story saga.",
        "operationId": "TouriiBackendController_deleteStory",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Story deleted"
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Delete Story",
        "tags": [
          "Stories"
        ]
      }
    },
    "/stories/chapters/{chapterId}": {
      "delete": {
        "description": "Delete a story chapter.",
        "operationId": "TouriiBackendController_deleteStoryChapter",
        "parameters": [
          {
            "name": "chapterId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Story chapter deleted"
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Delete Story Chapter",
        "tags": [
          "Stories"
        ]
      }
    },
    "/stories/sagas": {
      "get": {
        "description": "Retrieve all available story sagas.",
        "operationId": "TouriiBackendController_getSagas",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all sagas",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "storyId": {
                    "description": "Unique identifier for the story saga",
                    "type": "string"
                  },
                  "sagaName": {
                    "description": "Name of the story saga",
                    "type": "string"
                  },
                  "sagaDesc": {
                    "description": "Detailed description of the saga's narrative",
                    "type": "string"
                  },
                  "backgroundMedia": {
                    "description": "URL to the saga's cover media (image or video)",
                    "type": "string"
                  },
                  "mapImage": {
                    "description": "URL to the map image for the saga",
                    "type": "string"
                  },
                  "location": {
                    "description": "Real-world location of the saga",
                    "type": "string"
                  },
                  "order": {
                    "description": "Display order in the saga list",
                    "type": "number"
                  },
                  "isPrologue": {
                    "description": "Whether the saga is a prologue",
                    "type": "boolean"
                  },
                  "isSelected": {
                    "description": "Whether the saga is selected by default",
                    "type": "boolean"
                  },
                  "chapterList": {
                    "description": "List of stories in the saga",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "storyId": {
                          "description": "Unique identifier for the story",
                          "type": "string"
                        },
                        "touristSpotId": {
                          "description": "Unique identifier for the tourist spot",
                          "type": "string"
                        },
                        "storyChapterId": {
                          "description": "Unique identifier for the story chapter",
                          "type": "string"
                        },
                        "sagaName": {
                          "description": "Name of the saga",
                          "type": "string"
                        },
                        "chapterNumber": {
                          "description": "Chapter number or position",
                          "type": "string"
                        },
                        "chapterTitle": {
                          "description": "Title of the chapter",
                          "type": "string"
                        },
                        "chapterDesc": {
                          "description": "Detailed description of the chapter",
                          "type": "string"
                        },
                        "chapterImage": {
                          "description": "URL to the fictional chapter image",
                          "type": "string"
                        },
                        "characterNameList": {
                          "description": "List of character names involved in the chapter",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "realWorldImage": {
                          "description": "URL to the real-world location image",
                          "type": "string"
                        },
                        "chapterVideoUrl": {
                          "description": "URL to the chapter video for desktop viewing",
                          "type": "string"
                        },
                        "chapterVideoMobileUrl": {
                          "description": "URL to the chapter video optimized for mobile",
                          "type": "string"
                        },
                        "chapterPdfUrl": {
                          "description": "URL to the downloadable PDF version",
                          "type": "string"
                        },
                        "isUnlocked": {
                          "description": "Whether the chapter is available to users without prerequisites",
                          "type": "boolean"
                        },
                        "delFlag": {
                          "description": "Flag to indicate if the record is deleted",
                          "type": "boolean"
                        },
                        "insUserId": {
                          "description": "ID of user who created this record",
                          "type": "string"
                        },
                        "insDateTime": {
                          "description": "Timestamp of record creation",
                          "type": "string"
                        },
                        "updUserId": {
                          "description": "ID of user who last updated this record",
                          "type": "string"
                        },
                        "updDateTime": {
                          "description": "Timestamp of last record update",
                          "type": "string"
                        }
                      },
                      "required": [
                        "storyId",
                        "touristSpotId",
                        "storyChapterId",
                        "sagaName",
                        "chapterNumber",
                        "chapterTitle",
                        "chapterDesc",
                        "chapterImage",
                        "characterNameList",
                        "realWorldImage",
                        "chapterVideoUrl",
                        "chapterVideoMobileUrl",
                        "chapterPdfUrl",
                        "isUnlocked"
                      ]
                    }
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the record is deleted",
                    "type": "boolean"
                  },
                  "insUserId": {
                    "description": "ID of user who created this record",
                    "type": "string"
                  },
                  "insDateTime": {
                    "description": "Timestamp of record creation",
                    "type": "string"
                  },
                  "updUserId": {
                    "description": "ID of user who last updated this record",
                    "type": "string"
                  },
                  "updDateTime": {
                    "description": "Timestamp of last record update",
                    "type": "string"
                  }
                },
                "required": [
                  "storyId",
                  "sagaName",
                  "sagaDesc",
                  "backgroundMedia",
                  "mapImage",
                  "location",
                  "order",
                  "isPrologue",
                  "isSelected"
                ]
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoryResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get All Story Sagas",
        "tags": [
          "Stories"
        ]
      }
    },
    "/stories/sagas/{storyId}/chapters": {
      "get": {
        "description": "Retrieve all chapters for a specific story.",
        "operationId": "TouriiBackendController_getStoryChaptersByStoryId",
        "parameters": [
          {
            "name": "storyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all chapters for a specific story.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "storyId": {
                      "description": "Unique identifier for the story",
                      "type": "string"
                    },
                    "touristSpotId": {
                      "description": "Unique identifier for the tourist spot",
                      "type": "string"
                    },
                    "storyChapterId": {
                      "description": "Unique identifier for the story chapter",
                      "type": "string"
                    },
                    "sagaName": {
                      "description": "Name of the saga",
                      "type": "string"
                    },
                    "chapterNumber": {
                      "description": "Chapter number or position",
                      "type": "string"
                    },
                    "chapterTitle": {
                      "description": "Title of the chapter",
                      "type": "string"
                    },
                    "chapterDesc": {
                      "description": "Detailed description of the chapter",
                      "type": "string"
                    },
                    "chapterImage": {
                      "description": "URL to the fictional chapter image",
                      "type": "string"
                    },
                    "characterNameList": {
                      "description": "List of character names involved in the chapter",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "realWorldImage": {
                      "description": "URL to the real-world location image",
                      "type": "string"
                    },
                    "chapterVideoUrl": {
                      "description": "URL to the chapter video for desktop viewing",
                      "type": "string"
                    },
                    "chapterVideoMobileUrl": {
                      "description": "URL to the chapter video optimized for mobile",
                      "type": "string"
                    },
                    "chapterPdfUrl": {
                      "description": "URL to the downloadable PDF version",
                      "type": "string"
                    },
                    "isUnlocked": {
                      "description": "Whether the chapter is available to users without prerequisites",
                      "type": "boolean"
                    },
                    "delFlag": {
                      "description": "Flag to indicate if the record is deleted",
                      "type": "boolean"
                    },
                    "insUserId": {
                      "description": "ID of user who created this record",
                      "type": "string"
                    },
                    "insDateTime": {
                      "description": "Timestamp of record creation",
                      "type": "string"
                    },
                    "updUserId": {
                      "description": "ID of user who last updated this record",
                      "type": "string"
                    },
                    "updDateTime": {
                      "description": "Timestamp of last record update",
                      "type": "string"
                    }
                  },
                  "required": [
                    "storyId",
                    "touristSpotId",
                    "storyChapterId",
                    "sagaName",
                    "chapterNumber",
                    "chapterTitle",
                    "chapterDesc",
                    "chapterImage",
                    "characterNameList",
                    "realWorldImage",
                    "chapterVideoUrl",
                    "chapterVideoMobileUrl",
                    "chapterPdfUrl",
                    "isUnlocked"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get Story Chapters",
        "tags": [
          "Stories"
        ]
      }
    },
    "/stories/chapters/{chapterId}/progress": {
      "post": {
        "description": "Track user reading progress for a story chapter",
        "operationId": "TouriiBackendController_markChapterProgress",
        "parameters": [
          {
            "name": "chapterId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Progress request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "description": "ID of the user reading the chapter",
                    "type": "string"
                  },
                  "status": {
                    "description": "Current story status",
                    "type": "string",
                    "enum": [
                      "UNREAD",
                      "IN_PROGRESS",
                      "COMPLETED"
                    ],
                    "x-enumNames": [
                      "UNREAD",
                      "IN_PROGRESS",
                      "COMPLETED"
                    ]
                  },
                  "latitude": {
                    "description": "Optional latitude for location tracking",
                    "type": "number"
                  },
                  "longitude": {
                    "description": "Optional longitude for location tracking",
                    "type": "number"
                  }
                },
                "required": [
                  "userId",
                  "status"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Progress recorded"
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Save chapter reading progress",
        "tags": [
          "Stories"
        ]
      }
    },
    "/stories/chapters/{chapterId}/action": {
      "post": {
        "description": "Handles story start, complete, and progress actions based on X-Story-Action header",
        "operationId": "TouriiBackendController_handleStoryAction",
        "parameters": [
          {
            "name": "chapterId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Story-Action",
            "required": true,
            "in": "header",
            "description": "Story action to perform: start, complete, or progress",
            "schema": {
              "type": "string",
              "enum": [
                "start",
                "complete",
                "progress"
              ]
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "description": "User ID (used for progress action when body is not provided)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "description": "Story action request (required for start/complete, optional for progress)",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "description": "ID of the user performing the story action",
                    "type": "string"
                  }
                },
                "required": [
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Story action completed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "success": {
                          "description": "Whether the story completion was successful",
                          "type": "boolean"
                        },
                        "message": {
                          "description": "Success or error message",
                          "type": "string"
                        },
                        "storyProgress": {
                          "description": "Story progress information",
                          "type": "object",
                          "properties": {
                            "storyChapterId": {
                              "description": "ID of the completed story chapter",
                              "type": "string"
                            },
                            "chapterTitle": {
                              "description": "Title of the completed chapter",
                              "type": "string"
                            },
                            "status": {
                              "description": "Current story status",
                              "type": "string",
                              "enum": [
                                "UNREAD",
                                "IN_PROGRESS",
                                "COMPLETED"
                              ],
                              "x-enumNames": [
                                "UNREAD",
                                "IN_PROGRESS",
                                "COMPLETED"
                              ]
                            },
                            "completedAt": {
                              "description": "Timestamp when the story was completed",
                              "nullable": true
                            }
                          },
                          "required": [
                            "storyChapterId",
                            "chapterTitle",
                            "status",
                            "completedAt"
                          ]
                        },
                        "unlockedQuests": {
                          "description": "List of quests unlocked by completing this story",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "questId": {
                                "description": "ID of the unlocked quest",
                                "type": "string"
                              },
                              "questName": {
                                "description": "Name of the unlocked quest",
                                "type": "string"
                              },
                              "questDesc": {
                                "description": "Description of the unlocked quest",
                                "type": "string"
                              },
                              "questImage": {
                                "description": "Image URL for the quest",
                                "type": "string",
                                "nullable": true
                              },
                              "touristSpotName": {
                                "description": "Name of the tourist spot where the quest is located",
                                "type": "string"
                              },
                              "totalMagatamaPointAwarded": {
                                "description": "Total magatama points awarded for completing this quest",
                                "type": "number"
                              },
                              "isPremium": {
                                "description": "Whether this is a premium quest",
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "questId",
                              "questName",
                              "questDesc",
                              "questImage",
                              "touristSpotName",
                              "totalMagatamaPointAwarded",
                              "isPremium"
                            ]
                          }
                        },
                        "rewards": {
                          "description": "Rewards earned from story completion",
                          "type": "object",
                          "properties": {
                            "magatamaPointsEarned": {
                              "description": "Total magatama points earned from story completion and achievements",
                              "type": "number"
                            },
                            "achievementsUnlocked": {
                              "description": "List of achievement names unlocked",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "magatamaPointsEarned",
                            "achievementsUnlocked"
                          ]
                        }
                      },
                      "required": [
                        "success",
                        "message",
                        "storyProgress",
                        "unlockedQuests",
                        "rewards"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "storyChapterId": {
                          "description": "ID of the story chapter",
                          "type": "string"
                        },
                        "status": {
                          "description": "Current reading status",
                          "type": "string",
                          "enum": [
                            "UNREAD",
                            "IN_PROGRESS",
                            "COMPLETED"
                          ],
                          "x-enumNames": [
                            "UNREAD",
                            "IN_PROGRESS",
                            "COMPLETED"
                          ]
                        },
                        "unlockedAt": {
                          "description": "Timestamp when the user started reading",
                          "nullable": true
                        },
                        "finishedAt": {
                          "description": "Timestamp when the user finished reading",
                          "nullable": true
                        },
                        "canStart": {
                          "description": "Whether the user can start reading this chapter",
                          "type": "boolean"
                        },
                        "canComplete": {
                          "description": "Whether the user can complete this chapter",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "storyChapterId",
                        "status",
                        "unlockedAt",
                        "finishedAt",
                        "canStart",
                        "canComplete"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Consolidated story action endpoint",
        "tags": [
          "Stories"
        ]
      }
    },
    "/routes": {
      "post": {
        "description": "Create a new model route.",
        "operationId": "TouriiBackendController_createModelRoute",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Model Route creation request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "storyId": {
                    "description": "Unique identifier for the story",
                    "type": "string"
                  },
                  "routeName": {
                    "description": "Name of the model route",
                    "type": "string"
                  },
                  "region": {
                    "description": "Region of the model route",
                    "type": "string"
                  },
                  "regionDesc": {
                    "description": "Description of the region",
                    "type": "string"
                  },
                  "regionBackgroundMedia": {
                    "description": "Background media of the region",
                    "type": "string"
                  },
                  "recommendation": {
                    "description": "Recommendation of the model route",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "touristSpotList": {
                    "description": "List of tourist spots in the model route",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "storyChapterId": {
                          "description": "Unique identifier for the story chapter",
                          "type": "string"
                        },
                        "touristSpotName": {
                          "description": "Name of the tourist spot",
                          "type": "string"
                        },
                        "touristSpotDesc": {
                          "description": "Description of the tourist spot",
                          "type": "string"
                        },
                        "bestVisitTime": {
                          "description": "Best visit time of the tourist spot",
                          "type": "string"
                        },
                        "touristSpotHashtag": {
                          "description": "Hashtags associated with this location",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "imageSet": {
                          "description": "Image set for the tourist spot",
                          "type": "object",
                          "properties": {
                            "main": {
                              "description": "Main image of the tourist spot",
                              "type": "string"
                            },
                            "small": {
                              "description": "Small images of the tourist spot",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "main",
                            "small"
                          ]
                        },
                        "address": {
                          "description": "Address for enhanced search accuracy",
                          "type": "string"
                        }
                      },
                      "required": [
                        "storyChapterId",
                        "touristSpotName",
                        "touristSpotDesc",
                        "bestVisitTime",
                        "touristSpotHashtag"
                      ]
                    }
                  }
                },
                "required": [
                  "storyId",
                  "routeName",
                  "region",
                  "regionDesc",
                  "regionBackgroundMedia",
                  "recommendation",
                  "touristSpotList"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created model route",
            "schema": {
              "type": "object",
              "properties": {
                "modelRouteId": {
                  "description": "Unique identifier for the model route",
                  "type": "string"
                },
                "storyId": {
                  "description": "Unique identifier for the story",
                  "type": "string"
                },
                "routeName": {
                  "description": "Name of the model route",
                  "type": "string"
                },
                "region": {
                  "description": "Region of the model route",
                  "type": "string"
                },
                "regionDesc": {
                  "description": "Description of the region",
                  "type": "string"
                },
                "recommendation": {
                  "description": "Recommendation of the model route",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "regionLatitude": {
                  "description": "Latitude of the region",
                  "type": "number"
                },
                "regionLongitude": {
                  "description": "Longitude of the region",
                  "type": "number"
                },
                "regionBackgroundMedia": {
                  "description": "URL to the region's cover media",
                  "type": "string"
                },
                "touristSpotList": {
                  "description": "List of tourist spots in the model route",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "touristSpotId": {
                        "description": "Unique identifier for the tourist spot",
                        "type": "string"
                      },
                      "storyChapterId": {
                        "description": "Unique identifier for the story chapter",
                        "type": "string"
                      },
                      "touristSpotName": {
                        "description": "Name of the tourist spot",
                        "type": "string"
                      },
                      "touristSpotDesc": {
                        "description": "Description of the tourist spot",
                        "type": "string"
                      },
                      "bestVisitTime": {
                        "description": "Best visit time of the tourist spot",
                        "type": "string"
                      },
                      "address": {
                        "description": "Address of the tourist spot",
                        "type": "string"
                      },
                      "touristSpotLatitude": {
                        "description": "Latitude of the tourist spot",
                        "type": "number"
                      },
                      "touristSpotLongitude": {
                        "description": "Longitude of the tourist spot",
                        "type": "number"
                      },
                      "touristSpotHashtag": {
                        "description": "Hashtags associated with this location",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "storyChapterLink": {
                        "description": "Link to the related story chapter",
                        "type": "string"
                      },
                      "imageSet": {
                        "description": "Image set for the tourist spot",
                        "type": "object",
                        "properties": {
                          "main": {
                            "description": "Main image of the tourist spot",
                            "type": "string"
                          },
                          "small": {
                            "description": "Small images of the tourist spot",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "main",
                          "small"
                        ]
                      },
                      "weatherInfo": {
                        "description": "Weather info for the tourist spot",
                        "type": "object",
                        "properties": {
                          "temperatureCelsius": {
                            "description": "Temperature of the weather",
                            "type": "number"
                          },
                          "weatherName": {
                            "description": "Name of the weather",
                            "type": "string"
                          },
                          "weatherDesc": {
                            "description": "Description of the weather",
                            "type": "string"
                          }
                        },
                        "required": [
                          "temperatureCelsius",
                          "weatherName",
                          "weatherDesc"
                        ]
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "touristSpotId",
                      "storyChapterId",
                      "touristSpotName",
                      "touristSpotDesc",
                      "bestVisitTime",
                      "address",
                      "touristSpotLatitude",
                      "touristSpotLongitude",
                      "touristSpotHashtag"
                    ]
                  }
                },
                "regionWeatherInfo": {
                  "description": "Current weather info for the region",
                  "type": "object",
                  "properties": {
                    "temperatureCelsius": {
                      "description": "Temperature of the weather",
                      "type": "number"
                    },
                    "weatherName": {
                      "description": "Name of the weather",
                      "type": "string"
                    },
                    "weatherDesc": {
                      "description": "Description of the weather",
                      "type": "string"
                    },
                    "regionName": {
                      "description": "Name of the region",
                      "type": "string"
                    }
                  },
                  "required": [
                    "temperatureCelsius",
                    "weatherName",
                    "weatherDesc",
                    "regionName"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "modelRouteId",
                "storyId",
                "routeName",
                "region",
                "regionDesc",
                "recommendation",
                "regionLatitude",
                "regionLongitude",
                "regionBackgroundMedia",
                "touristSpotList",
                "regionWeatherInfo"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelRouteResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Create Model Route",
        "tags": [
          "Routes"
        ]
      },
      "get": {
        "description": "Retrieve a list of all available model routes with their details.",
        "operationId": "TouriiBackendController_getRoutes",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all model routes",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "modelRouteId": {
                    "description": "Unique identifier for the model route",
                    "type": "string"
                  },
                  "storyId": {
                    "description": "Unique identifier for the story",
                    "type": "string"
                  },
                  "routeName": {
                    "description": "Name of the model route",
                    "type": "string"
                  },
                  "region": {
                    "description": "Region of the model route",
                    "type": "string"
                  },
                  "regionDesc": {
                    "description": "Description of the region",
                    "type": "string"
                  },
                  "recommendation": {
                    "description": "Recommendation of the model route",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "regionLatitude": {
                    "description": "Latitude of the region",
                    "type": "number"
                  },
                  "regionLongitude": {
                    "description": "Longitude of the region",
                    "type": "number"
                  },
                  "regionBackgroundMedia": {
                    "description": "URL to the region's cover media",
                    "type": "string"
                  },
                  "touristSpotList": {
                    "description": "List of tourist spots in the model route",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "touristSpotId": {
                          "description": "Unique identifier for the tourist spot",
                          "type": "string"
                        },
                        "storyChapterId": {
                          "description": "Unique identifier for the story chapter",
                          "type": "string"
                        },
                        "touristSpotName": {
                          "description": "Name of the tourist spot",
                          "type": "string"
                        },
                        "touristSpotDesc": {
                          "description": "Description of the tourist spot",
                          "type": "string"
                        },
                        "bestVisitTime": {
                          "description": "Best visit time of the tourist spot",
                          "type": "string"
                        },
                        "address": {
                          "description": "Address of the tourist spot",
                          "type": "string"
                        },
                        "touristSpotLatitude": {
                          "description": "Latitude of the tourist spot",
                          "type": "number"
                        },
                        "touristSpotLongitude": {
                          "description": "Longitude of the tourist spot",
                          "type": "number"
                        },
                        "touristSpotHashtag": {
                          "description": "Hashtags associated with this location",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "storyChapterLink": {
                          "description": "Link to the related story chapter",
                          "type": "string"
                        },
                        "imageSet": {
                          "description": "Image set for the tourist spot",
                          "type": "object",
                          "properties": {
                            "main": {
                              "description": "Main image of the tourist spot",
                              "type": "string"
                            },
                            "small": {
                              "description": "Small images of the tourist spot",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "main",
                            "small"
                          ]
                        },
                        "weatherInfo": {
                          "description": "Weather info for the tourist spot",
                          "type": "object",
                          "properties": {
                            "temperatureCelsius": {
                              "description": "Temperature of the weather",
                              "type": "number"
                            },
                            "weatherName": {
                              "description": "Name of the weather",
                              "type": "string"
                            },
                            "weatherDesc": {
                              "description": "Description of the weather",
                              "type": "string"
                            }
                          },
                          "required": [
                            "temperatureCelsius",
                            "weatherName",
                            "weatherDesc"
                          ]
                        },
                        "delFlag": {
                          "description": "Flag to indicate if the record is deleted",
                          "type": "boolean"
                        },
                        "insUserId": {
                          "description": "ID of user who created this record",
                          "type": "string"
                        },
                        "insDateTime": {
                          "description": "Timestamp of record creation",
                          "type": "string"
                        },
                        "updUserId": {
                          "description": "ID of user who last updated this record",
                          "type": "string"
                        },
                        "updDateTime": {
                          "description": "Timestamp of last record update",
                          "type": "string"
                        }
                      },
                      "required": [
                        "touristSpotId",
                        "storyChapterId",
                        "touristSpotName",
                        "touristSpotDesc",
                        "bestVisitTime",
                        "address",
                        "touristSpotLatitude",
                        "touristSpotLongitude",
                        "touristSpotHashtag"
                      ]
                    }
                  },
                  "regionWeatherInfo": {
                    "description": "Current weather info for the region",
                    "type": "object",
                    "properties": {
                      "temperatureCelsius": {
                        "description": "Temperature of the weather",
                        "type": "number"
                      },
                      "weatherName": {
                        "description": "Name of the weather",
                        "type": "string"
                      },
                      "weatherDesc": {
                        "description": "Description of the weather",
                        "type": "string"
                      },
                      "regionName": {
                        "description": "Name of the region",
                        "type": "string"
                      }
                    },
                    "required": [
                      "temperatureCelsius",
                      "weatherName",
                      "weatherDesc",
                      "regionName"
                    ]
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the record is deleted",
                    "type": "boolean"
                  },
                  "insUserId": {
                    "description": "ID of user who created this record",
                    "type": "string"
                  },
                  "insDateTime": {
                    "description": "Timestamp of record creation",
                    "type": "string"
                  },
                  "updUserId": {
                    "description": "ID of user who last updated this record",
                    "type": "string"
                  },
                  "updDateTime": {
                    "description": "Timestamp of last record update",
                    "type": "string"
                  }
                },
                "required": [
                  "modelRouteId",
                  "storyId",
                  "routeName",
                  "region",
                  "regionDesc",
                  "recommendation",
                  "regionLatitude",
                  "regionLongitude",
                  "regionBackgroundMedia",
                  "touristSpotList",
                  "regionWeatherInfo"
                ]
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelRouteResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get All Model Routes",
        "tags": [
          "Routes"
        ]
      }
    },
    "/routes/{routeId}/tourist-spots": {
      "post": {
        "description": "Create a new tourist spot.",
        "operationId": "TouriiBackendController_createTouristSpot",
        "parameters": [
          {
            "name": "routeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Tourist Spot creation request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "storyChapterId": {
                    "description": "Unique identifier for the story chapter",
                    "type": "string"
                  },
                  "touristSpotName": {
                    "description": "Name of the tourist spot",
                    "type": "string"
                  },
                  "touristSpotDesc": {
                    "description": "Description of the tourist spot",
                    "type": "string"
                  },
                  "bestVisitTime": {
                    "description": "Best visit time of the tourist spot",
                    "type": "string"
                  },
                  "touristSpotHashtag": {
                    "description": "Hashtags associated with this location",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "imageSet": {
                    "description": "Image set for the tourist spot",
                    "type": "object",
                    "properties": {
                      "main": {
                        "description": "Main image of the tourist spot",
                        "type": "string"
                      },
                      "small": {
                        "description": "Small images of the tourist spot",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "main",
                      "small"
                    ]
                  },
                  "address": {
                    "description": "Address for enhanced search accuracy",
                    "type": "string"
                  }
                },
                "required": [
                  "storyChapterId",
                  "touristSpotName",
                  "touristSpotDesc",
                  "bestVisitTime",
                  "touristSpotHashtag"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created tourist spot",
            "schema": {
              "type": "object",
              "properties": {
                "touristSpotId": {
                  "description": "Unique identifier for the tourist spot",
                  "type": "string"
                },
                "storyChapterId": {
                  "description": "Unique identifier for the story chapter",
                  "type": "string"
                },
                "touristSpotName": {
                  "description": "Name of the tourist spot",
                  "type": "string"
                },
                "touristSpotDesc": {
                  "description": "Description of the tourist spot",
                  "type": "string"
                },
                "bestVisitTime": {
                  "description": "Best visit time of the tourist spot",
                  "type": "string"
                },
                "address": {
                  "description": "Address of the tourist spot",
                  "type": "string"
                },
                "touristSpotLatitude": {
                  "description": "Latitude of the tourist spot",
                  "type": "number"
                },
                "touristSpotLongitude": {
                  "description": "Longitude of the tourist spot",
                  "type": "number"
                },
                "touristSpotHashtag": {
                  "description": "Hashtags associated with this location",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "storyChapterLink": {
                  "description": "Link to the related story chapter",
                  "type": "string"
                },
                "imageSet": {
                  "description": "Image set for the tourist spot",
                  "type": "object",
                  "properties": {
                    "main": {
                      "description": "Main image of the tourist spot",
                      "type": "string"
                    },
                    "small": {
                      "description": "Small images of the tourist spot",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "main",
                    "small"
                  ]
                },
                "weatherInfo": {
                  "description": "Weather info for the tourist spot",
                  "type": "object",
                  "properties": {
                    "temperatureCelsius": {
                      "description": "Temperature of the weather",
                      "type": "number"
                    },
                    "weatherName": {
                      "description": "Name of the weather",
                      "type": "string"
                    },
                    "weatherDesc": {
                      "description": "Description of the weather",
                      "type": "string"
                    }
                  },
                  "required": [
                    "temperatureCelsius",
                    "weatherName",
                    "weatherDesc"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "touristSpotId",
                "storyChapterId",
                "touristSpotName",
                "touristSpotDesc",
                "bestVisitTime",
                "address",
                "touristSpotLatitude",
                "touristSpotLongitude",
                "touristSpotHashtag"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TouristSpotResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Create Tourist Spot",
        "tags": [
          "Routes"
        ]
      }
    },
    "/routes/update-model-route": {
      "post": {
        "description": "Update an existing model route.",
        "operationId": "TouriiBackendController_updateModelRoute",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Model Route update request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "storyId": {
                    "description": "Unique identifier for the story",
                    "type": "string"
                  },
                  "routeName": {
                    "description": "Name of the model route",
                    "type": "string"
                  },
                  "region": {
                    "description": "Region of the model route",
                    "type": "string"
                  },
                  "regionDesc": {
                    "description": "Description of the region",
                    "type": "string"
                  },
                  "regionBackgroundMedia": {
                    "description": "Background media of the region",
                    "type": "string"
                  },
                  "recommendation": {
                    "description": "Recommendation of the model route",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "touristSpotList": {
                    "description": "List of tourist spots in the model route",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "storyChapterId": {
                          "description": "Unique identifier for the story chapter",
                          "type": "string"
                        },
                        "touristSpotName": {
                          "description": "Name of the tourist spot",
                          "type": "string"
                        },
                        "touristSpotDesc": {
                          "description": "Description of the tourist spot",
                          "type": "string"
                        },
                        "bestVisitTime": {
                          "description": "Best visit time of the tourist spot",
                          "type": "string"
                        },
                        "touristSpotHashtag": {
                          "description": "Hashtags associated with this location",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "imageSet": {
                          "description": "Image set for the tourist spot",
                          "type": "object",
                          "properties": {
                            "main": {
                              "description": "Main image of the tourist spot",
                              "type": "string"
                            },
                            "small": {
                              "description": "Small images of the tourist spot",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "main",
                            "small"
                          ]
                        },
                        "address": {
                          "description": "Address for enhanced search accuracy",
                          "type": "string"
                        },
                        "touristSpotId": {
                          "description": "Unique identifier for the tourist spot",
                          "type": "string"
                        },
                        "delFlag": {
                          "description": "Flag to indicate if the tourist spot is deleted",
                          "type": "boolean"
                        },
                        "updUserId": {
                          "description": "Unique identifier for the user who updated the tourist spot",
                          "type": "string"
                        }
                      },
                      "required": [
                        "storyChapterId",
                        "touristSpotName",
                        "touristSpotDesc",
                        "bestVisitTime",
                        "touristSpotHashtag",
                        "touristSpotId",
                        "delFlag",
                        "updUserId"
                      ]
                    }
                  },
                  "modelRouteId": {
                    "description": "Unique identifier for the model route",
                    "type": "string"
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the model route is deleted",
                    "type": "boolean"
                  },
                  "updUserId": {
                    "description": "Unique identifier for the user who updated the model route",
                    "type": "string"
                  }
                },
                "required": [
                  "storyId",
                  "routeName",
                  "region",
                  "regionDesc",
                  "regionBackgroundMedia",
                  "recommendation",
                  "touristSpotList",
                  "modelRouteId",
                  "delFlag",
                  "updUserId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully updated model route",
            "schema": {
              "type": "object",
              "properties": {
                "modelRouteId": {
                  "description": "Unique identifier for the model route",
                  "type": "string"
                },
                "storyId": {
                  "description": "Unique identifier for the story",
                  "type": "string"
                },
                "routeName": {
                  "description": "Name of the model route",
                  "type": "string"
                },
                "region": {
                  "description": "Region of the model route",
                  "type": "string"
                },
                "regionDesc": {
                  "description": "Description of the region",
                  "type": "string"
                },
                "recommendation": {
                  "description": "Recommendation of the model route",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "regionLatitude": {
                  "description": "Latitude of the region",
                  "type": "number"
                },
                "regionLongitude": {
                  "description": "Longitude of the region",
                  "type": "number"
                },
                "regionBackgroundMedia": {
                  "description": "URL to the region's cover media",
                  "type": "string"
                },
                "touristSpotList": {
                  "description": "List of tourist spots in the model route",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "touristSpotId": {
                        "description": "Unique identifier for the tourist spot",
                        "type": "string"
                      },
                      "storyChapterId": {
                        "description": "Unique identifier for the story chapter",
                        "type": "string"
                      },
                      "touristSpotName": {
                        "description": "Name of the tourist spot",
                        "type": "string"
                      },
                      "touristSpotDesc": {
                        "description": "Description of the tourist spot",
                        "type": "string"
                      },
                      "bestVisitTime": {
                        "description": "Best visit time of the tourist spot",
                        "type": "string"
                      },
                      "address": {
                        "description": "Address of the tourist spot",
                        "type": "string"
                      },
                      "touristSpotLatitude": {
                        "description": "Latitude of the tourist spot",
                        "type": "number"
                      },
                      "touristSpotLongitude": {
                        "description": "Longitude of the tourist spot",
                        "type": "number"
                      },
                      "touristSpotHashtag": {
                        "description": "Hashtags associated with this location",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "storyChapterLink": {
                        "description": "Link to the related story chapter",
                        "type": "string"
                      },
                      "imageSet": {
                        "description": "Image set for the tourist spot",
                        "type": "object",
                        "properties": {
                          "main": {
                            "description": "Main image of the tourist spot",
                            "type": "string"
                          },
                          "small": {
                            "description": "Small images of the tourist spot",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "main",
                          "small"
                        ]
                      },
                      "weatherInfo": {
                        "description": "Weather info for the tourist spot",
                        "type": "object",
                        "properties": {
                          "temperatureCelsius": {
                            "description": "Temperature of the weather",
                            "type": "number"
                          },
                          "weatherName": {
                            "description": "Name of the weather",
                            "type": "string"
                          },
                          "weatherDesc": {
                            "description": "Description of the weather",
                            "type": "string"
                          }
                        },
                        "required": [
                          "temperatureCelsius",
                          "weatherName",
                          "weatherDesc"
                        ]
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "touristSpotId",
                      "storyChapterId",
                      "touristSpotName",
                      "touristSpotDesc",
                      "bestVisitTime",
                      "address",
                      "touristSpotLatitude",
                      "touristSpotLongitude",
                      "touristSpotHashtag"
                    ]
                  }
                },
                "regionWeatherInfo": {
                  "description": "Current weather info for the region",
                  "type": "object",
                  "properties": {
                    "temperatureCelsius": {
                      "description": "Temperature of the weather",
                      "type": "number"
                    },
                    "weatherName": {
                      "description": "Name of the weather",
                      "type": "string"
                    },
                    "weatherDesc": {
                      "description": "Description of the weather",
                      "type": "string"
                    },
                    "regionName": {
                      "description": "Name of the region",
                      "type": "string"
                    }
                  },
                  "required": [
                    "temperatureCelsius",
                    "weatherName",
                    "weatherDesc",
                    "regionName"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "modelRouteId",
                "storyId",
                "routeName",
                "region",
                "regionDesc",
                "recommendation",
                "regionLatitude",
                "regionLongitude",
                "regionBackgroundMedia",
                "touristSpotList",
                "regionWeatherInfo"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelRouteResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Update Model Route",
        "tags": [
          "Routes"
        ]
      }
    },
    "/routes/update-tourist-spot": {
      "post": {
        "description": "Update an existing tourist spot.",
        "operationId": "TouriiBackendController_updateTouristSpot",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Tourist Spot update request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "storyChapterId": {
                    "description": "Unique identifier for the story chapter",
                    "type": "string"
                  },
                  "touristSpotName": {
                    "description": "Name of the tourist spot",
                    "type": "string"
                  },
                  "touristSpotDesc": {
                    "description": "Description of the tourist spot",
                    "type": "string"
                  },
                  "bestVisitTime": {
                    "description": "Best visit time of the tourist spot",
                    "type": "string"
                  },
                  "touristSpotHashtag": {
                    "description": "Hashtags associated with this location",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "imageSet": {
                    "description": "Image set for the tourist spot",
                    "type": "object",
                    "properties": {
                      "main": {
                        "description": "Main image of the tourist spot",
                        "type": "string"
                      },
                      "small": {
                        "description": "Small images of the tourist spot",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "main",
                      "small"
                    ]
                  },
                  "address": {
                    "description": "Address for enhanced search accuracy",
                    "type": "string"
                  },
                  "touristSpotId": {
                    "description": "Unique identifier for the tourist spot",
                    "type": "string"
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the tourist spot is deleted",
                    "type": "boolean"
                  },
                  "updUserId": {
                    "description": "Unique identifier for the user who updated the tourist spot",
                    "type": "string"
                  }
                },
                "required": [
                  "storyChapterId",
                  "touristSpotName",
                  "touristSpotDesc",
                  "bestVisitTime",
                  "touristSpotHashtag",
                  "touristSpotId",
                  "delFlag",
                  "updUserId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully updated tourist spot",
            "schema": {
              "type": "object",
              "properties": {
                "touristSpotId": {
                  "description": "Unique identifier for the tourist spot",
                  "type": "string"
                },
                "storyChapterId": {
                  "description": "Unique identifier for the story chapter",
                  "type": "string"
                },
                "touristSpotName": {
                  "description": "Name of the tourist spot",
                  "type": "string"
                },
                "touristSpotDesc": {
                  "description": "Description of the tourist spot",
                  "type": "string"
                },
                "bestVisitTime": {
                  "description": "Best visit time of the tourist spot",
                  "type": "string"
                },
                "address": {
                  "description": "Address of the tourist spot",
                  "type": "string"
                },
                "touristSpotLatitude": {
                  "description": "Latitude of the tourist spot",
                  "type": "number"
                },
                "touristSpotLongitude": {
                  "description": "Longitude of the tourist spot",
                  "type": "number"
                },
                "touristSpotHashtag": {
                  "description": "Hashtags associated with this location",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "storyChapterLink": {
                  "description": "Link to the related story chapter",
                  "type": "string"
                },
                "imageSet": {
                  "description": "Image set for the tourist spot",
                  "type": "object",
                  "properties": {
                    "main": {
                      "description": "Main image of the tourist spot",
                      "type": "string"
                    },
                    "small": {
                      "description": "Small images of the tourist spot",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "main",
                    "small"
                  ]
                },
                "weatherInfo": {
                  "description": "Weather info for the tourist spot",
                  "type": "object",
                  "properties": {
                    "temperatureCelsius": {
                      "description": "Temperature of the weather",
                      "type": "number"
                    },
                    "weatherName": {
                      "description": "Name of the weather",
                      "type": "string"
                    },
                    "weatherDesc": {
                      "description": "Description of the weather",
                      "type": "string"
                    }
                  },
                  "required": [
                    "temperatureCelsius",
                    "weatherName",
                    "weatherDesc"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "touristSpotId",
                "storyChapterId",
                "touristSpotName",
                "touristSpotDesc",
                "bestVisitTime",
                "address",
                "touristSpotLatitude",
                "touristSpotLongitude",
                "touristSpotHashtag"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TouristSpotResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Update Tourist Spot",
        "tags": [
          "Routes"
        ]
      }
    },
    "/routes/{routeId}": {
      "delete": {
        "description": "Delete an existing model route.",
        "operationId": "TouriiBackendController_deleteModelRoute",
        "parameters": [
          {
            "name": "routeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Model route deleted"
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Delete Model Route",
        "tags": [
          "Routes"
        ]
      }
    },
    "/routes/tourist-spots/{touristSpotId}": {
      "delete": {
        "description": "Delete a tourist spot.",
        "operationId": "TouriiBackendController_deleteTouristSpot",
        "parameters": [
          {
            "name": "touristSpotId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tourist spot deleted"
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Delete Tourist Spot",
        "tags": [
          "Routes"
        ]
      }
    },
    "/routes/tourist-spots/{storyChapterId}": {
      "get": {
        "description": "Retrieve tourist spot information linked to a story chapter.",
        "operationId": "TouriiBackendController_getTouristSpotsByChapterId",
        "parameters": [
          {
            "name": "storyChapterId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved tourist spots",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "touristSpotId": {
                    "description": "Unique identifier for the tourist spot",
                    "type": "string"
                  },
                  "storyChapterId": {
                    "description": "Unique identifier for the story chapter",
                    "type": "string"
                  },
                  "touristSpotName": {
                    "description": "Name of the tourist spot",
                    "type": "string"
                  },
                  "touristSpotDesc": {
                    "description": "Description of the tourist spot",
                    "type": "string"
                  },
                  "bestVisitTime": {
                    "description": "Best visit time of the tourist spot",
                    "type": "string"
                  },
                  "address": {
                    "description": "Address of the tourist spot",
                    "type": "string"
                  },
                  "touristSpotLatitude": {
                    "description": "Latitude of the tourist spot",
                    "type": "number"
                  },
                  "touristSpotLongitude": {
                    "description": "Longitude of the tourist spot",
                    "type": "number"
                  },
                  "touristSpotHashtag": {
                    "description": "Hashtags associated with this location",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "storyChapterLink": {
                    "description": "Link to the related story chapter",
                    "type": "string"
                  },
                  "imageSet": {
                    "description": "Image set for the tourist spot",
                    "type": "object",
                    "properties": {
                      "main": {
                        "description": "Main image of the tourist spot",
                        "type": "string"
                      },
                      "small": {
                        "description": "Small images of the tourist spot",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "main",
                      "small"
                    ]
                  },
                  "weatherInfo": {
                    "description": "Weather info for the tourist spot",
                    "type": "object",
                    "properties": {
                      "temperatureCelsius": {
                        "description": "Temperature of the weather",
                        "type": "number"
                      },
                      "weatherName": {
                        "description": "Name of the weather",
                        "type": "string"
                      },
                      "weatherDesc": {
                        "description": "Description of the weather",
                        "type": "string"
                      }
                    },
                    "required": [
                      "temperatureCelsius",
                      "weatherName",
                      "weatherDesc"
                    ]
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the record is deleted",
                    "type": "boolean"
                  },
                  "insUserId": {
                    "description": "ID of user who created this record",
                    "type": "string"
                  },
                  "insDateTime": {
                    "description": "Timestamp of record creation",
                    "type": "string"
                  },
                  "updUserId": {
                    "description": "ID of user who last updated this record",
                    "type": "string"
                  },
                  "updDateTime": {
                    "description": "Timestamp of last record update",
                    "type": "string"
                  }
                },
                "required": [
                  "touristSpotId",
                  "storyChapterId",
                  "touristSpotName",
                  "touristSpotDesc",
                  "bestVisitTime",
                  "address",
                  "touristSpotLatitude",
                  "touristSpotLongitude",
                  "touristSpotHashtag"
                ]
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TouristSpotResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get Tourist Spots by Story Chapter",
        "tags": [
          "Routes"
        ]
      }
    },
    "/routes/{id}": {
      "get": {
        "description": "Retrieve a specific model route by its ID, including tourist spots and weather data.",
        "operationId": "TouriiBackendController_getRouteById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the model route",
            "schema": {
              "type": "object",
              "properties": {
                "modelRouteId": {
                  "description": "Unique identifier for the model route",
                  "type": "string"
                },
                "storyId": {
                  "description": "Unique identifier for the story",
                  "type": "string"
                },
                "routeName": {
                  "description": "Name of the model route",
                  "type": "string"
                },
                "region": {
                  "description": "Region of the model route",
                  "type": "string"
                },
                "regionDesc": {
                  "description": "Description of the region",
                  "type": "string"
                },
                "recommendation": {
                  "description": "Recommendation of the model route",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "regionLatitude": {
                  "description": "Latitude of the region",
                  "type": "number"
                },
                "regionLongitude": {
                  "description": "Longitude of the region",
                  "type": "number"
                },
                "regionBackgroundMedia": {
                  "description": "URL to the region's cover media",
                  "type": "string"
                },
                "touristSpotList": {
                  "description": "List of tourist spots in the model route",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "touristSpotId": {
                        "description": "Unique identifier for the tourist spot",
                        "type": "string"
                      },
                      "storyChapterId": {
                        "description": "Unique identifier for the story chapter",
                        "type": "string"
                      },
                      "touristSpotName": {
                        "description": "Name of the tourist spot",
                        "type": "string"
                      },
                      "touristSpotDesc": {
                        "description": "Description of the tourist spot",
                        "type": "string"
                      },
                      "bestVisitTime": {
                        "description": "Best visit time of the tourist spot",
                        "type": "string"
                      },
                      "address": {
                        "description": "Address of the tourist spot",
                        "type": "string"
                      },
                      "touristSpotLatitude": {
                        "description": "Latitude of the tourist spot",
                        "type": "number"
                      },
                      "touristSpotLongitude": {
                        "description": "Longitude of the tourist spot",
                        "type": "number"
                      },
                      "touristSpotHashtag": {
                        "description": "Hashtags associated with this location",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "storyChapterLink": {
                        "description": "Link to the related story chapter",
                        "type": "string"
                      },
                      "imageSet": {
                        "description": "Image set for the tourist spot",
                        "type": "object",
                        "properties": {
                          "main": {
                            "description": "Main image of the tourist spot",
                            "type": "string"
                          },
                          "small": {
                            "description": "Small images of the tourist spot",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "main",
                          "small"
                        ]
                      },
                      "weatherInfo": {
                        "description": "Weather info for the tourist spot",
                        "type": "object",
                        "properties": {
                          "temperatureCelsius": {
                            "description": "Temperature of the weather",
                            "type": "number"
                          },
                          "weatherName": {
                            "description": "Name of the weather",
                            "type": "string"
                          },
                          "weatherDesc": {
                            "description": "Description of the weather",
                            "type": "string"
                          }
                        },
                        "required": [
                          "temperatureCelsius",
                          "weatherName",
                          "weatherDesc"
                        ]
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "touristSpotId",
                      "storyChapterId",
                      "touristSpotName",
                      "touristSpotDesc",
                      "bestVisitTime",
                      "address",
                      "touristSpotLatitude",
                      "touristSpotLongitude",
                      "touristSpotHashtag"
                    ]
                  }
                },
                "regionWeatherInfo": {
                  "description": "Current weather info for the region",
                  "type": "object",
                  "properties": {
                    "temperatureCelsius": {
                      "description": "Temperature of the weather",
                      "type": "number"
                    },
                    "weatherName": {
                      "description": "Name of the weather",
                      "type": "string"
                    },
                    "weatherDesc": {
                      "description": "Description of the weather",
                      "type": "string"
                    },
                    "regionName": {
                      "description": "Name of the region",
                      "type": "string"
                    }
                  },
                  "required": [
                    "temperatureCelsius",
                    "weatherName",
                    "weatherDesc",
                    "regionName"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "modelRouteId",
                "storyId",
                "routeName",
                "region",
                "regionDesc",
                "recommendation",
                "regionLatitude",
                "regionLongitude",
                "regionBackgroundMedia",
                "touristSpotList",
                "regionWeatherInfo"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelRouteResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get Model Route by ID",
        "tags": [
          "Routes"
        ]
      }
    },
    "/locations/info": {
      "get": {
        "description": "Retrieve basic location details with thumbnail images using Google Places.",
        "operationId": "TouriiBackendController_getLocationInfo",
        "parameters": [
          {
            "name": "address",
            "required": false,
            "in": "query",
            "description": "Address for enhanced search accuracy",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "longitude",
            "required": false,
            "in": "query",
            "description": "Longitude for location bias",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "latitude",
            "required": false,
            "in": "query",
            "description": "Latitude for location bias",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "required": true,
            "in": "query",
            "description": "Place name or search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved location info with images",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "Location name from Google Places",
                  "type": "string"
                },
                "formattedAddress": {
                  "description": "Formatted address from Google Places",
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "International phone number",
                  "type": "string"
                },
                "website": {
                  "description": "Website URL",
                  "type": "string"
                },
                "rating": {
                  "description": "Google Places rating (1-5 scale)",
                  "type": "number"
                },
                "googleMapsUrl": {
                  "description": "Direct Google Maps URL",
                  "type": "string"
                },
                "openingHours": {
                  "description": "Opening hours for each day of the week",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "images": {
                  "description": "Thumbnail images of the location (up to 3 images, 400x400px)",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "description": "Direct URL to the image from Google Places Photos API",
                        "type": "string"
                      },
                      "width": {
                        "description": "Image width in pixels",
                        "type": "number"
                      },
                      "height": {
                        "description": "Image height in pixels",
                        "type": "number"
                      },
                      "photoReference": {
                        "description": "Google Places photo reference ID",
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "width",
                      "height",
                      "photoReference"
                    ]
                  }
                }
              },
              "required": [
                "name"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationInfoResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get Location Info",
        "tags": [
          "Routes"
        ]
      }
    },
    "/quests": {
      "get": {
        "description": "Get quest with pagination",
        "operationId": "TouriiBackendController_getQuestList",
        "parameters": [
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "questType",
            "required": false,
            "in": "query",
            "description": "Filter by quest type",
            "schema": {
              "enum": [
                "UNKNOWN",
                "TRAVEL_TO_EARN",
                "EARN_TO_TRAVEL",
                "CAMPAIGN",
                "COMMUNITY_EVENT"
              ],
              "type": "string"
            }
          },
          {
            "name": "isUnlocked",
            "required": false,
            "in": "query",
            "description": "Filter by unlocked status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isPremium",
            "required": false,
            "in": "query",
            "description": "Filter by premium status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of quests per page (default: 20, max: 100)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination (default: 1)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch quests successfully",
            "schema": {
              "type": "object",
              "properties": {
                "quests": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "questId": {
                        "description": "Unique identifier for the quest",
                        "type": "string"
                      },
                      "questName": {
                        "description": "Name of the quest",
                        "type": "string"
                      },
                      "questDesc": {
                        "description": "Description of the quest",
                        "type": "string"
                      },
                      "questImage": {
                        "description": "URL to the quest image",
                        "type": "string"
                      },
                      "questType": {
                        "description": "Quest type",
                        "type": "string",
                        "enum": [
                          "UNKNOWN",
                          "TRAVEL_TO_EARN",
                          "EARN_TO_TRAVEL",
                          "CAMPAIGN",
                          "COMMUNITY_EVENT"
                        ],
                        "x-enumNames": [
                          "UNKNOWN",
                          "TRAVEL_TO_EARN",
                          "EARN_TO_TRAVEL",
                          "CAMPAIGN",
                          "COMMUNITY_EVENT"
                        ]
                      },
                      "isUnlocked": {
                        "description": "Whether quest is unlocked",
                        "type": "boolean"
                      },
                      "isPremium": {
                        "description": "Whether quest is premium",
                        "type": "boolean"
                      },
                      "totalMagatamaPointAwarded": {
                        "description": "Total Magatama points awarded",
                        "type": "number"
                      },
                      "tasks": {
                        "description": "Tasks associated with this quest",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "taskId": {
                              "description": "Unique identifier for the task",
                              "type": "string"
                            },
                            "taskTheme": {
                              "description": "Theme of the task",
                              "type": "string",
                              "enum": [
                                "STORY",
                                "LOCAL_CULTURE",
                                "FOOD",
                                "URBAN_EXPLORE",
                                "NATURE"
                              ],
                              "x-enumNames": [
                                "STORY",
                                "LOCAL_CULTURE",
                                "FOOD",
                                "URBAN_EXPLORE",
                                "NATURE"
                              ]
                            },
                            "taskType": {
                              "description": "Type of the task",
                              "type": "string",
                              "enum": [
                                "VISIT_LOCATION",
                                "PHOTO_UPLOAD",
                                "ANSWER_TEXT",
                                "SELECT_OPTION",
                                "SHARE_SOCIAL",
                                "CHECK_IN",
                                "GROUP_ACTIVITY",
                                "LOCAL_INTERACTION"
                              ],
                              "x-enumNames": [
                                "VISIT_LOCATION",
                                "PHOTO_UPLOAD",
                                "ANSWER_TEXT",
                                "SELECT_OPTION",
                                "SHARE_SOCIAL",
                                "CHECK_IN",
                                "GROUP_ACTIVITY",
                                "LOCAL_INTERACTION"
                              ]
                            },
                            "taskName": {
                              "description": "Name of the task",
                              "type": "string"
                            },
                            "taskDesc": {
                              "description": "Description of the task",
                              "type": "string"
                            },
                            "isUnlocked": {
                              "description": "Whether task is unlocked",
                              "type": "boolean"
                            },
                            "requiredAction": {
                              "description": "Action required to complete the task",
                              "type": "string"
                            },
                            "groupActivityMembers": {
                              "description": "Members for group activities",
                              "type": "array",
                              "items": {}
                            },
                            "selectOptions": {
                              "description": "Options for selection tasks",
                              "type": "array",
                              "items": {}
                            },
                            "antiCheatRules": {
                              "description": "Rules to prevent cheating"
                            },
                            "magatamaPointAwarded": {
                              "description": "Magatama points awarded for this task",
                              "type": "number"
                            },
                            "rewardEarned": {
                              "description": "Reward earned for this task",
                              "type": "string"
                            },
                            "isCompleted": {
                              "description": "Whether task is completed",
                              "type": "boolean"
                            },
                            "delFlag": {
                              "description": "Flag to indicate if the record is deleted",
                              "type": "boolean"
                            },
                            "insUserId": {
                              "description": "ID of user who created this record",
                              "type": "string"
                            },
                            "insDateTime": {
                              "description": "Timestamp of record creation",
                              "type": "string"
                            },
                            "updUserId": {
                              "description": "ID of user who last updated this record",
                              "type": "string"
                            },
                            "updDateTime": {
                              "description": "Timestamp of last record update",
                              "type": "string"
                            }
                          },
                          "required": [
                            "taskId",
                            "taskTheme",
                            "taskType",
                            "taskName",
                            "taskDesc",
                            "isUnlocked",
                            "requiredAction",
                            "antiCheatRules",
                            "magatamaPointAwarded",
                            "isCompleted"
                          ]
                        }
                      },
                      "touristSpot": {
                        "description": "Tourist spot associated with this quest",
                        "type": "object",
                        "properties": {
                          "touristSpotId": {
                            "description": "Unique identifier for the tourist spot",
                            "type": "string"
                          },
                          "storyChapterId": {
                            "description": "Unique identifier for the story chapter",
                            "type": "string"
                          },
                          "touristSpotName": {
                            "description": "Name of the tourist spot",
                            "type": "string"
                          },
                          "touristSpotDesc": {
                            "description": "Description of the tourist spot",
                            "type": "string"
                          },
                          "bestVisitTime": {
                            "description": "Best visit time of the tourist spot",
                            "type": "string"
                          },
                          "address": {
                            "description": "Address of the tourist spot",
                            "type": "string"
                          },
                          "touristSpotLatitude": {
                            "description": "Latitude of the tourist spot",
                            "type": "number"
                          },
                          "touristSpotLongitude": {
                            "description": "Longitude of the tourist spot",
                            "type": "number"
                          },
                          "touristSpotHashtag": {
                            "description": "Hashtags associated with this location",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "storyChapterLink": {
                            "description": "Link to the related story chapter",
                            "type": "string"
                          },
                          "imageSet": {
                            "description": "Image set for the tourist spot",
                            "type": "object",
                            "properties": {
                              "main": {
                                "description": "Main image of the tourist spot",
                                "type": "string"
                              },
                              "small": {
                                "description": "Small images of the tourist spot",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "required": [
                              "main",
                              "small"
                            ]
                          },
                          "weatherInfo": {
                            "description": "Weather info for the tourist spot",
                            "type": "object",
                            "properties": {
                              "temperatureCelsius": {
                                "description": "Temperature of the weather",
                                "type": "number"
                              },
                              "weatherName": {
                                "description": "Name of the weather",
                                "type": "string"
                              },
                              "weatherDesc": {
                                "description": "Description of the weather",
                                "type": "string"
                              }
                            },
                            "required": [
                              "temperatureCelsius",
                              "weatherName",
                              "weatherDesc"
                            ]
                          },
                          "delFlag": {
                            "description": "Flag to indicate if the record is deleted",
                            "type": "boolean"
                          },
                          "insUserId": {
                            "description": "ID of user who created this record",
                            "type": "string"
                          },
                          "insDateTime": {
                            "description": "Timestamp of record creation",
                            "type": "string"
                          },
                          "updUserId": {
                            "description": "ID of user who last updated this record",
                            "type": "string"
                          },
                          "updDateTime": {
                            "description": "Timestamp of last record update",
                            "type": "string"
                          }
                        },
                        "required": [
                          "touristSpotId",
                          "storyChapterId",
                          "touristSpotName",
                          "touristSpotDesc",
                          "bestVisitTime",
                          "address",
                          "touristSpotLatitude",
                          "touristSpotLongitude",
                          "touristSpotHashtag"
                        ]
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "questId",
                      "questName",
                      "questDesc",
                      "questType",
                      "isUnlocked",
                      "isPremium",
                      "totalMagatamaPointAwarded"
                    ]
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "currentPage": {
                      "type": "number"
                    },
                    "totalPages": {
                      "type": "number"
                    },
                    "totalQuests": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "currentPage",
                    "totalPages",
                    "totalQuests"
                  ]
                }
              },
              "required": [
                "quests",
                "pagination"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestListResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get quest with pagination",
        "tags": [
          "Quest"
        ]
      },
      "post": {
        "description": "Create a new quest.",
        "operationId": "TouriiBackendController_createQuest",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Quest create request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "touristSpotId": {
                    "description": "Unique identifier for the tourist spot",
                    "type": "string"
                  },
                  "questName": {
                    "description": "Name of the quest",
                    "type": "string"
                  },
                  "questDesc": {
                    "description": "Description of the quest",
                    "type": "string"
                  },
                  "questImage": {
                    "description": "URL to the quest image",
                    "type": "string"
                  },
                  "questType": {
                    "description": "Quest type",
                    "type": "string",
                    "enum": [
                      "UNKNOWN",
                      "TRAVEL_TO_EARN",
                      "EARN_TO_TRAVEL",
                      "CAMPAIGN",
                      "COMMUNITY_EVENT"
                    ],
                    "x-enumNames": [
                      "UNKNOWN",
                      "TRAVEL_TO_EARN",
                      "EARN_TO_TRAVEL",
                      "CAMPAIGN",
                      "COMMUNITY_EVENT"
                    ]
                  },
                  "isUnlocked": {
                    "description": "Whether quest is unlocked",
                    "type": "boolean"
                  },
                  "isPremium": {
                    "description": "Whether quest is premium",
                    "type": "boolean"
                  },
                  "totalMagatamaPointAwarded": {
                    "description": "Total Magatama points awarded",
                    "type": "number"
                  },
                  "rewardType": {
                    "description": "Reward type",
                    "type": "string",
                    "enum": [
                      "UNKNOWN",
                      "LOCAL_EXPERIENCES",
                      "CULINARY",
                      "ADVENTURE_NATURE",
                      "CULTURAL_COMMUNITY",
                      "HIDDEN_PERKS",
                      "SURPRISE_TREATS",
                      "BONUS_UPGRADES",
                      "SOCIAL_RECOGNITION",
                      "RETURNING_VISITOR_BONUS",
                      "ELITE_EXPERIENCES",
                      "WELLNESS",
                      "SHOPPING",
                      "ENTERTAINMENT",
                      "TRANSPORT_CONNECTIVITY",
                      "LOCAL_PARTNERSHIPS"
                    ],
                    "x-enumNames": [
                      "UNKNOWN",
                      "LOCAL_EXPERIENCES",
                      "CULINARY",
                      "ADVENTURE_NATURE",
                      "CULTURAL_COMMUNITY",
                      "HIDDEN_PERKS",
                      "SURPRISE_TREATS",
                      "BONUS_UPGRADES",
                      "SOCIAL_RECOGNITION",
                      "RETURNING_VISITOR_BONUS",
                      "ELITE_EXPERIENCES",
                      "WELLNESS",
                      "SHOPPING",
                      "ENTERTAINMENT",
                      "TRANSPORT_CONNECTIVITY",
                      "LOCAL_PARTNERSHIPS"
                    ]
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the quest is deleted",
                    "type": "boolean"
                  }
                },
                "required": [
                  "touristSpotId",
                  "questName",
                  "questDesc",
                  "questType",
                  "isUnlocked",
                  "isPremium",
                  "totalMagatamaPointAwarded",
                  "rewardType",
                  "delFlag"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created quest",
            "schema": {
              "type": "object",
              "properties": {
                "questId": {
                  "description": "Unique identifier for the quest",
                  "type": "string"
                },
                "questName": {
                  "description": "Name of the quest",
                  "type": "string"
                },
                "questDesc": {
                  "description": "Description of the quest",
                  "type": "string"
                },
                "questImage": {
                  "description": "URL to the quest image",
                  "type": "string"
                },
                "questType": {
                  "description": "Quest type",
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "TRAVEL_TO_EARN",
                    "EARN_TO_TRAVEL",
                    "CAMPAIGN",
                    "COMMUNITY_EVENT"
                  ],
                  "x-enumNames": [
                    "UNKNOWN",
                    "TRAVEL_TO_EARN",
                    "EARN_TO_TRAVEL",
                    "CAMPAIGN",
                    "COMMUNITY_EVENT"
                  ]
                },
                "isUnlocked": {
                  "description": "Whether quest is unlocked",
                  "type": "boolean"
                },
                "isPremium": {
                  "description": "Whether quest is premium",
                  "type": "boolean"
                },
                "totalMagatamaPointAwarded": {
                  "description": "Total Magatama points awarded",
                  "type": "number"
                },
                "tasks": {
                  "description": "Tasks associated with this quest",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "taskId": {
                        "description": "Unique identifier for the task",
                        "type": "string"
                      },
                      "taskTheme": {
                        "description": "Theme of the task",
                        "type": "string",
                        "enum": [
                          "STORY",
                          "LOCAL_CULTURE",
                          "FOOD",
                          "URBAN_EXPLORE",
                          "NATURE"
                        ],
                        "x-enumNames": [
                          "STORY",
                          "LOCAL_CULTURE",
                          "FOOD",
                          "URBAN_EXPLORE",
                          "NATURE"
                        ]
                      },
                      "taskType": {
                        "description": "Type of the task",
                        "type": "string",
                        "enum": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ],
                        "x-enumNames": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ]
                      },
                      "taskName": {
                        "description": "Name of the task",
                        "type": "string"
                      },
                      "taskDesc": {
                        "description": "Description of the task",
                        "type": "string"
                      },
                      "isUnlocked": {
                        "description": "Whether task is unlocked",
                        "type": "boolean"
                      },
                      "requiredAction": {
                        "description": "Action required to complete the task",
                        "type": "string"
                      },
                      "groupActivityMembers": {
                        "description": "Members for group activities",
                        "type": "array",
                        "items": {}
                      },
                      "selectOptions": {
                        "description": "Options for selection tasks",
                        "type": "array",
                        "items": {}
                      },
                      "antiCheatRules": {
                        "description": "Rules to prevent cheating"
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded for this task",
                        "type": "number"
                      },
                      "rewardEarned": {
                        "description": "Reward earned for this task",
                        "type": "string"
                      },
                      "isCompleted": {
                        "description": "Whether task is completed",
                        "type": "boolean"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "taskId",
                      "taskTheme",
                      "taskType",
                      "taskName",
                      "taskDesc",
                      "isUnlocked",
                      "requiredAction",
                      "antiCheatRules",
                      "magatamaPointAwarded",
                      "isCompleted"
                    ]
                  }
                },
                "touristSpot": {
                  "description": "Tourist spot associated with this quest",
                  "type": "object",
                  "properties": {
                    "touristSpotId": {
                      "description": "Unique identifier for the tourist spot",
                      "type": "string"
                    },
                    "storyChapterId": {
                      "description": "Unique identifier for the story chapter",
                      "type": "string"
                    },
                    "touristSpotName": {
                      "description": "Name of the tourist spot",
                      "type": "string"
                    },
                    "touristSpotDesc": {
                      "description": "Description of the tourist spot",
                      "type": "string"
                    },
                    "bestVisitTime": {
                      "description": "Best visit time of the tourist spot",
                      "type": "string"
                    },
                    "address": {
                      "description": "Address of the tourist spot",
                      "type": "string"
                    },
                    "touristSpotLatitude": {
                      "description": "Latitude of the tourist spot",
                      "type": "number"
                    },
                    "touristSpotLongitude": {
                      "description": "Longitude of the tourist spot",
                      "type": "number"
                    },
                    "touristSpotHashtag": {
                      "description": "Hashtags associated with this location",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storyChapterLink": {
                      "description": "Link to the related story chapter",
                      "type": "string"
                    },
                    "imageSet": {
                      "description": "Image set for the tourist spot",
                      "type": "object",
                      "properties": {
                        "main": {
                          "description": "Main image of the tourist spot",
                          "type": "string"
                        },
                        "small": {
                          "description": "Small images of the tourist spot",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "main",
                        "small"
                      ]
                    },
                    "weatherInfo": {
                      "description": "Weather info for the tourist spot",
                      "type": "object",
                      "properties": {
                        "temperatureCelsius": {
                          "description": "Temperature of the weather",
                          "type": "number"
                        },
                        "weatherName": {
                          "description": "Name of the weather",
                          "type": "string"
                        },
                        "weatherDesc": {
                          "description": "Description of the weather",
                          "type": "string"
                        }
                      },
                      "required": [
                        "temperatureCelsius",
                        "weatherName",
                        "weatherDesc"
                      ]
                    },
                    "delFlag": {
                      "description": "Flag to indicate if the record is deleted",
                      "type": "boolean"
                    },
                    "insUserId": {
                      "description": "ID of user who created this record",
                      "type": "string"
                    },
                    "insDateTime": {
                      "description": "Timestamp of record creation",
                      "type": "string"
                    },
                    "updUserId": {
                      "description": "ID of user who last updated this record",
                      "type": "string"
                    },
                    "updDateTime": {
                      "description": "Timestamp of last record update",
                      "type": "string"
                    }
                  },
                  "required": [
                    "touristSpotId",
                    "storyChapterId",
                    "touristSpotName",
                    "touristSpotDesc",
                    "bestVisitTime",
                    "address",
                    "touristSpotLatitude",
                    "touristSpotLongitude",
                    "touristSpotHashtag"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "questId",
                "questName",
                "questDesc",
                "questType",
                "isUnlocked",
                "isPremium",
                "totalMagatamaPointAwarded"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Create Quest",
        "tags": [
          "Quest"
        ]
      }
    },
    "/quests/{questId}": {
      "get": {
        "description": "Get quest by ID",
        "operationId": "TouriiBackendController_getQuestById",
        "parameters": [
          {
            "name": "questId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quest found successfully",
            "schema": {
              "type": "object",
              "properties": {
                "questId": {
                  "description": "Unique identifier for the quest",
                  "type": "string"
                },
                "questName": {
                  "description": "Name of the quest",
                  "type": "string"
                },
                "questDesc": {
                  "description": "Description of the quest",
                  "type": "string"
                },
                "questImage": {
                  "description": "URL to the quest image",
                  "type": "string"
                },
                "questType": {
                  "description": "Quest type",
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "TRAVEL_TO_EARN",
                    "EARN_TO_TRAVEL",
                    "CAMPAIGN",
                    "COMMUNITY_EVENT"
                  ],
                  "x-enumNames": [
                    "UNKNOWN",
                    "TRAVEL_TO_EARN",
                    "EARN_TO_TRAVEL",
                    "CAMPAIGN",
                    "COMMUNITY_EVENT"
                  ]
                },
                "isUnlocked": {
                  "description": "Whether quest is unlocked",
                  "type": "boolean"
                },
                "isPremium": {
                  "description": "Whether quest is premium",
                  "type": "boolean"
                },
                "totalMagatamaPointAwarded": {
                  "description": "Total Magatama points awarded",
                  "type": "number"
                },
                "tasks": {
                  "description": "Tasks associated with this quest",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "taskId": {
                        "description": "Unique identifier for the task",
                        "type": "string"
                      },
                      "taskTheme": {
                        "description": "Theme of the task",
                        "type": "string",
                        "enum": [
                          "STORY",
                          "LOCAL_CULTURE",
                          "FOOD",
                          "URBAN_EXPLORE",
                          "NATURE"
                        ],
                        "x-enumNames": [
                          "STORY",
                          "LOCAL_CULTURE",
                          "FOOD",
                          "URBAN_EXPLORE",
                          "NATURE"
                        ]
                      },
                      "taskType": {
                        "description": "Type of the task",
                        "type": "string",
                        "enum": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ],
                        "x-enumNames": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ]
                      },
                      "taskName": {
                        "description": "Name of the task",
                        "type": "string"
                      },
                      "taskDesc": {
                        "description": "Description of the task",
                        "type": "string"
                      },
                      "isUnlocked": {
                        "description": "Whether task is unlocked",
                        "type": "boolean"
                      },
                      "requiredAction": {
                        "description": "Action required to complete the task",
                        "type": "string"
                      },
                      "groupActivityMembers": {
                        "description": "Members for group activities",
                        "type": "array",
                        "items": {}
                      },
                      "selectOptions": {
                        "description": "Options for selection tasks",
                        "type": "array",
                        "items": {}
                      },
                      "antiCheatRules": {
                        "description": "Rules to prevent cheating"
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded for this task",
                        "type": "number"
                      },
                      "rewardEarned": {
                        "description": "Reward earned for this task",
                        "type": "string"
                      },
                      "isCompleted": {
                        "description": "Whether task is completed",
                        "type": "boolean"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "taskId",
                      "taskTheme",
                      "taskType",
                      "taskName",
                      "taskDesc",
                      "isUnlocked",
                      "requiredAction",
                      "antiCheatRules",
                      "magatamaPointAwarded",
                      "isCompleted"
                    ]
                  }
                },
                "touristSpot": {
                  "description": "Tourist spot associated with this quest",
                  "type": "object",
                  "properties": {
                    "touristSpotId": {
                      "description": "Unique identifier for the tourist spot",
                      "type": "string"
                    },
                    "storyChapterId": {
                      "description": "Unique identifier for the story chapter",
                      "type": "string"
                    },
                    "touristSpotName": {
                      "description": "Name of the tourist spot",
                      "type": "string"
                    },
                    "touristSpotDesc": {
                      "description": "Description of the tourist spot",
                      "type": "string"
                    },
                    "bestVisitTime": {
                      "description": "Best visit time of the tourist spot",
                      "type": "string"
                    },
                    "address": {
                      "description": "Address of the tourist spot",
                      "type": "string"
                    },
                    "touristSpotLatitude": {
                      "description": "Latitude of the tourist spot",
                      "type": "number"
                    },
                    "touristSpotLongitude": {
                      "description": "Longitude of the tourist spot",
                      "type": "number"
                    },
                    "touristSpotHashtag": {
                      "description": "Hashtags associated with this location",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storyChapterLink": {
                      "description": "Link to the related story chapter",
                      "type": "string"
                    },
                    "imageSet": {
                      "description": "Image set for the tourist spot",
                      "type": "object",
                      "properties": {
                        "main": {
                          "description": "Main image of the tourist spot",
                          "type": "string"
                        },
                        "small": {
                          "description": "Small images of the tourist spot",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "main",
                        "small"
                      ]
                    },
                    "weatherInfo": {
                      "description": "Weather info for the tourist spot",
                      "type": "object",
                      "properties": {
                        "temperatureCelsius": {
                          "description": "Temperature of the weather",
                          "type": "number"
                        },
                        "weatherName": {
                          "description": "Name of the weather",
                          "type": "string"
                        },
                        "weatherDesc": {
                          "description": "Description of the weather",
                          "type": "string"
                        }
                      },
                      "required": [
                        "temperatureCelsius",
                        "weatherName",
                        "weatherDesc"
                      ]
                    },
                    "delFlag": {
                      "description": "Flag to indicate if the record is deleted",
                      "type": "boolean"
                    },
                    "insUserId": {
                      "description": "ID of user who created this record",
                      "type": "string"
                    },
                    "insDateTime": {
                      "description": "Timestamp of record creation",
                      "type": "string"
                    },
                    "updUserId": {
                      "description": "ID of user who last updated this record",
                      "type": "string"
                    },
                    "updDateTime": {
                      "description": "Timestamp of last record update",
                      "type": "string"
                    }
                  },
                  "required": [
                    "touristSpotId",
                    "storyChapterId",
                    "touristSpotName",
                    "touristSpotDesc",
                    "bestVisitTime",
                    "address",
                    "touristSpotLatitude",
                    "touristSpotLongitude",
                    "touristSpotHashtag"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "questId",
                "questName",
                "questDesc",
                "questType",
                "isUnlocked",
                "isPremium",
                "totalMagatamaPointAwarded"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get quest by ID",
        "tags": [
          "Quest"
        ]
      },
      "delete": {
        "description": "Delete a quest and its tasks.",
        "operationId": "TouriiBackendController_deleteQuest",
        "parameters": [
          {
            "name": "questId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Quest deleted"
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Delete Quest",
        "tags": [
          "Quest"
        ]
      }
    },
    "/quests/tourist-spot/{touristSpotId}": {
      "get": {
        "description": "Retrieve quests linked to a tourist spot. Provide a userId to include completion status.",
        "operationId": "TouriiBackendController_getQuestByTouristSpotId",
        "parameters": [
          {
            "name": "touristSpotId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "latitude",
            "required": false,
            "in": "query",
            "description": "Latitude for location tracking",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "longitude",
            "required": false,
            "in": "query",
            "description": "Longitude for location tracking",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Quests found successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "questId": {
                    "description": "Unique identifier for the quest",
                    "type": "string"
                  },
                  "questName": {
                    "description": "Name of the quest",
                    "type": "string"
                  },
                  "questDesc": {
                    "description": "Description of the quest",
                    "type": "string"
                  },
                  "questImage": {
                    "description": "URL to the quest image",
                    "type": "string"
                  },
                  "questType": {
                    "description": "Quest type",
                    "type": "string",
                    "enum": [
                      "UNKNOWN",
                      "TRAVEL_TO_EARN",
                      "EARN_TO_TRAVEL",
                      "CAMPAIGN",
                      "COMMUNITY_EVENT"
                    ],
                    "x-enumNames": [
                      "UNKNOWN",
                      "TRAVEL_TO_EARN",
                      "EARN_TO_TRAVEL",
                      "CAMPAIGN",
                      "COMMUNITY_EVENT"
                    ]
                  },
                  "isUnlocked": {
                    "description": "Whether quest is unlocked",
                    "type": "boolean"
                  },
                  "isPremium": {
                    "description": "Whether quest is premium",
                    "type": "boolean"
                  },
                  "totalMagatamaPointAwarded": {
                    "description": "Total Magatama points awarded",
                    "type": "number"
                  },
                  "tasks": {
                    "description": "Tasks associated with this quest",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "taskId": {
                          "description": "Unique identifier for the task",
                          "type": "string"
                        },
                        "taskTheme": {
                          "description": "Theme of the task",
                          "type": "string",
                          "enum": [
                            "STORY",
                            "LOCAL_CULTURE",
                            "FOOD",
                            "URBAN_EXPLORE",
                            "NATURE"
                          ],
                          "x-enumNames": [
                            "STORY",
                            "LOCAL_CULTURE",
                            "FOOD",
                            "URBAN_EXPLORE",
                            "NATURE"
                          ]
                        },
                        "taskType": {
                          "description": "Type of the task",
                          "type": "string",
                          "enum": [
                            "VISIT_LOCATION",
                            "PHOTO_UPLOAD",
                            "ANSWER_TEXT",
                            "SELECT_OPTION",
                            "SHARE_SOCIAL",
                            "CHECK_IN",
                            "GROUP_ACTIVITY",
                            "LOCAL_INTERACTION"
                          ],
                          "x-enumNames": [
                            "VISIT_LOCATION",
                            "PHOTO_UPLOAD",
                            "ANSWER_TEXT",
                            "SELECT_OPTION",
                            "SHARE_SOCIAL",
                            "CHECK_IN",
                            "GROUP_ACTIVITY",
                            "LOCAL_INTERACTION"
                          ]
                        },
                        "taskName": {
                          "description": "Name of the task",
                          "type": "string"
                        },
                        "taskDesc": {
                          "description": "Description of the task",
                          "type": "string"
                        },
                        "isUnlocked": {
                          "description": "Whether task is unlocked",
                          "type": "boolean"
                        },
                        "requiredAction": {
                          "description": "Action required to complete the task",
                          "type": "string"
                        },
                        "groupActivityMembers": {
                          "description": "Members for group activities",
                          "type": "array",
                          "items": {}
                        },
                        "selectOptions": {
                          "description": "Options for selection tasks",
                          "type": "array",
                          "items": {}
                        },
                        "antiCheatRules": {
                          "description": "Rules to prevent cheating"
                        },
                        "magatamaPointAwarded": {
                          "description": "Magatama points awarded for this task",
                          "type": "number"
                        },
                        "rewardEarned": {
                          "description": "Reward earned for this task",
                          "type": "string"
                        },
                        "isCompleted": {
                          "description": "Whether task is completed",
                          "type": "boolean"
                        },
                        "delFlag": {
                          "description": "Flag to indicate if the record is deleted",
                          "type": "boolean"
                        },
                        "insUserId": {
                          "description": "ID of user who created this record",
                          "type": "string"
                        },
                        "insDateTime": {
                          "description": "Timestamp of record creation",
                          "type": "string"
                        },
                        "updUserId": {
                          "description": "ID of user who last updated this record",
                          "type": "string"
                        },
                        "updDateTime": {
                          "description": "Timestamp of last record update",
                          "type": "string"
                        }
                      },
                      "required": [
                        "taskId",
                        "taskTheme",
                        "taskType",
                        "taskName",
                        "taskDesc",
                        "isUnlocked",
                        "requiredAction",
                        "antiCheatRules",
                        "magatamaPointAwarded",
                        "isCompleted"
                      ]
                    }
                  },
                  "touristSpot": {
                    "description": "Tourist spot associated with this quest",
                    "type": "object",
                    "properties": {
                      "touristSpotId": {
                        "description": "Unique identifier for the tourist spot",
                        "type": "string"
                      },
                      "storyChapterId": {
                        "description": "Unique identifier for the story chapter",
                        "type": "string"
                      },
                      "touristSpotName": {
                        "description": "Name of the tourist spot",
                        "type": "string"
                      },
                      "touristSpotDesc": {
                        "description": "Description of the tourist spot",
                        "type": "string"
                      },
                      "bestVisitTime": {
                        "description": "Best visit time of the tourist spot",
                        "type": "string"
                      },
                      "address": {
                        "description": "Address of the tourist spot",
                        "type": "string"
                      },
                      "touristSpotLatitude": {
                        "description": "Latitude of the tourist spot",
                        "type": "number"
                      },
                      "touristSpotLongitude": {
                        "description": "Longitude of the tourist spot",
                        "type": "number"
                      },
                      "touristSpotHashtag": {
                        "description": "Hashtags associated with this location",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "storyChapterLink": {
                        "description": "Link to the related story chapter",
                        "type": "string"
                      },
                      "imageSet": {
                        "description": "Image set for the tourist spot",
                        "type": "object",
                        "properties": {
                          "main": {
                            "description": "Main image of the tourist spot",
                            "type": "string"
                          },
                          "small": {
                            "description": "Small images of the tourist spot",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "main",
                          "small"
                        ]
                      },
                      "weatherInfo": {
                        "description": "Weather info for the tourist spot",
                        "type": "object",
                        "properties": {
                          "temperatureCelsius": {
                            "description": "Temperature of the weather",
                            "type": "number"
                          },
                          "weatherName": {
                            "description": "Name of the weather",
                            "type": "string"
                          },
                          "weatherDesc": {
                            "description": "Description of the weather",
                            "type": "string"
                          }
                        },
                        "required": [
                          "temperatureCelsius",
                          "weatherName",
                          "weatherDesc"
                        ]
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "touristSpotId",
                      "storyChapterId",
                      "touristSpotName",
                      "touristSpotDesc",
                      "bestVisitTime",
                      "address",
                      "touristSpotLatitude",
                      "touristSpotLongitude",
                      "touristSpotHashtag"
                    ]
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the record is deleted",
                    "type": "boolean"
                  },
                  "insUserId": {
                    "description": "ID of user who created this record",
                    "type": "string"
                  },
                  "insDateTime": {
                    "description": "Timestamp of record creation",
                    "type": "string"
                  },
                  "updUserId": {
                    "description": "ID of user who last updated this record",
                    "type": "string"
                  },
                  "updDateTime": {
                    "description": "Timestamp of last record update",
                    "type": "string"
                  }
                },
                "required": [
                  "questId",
                  "questName",
                  "questDesc",
                  "questType",
                  "isUnlocked",
                  "isPremium",
                  "totalMagatamaPointAwarded"
                ]
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestResponseDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get Quests by Tourist Spot",
        "tags": [
          "Quest"
        ]
      }
    },
    "/quests/{questId}/tasks": {
      "post": {
        "description": "Create a new quest task.",
        "operationId": "TouriiBackendController_createQuestTask",
        "parameters": [
          {
            "name": "questId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Quest task create request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskTheme": {
                    "description": "Theme of the task",
                    "type": "string",
                    "enum": [
                      "STORY",
                      "LOCAL_CULTURE",
                      "FOOD",
                      "URBAN_EXPLORE",
                      "NATURE"
                    ],
                    "x-enumNames": [
                      "STORY",
                      "LOCAL_CULTURE",
                      "FOOD",
                      "URBAN_EXPLORE",
                      "NATURE"
                    ]
                  },
                  "taskType": {
                    "description": "Type of the task",
                    "type": "string",
                    "enum": [
                      "VISIT_LOCATION",
                      "PHOTO_UPLOAD",
                      "ANSWER_TEXT",
                      "SELECT_OPTION",
                      "SHARE_SOCIAL",
                      "CHECK_IN",
                      "GROUP_ACTIVITY",
                      "LOCAL_INTERACTION"
                    ],
                    "x-enumNames": [
                      "VISIT_LOCATION",
                      "PHOTO_UPLOAD",
                      "ANSWER_TEXT",
                      "SELECT_OPTION",
                      "SHARE_SOCIAL",
                      "CHECK_IN",
                      "GROUP_ACTIVITY",
                      "LOCAL_INTERACTION"
                    ]
                  },
                  "taskName": {
                    "description": "Name of the task",
                    "type": "string"
                  },
                  "taskDesc": {
                    "description": "Description of the task",
                    "type": "string"
                  },
                  "isUnlocked": {
                    "description": "Whether task is unlocked",
                    "type": "boolean"
                  },
                  "requiredAction": {
                    "description": "Action required to complete the task",
                    "type": "string"
                  },
                  "groupActivityMembers": {
                    "description": "Members for group activities",
                    "type": "array",
                    "items": {}
                  },
                  "selectOptions": {
                    "description": "Options for selection tasks",
                    "type": "array",
                    "items": {}
                  },
                  "antiCheatRules": {
                    "description": "Rules to prevent cheating"
                  },
                  "magatamaPointAwarded": {
                    "description": "Magatama points awarded for this task",
                    "type": "number"
                  },
                  "rewardEarned": {
                    "description": "Reward earned for this task",
                    "type": "string"
                  }
                },
                "required": [
                  "taskTheme",
                  "taskType",
                  "taskName",
                  "taskDesc",
                  "isUnlocked",
                  "requiredAction",
                  "antiCheatRules",
                  "magatamaPointAwarded"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created quest task",
            "schema": {
              "type": "object",
              "properties": {
                "taskId": {
                  "description": "Unique identifier for the task",
                  "type": "string"
                },
                "taskTheme": {
                  "description": "Theme of the task",
                  "type": "string",
                  "enum": [
                    "STORY",
                    "LOCAL_CULTURE",
                    "FOOD",
                    "URBAN_EXPLORE",
                    "NATURE"
                  ],
                  "x-enumNames": [
                    "STORY",
                    "LOCAL_CULTURE",
                    "FOOD",
                    "URBAN_EXPLORE",
                    "NATURE"
                  ]
                },
                "taskType": {
                  "description": "Type of the task",
                  "type": "string",
                  "enum": [
                    "VISIT_LOCATION",
                    "PHOTO_UPLOAD",
                    "ANSWER_TEXT",
                    "SELECT_OPTION",
                    "SHARE_SOCIAL",
                    "CHECK_IN",
                    "GROUP_ACTIVITY",
                    "LOCAL_INTERACTION"
                  ],
                  "x-enumNames": [
                    "VISIT_LOCATION",
                    "PHOTO_UPLOAD",
                    "ANSWER_TEXT",
                    "SELECT_OPTION",
                    "SHARE_SOCIAL",
                    "CHECK_IN",
                    "GROUP_ACTIVITY",
                    "LOCAL_INTERACTION"
                  ]
                },
                "taskName": {
                  "description": "Name of the task",
                  "type": "string"
                },
                "taskDesc": {
                  "description": "Description of the task",
                  "type": "string"
                },
                "isUnlocked": {
                  "description": "Whether task is unlocked",
                  "type": "boolean"
                },
                "requiredAction": {
                  "description": "Action required to complete the task",
                  "type": "string"
                },
                "groupActivityMembers": {
                  "description": "Members for group activities",
                  "type": "array",
                  "items": {}
                },
                "selectOptions": {
                  "description": "Options for selection tasks",
                  "type": "array",
                  "items": {}
                },
                "antiCheatRules": {
                  "description": "Rules to prevent cheating"
                },
                "magatamaPointAwarded": {
                  "description": "Magatama points awarded for this task",
                  "type": "number"
                },
                "rewardEarned": {
                  "description": "Reward earned for this task",
                  "type": "string"
                },
                "isCompleted": {
                  "description": "Whether task is completed",
                  "type": "boolean"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "taskId",
                "taskTheme",
                "taskType",
                "taskName",
                "taskDesc",
                "isUnlocked",
                "requiredAction",
                "antiCheatRules",
                "magatamaPointAwarded",
                "isCompleted"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Create Quest Task",
        "tags": [
          "Quest"
        ]
      }
    },
    "/quests/update-quest": {
      "post": {
        "description": "Update an existing quest.",
        "operationId": "TouriiBackendController_updateQuest",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Quest update request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "touristSpotId": {
                    "description": "Unique identifier for the tourist spot",
                    "type": "string"
                  },
                  "questName": {
                    "description": "Name of the quest",
                    "type": "string"
                  },
                  "questDesc": {
                    "description": "Description of the quest",
                    "type": "string"
                  },
                  "questImage": {
                    "description": "URL to the quest image",
                    "type": "string"
                  },
                  "questType": {
                    "description": "Quest type",
                    "type": "string",
                    "enum": [
                      "UNKNOWN",
                      "TRAVEL_TO_EARN",
                      "EARN_TO_TRAVEL",
                      "CAMPAIGN",
                      "COMMUNITY_EVENT"
                    ],
                    "x-enumNames": [
                      "UNKNOWN",
                      "TRAVEL_TO_EARN",
                      "EARN_TO_TRAVEL",
                      "CAMPAIGN",
                      "COMMUNITY_EVENT"
                    ]
                  },
                  "isUnlocked": {
                    "description": "Whether quest is unlocked",
                    "type": "boolean"
                  },
                  "isPremium": {
                    "description": "Whether quest is premium",
                    "type": "boolean"
                  },
                  "totalMagatamaPointAwarded": {
                    "description": "Total Magatama points awarded",
                    "type": "number"
                  },
                  "rewardType": {
                    "description": "Reward type",
                    "type": "string",
                    "enum": [
                      "UNKNOWN",
                      "LOCAL_EXPERIENCES",
                      "CULINARY",
                      "ADVENTURE_NATURE",
                      "CULTURAL_COMMUNITY",
                      "HIDDEN_PERKS",
                      "SURPRISE_TREATS",
                      "BONUS_UPGRADES",
                      "SOCIAL_RECOGNITION",
                      "RETURNING_VISITOR_BONUS",
                      "ELITE_EXPERIENCES",
                      "WELLNESS",
                      "SHOPPING",
                      "ENTERTAINMENT",
                      "TRANSPORT_CONNECTIVITY",
                      "LOCAL_PARTNERSHIPS"
                    ],
                    "x-enumNames": [
                      "UNKNOWN",
                      "LOCAL_EXPERIENCES",
                      "CULINARY",
                      "ADVENTURE_NATURE",
                      "CULTURAL_COMMUNITY",
                      "HIDDEN_PERKS",
                      "SURPRISE_TREATS",
                      "BONUS_UPGRADES",
                      "SOCIAL_RECOGNITION",
                      "RETURNING_VISITOR_BONUS",
                      "ELITE_EXPERIENCES",
                      "WELLNESS",
                      "SHOPPING",
                      "ENTERTAINMENT",
                      "TRANSPORT_CONNECTIVITY",
                      "LOCAL_PARTNERSHIPS"
                    ]
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the quest is deleted",
                    "type": "boolean"
                  },
                  "questId": {
                    "description": "Unique identifier for the quest",
                    "type": "string"
                  },
                  "updUserId": {
                    "description": "Unique identifier for the user who updated the quest",
                    "type": "string"
                  },
                  "taskList": {
                    "description": "List of tasks for the quest",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "taskTheme": {
                          "description": "Theme of the task",
                          "type": "string",
                          "enum": [
                            "STORY",
                            "LOCAL_CULTURE",
                            "FOOD",
                            "URBAN_EXPLORE",
                            "NATURE"
                          ],
                          "x-enumNames": [
                            "STORY",
                            "LOCAL_CULTURE",
                            "FOOD",
                            "URBAN_EXPLORE",
                            "NATURE"
                          ]
                        },
                        "taskType": {
                          "description": "Type of the task",
                          "type": "string",
                          "enum": [
                            "VISIT_LOCATION",
                            "PHOTO_UPLOAD",
                            "ANSWER_TEXT",
                            "SELECT_OPTION",
                            "SHARE_SOCIAL",
                            "CHECK_IN",
                            "GROUP_ACTIVITY",
                            "LOCAL_INTERACTION"
                          ],
                          "x-enumNames": [
                            "VISIT_LOCATION",
                            "PHOTO_UPLOAD",
                            "ANSWER_TEXT",
                            "SELECT_OPTION",
                            "SHARE_SOCIAL",
                            "CHECK_IN",
                            "GROUP_ACTIVITY",
                            "LOCAL_INTERACTION"
                          ]
                        },
                        "taskName": {
                          "description": "Name of the task",
                          "type": "string"
                        },
                        "taskDesc": {
                          "description": "Description of the task",
                          "type": "string"
                        },
                        "isUnlocked": {
                          "description": "Whether task is unlocked",
                          "type": "boolean"
                        },
                        "requiredAction": {
                          "description": "Action required to complete the task",
                          "type": "string"
                        },
                        "groupActivityMembers": {
                          "description": "Members for group activities",
                          "type": "array",
                          "items": {}
                        },
                        "selectOptions": {
                          "description": "Options for selection tasks",
                          "type": "array",
                          "items": {}
                        },
                        "antiCheatRules": {
                          "description": "Rules to prevent cheating"
                        },
                        "magatamaPointAwarded": {
                          "description": "Magatama points awarded for this task",
                          "type": "number"
                        },
                        "rewardEarned": {
                          "description": "Reward earned for this task",
                          "type": "string"
                        },
                        "taskId": {
                          "description": "Unique identifier for the task",
                          "type": "string"
                        },
                        "delFlag": {
                          "description": "Flag to indicate if the task is deleted",
                          "type": "boolean"
                        },
                        "updUserId": {
                          "description": "Unique identifier for the user who updated the task",
                          "type": "string"
                        }
                      },
                      "required": [
                        "taskTheme",
                        "taskType",
                        "taskName",
                        "taskDesc",
                        "isUnlocked",
                        "requiredAction",
                        "antiCheatRules",
                        "magatamaPointAwarded",
                        "taskId",
                        "delFlag",
                        "updUserId"
                      ]
                    }
                  }
                },
                "required": [
                  "touristSpotId",
                  "questName",
                  "questDesc",
                  "questType",
                  "isUnlocked",
                  "isPremium",
                  "totalMagatamaPointAwarded",
                  "rewardType",
                  "delFlag",
                  "questId",
                  "updUserId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully updated quest",
            "schema": {
              "type": "object",
              "properties": {
                "questId": {
                  "description": "Unique identifier for the quest",
                  "type": "string"
                },
                "questName": {
                  "description": "Name of the quest",
                  "type": "string"
                },
                "questDesc": {
                  "description": "Description of the quest",
                  "type": "string"
                },
                "questImage": {
                  "description": "URL to the quest image",
                  "type": "string"
                },
                "questType": {
                  "description": "Quest type",
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "TRAVEL_TO_EARN",
                    "EARN_TO_TRAVEL",
                    "CAMPAIGN",
                    "COMMUNITY_EVENT"
                  ],
                  "x-enumNames": [
                    "UNKNOWN",
                    "TRAVEL_TO_EARN",
                    "EARN_TO_TRAVEL",
                    "CAMPAIGN",
                    "COMMUNITY_EVENT"
                  ]
                },
                "isUnlocked": {
                  "description": "Whether quest is unlocked",
                  "type": "boolean"
                },
                "isPremium": {
                  "description": "Whether quest is premium",
                  "type": "boolean"
                },
                "totalMagatamaPointAwarded": {
                  "description": "Total Magatama points awarded",
                  "type": "number"
                },
                "tasks": {
                  "description": "Tasks associated with this quest",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "taskId": {
                        "description": "Unique identifier for the task",
                        "type": "string"
                      },
                      "taskTheme": {
                        "description": "Theme of the task",
                        "type": "string",
                        "enum": [
                          "STORY",
                          "LOCAL_CULTURE",
                          "FOOD",
                          "URBAN_EXPLORE",
                          "NATURE"
                        ],
                        "x-enumNames": [
                          "STORY",
                          "LOCAL_CULTURE",
                          "FOOD",
                          "URBAN_EXPLORE",
                          "NATURE"
                        ]
                      },
                      "taskType": {
                        "description": "Type of the task",
                        "type": "string",
                        "enum": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ],
                        "x-enumNames": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ]
                      },
                      "taskName": {
                        "description": "Name of the task",
                        "type": "string"
                      },
                      "taskDesc": {
                        "description": "Description of the task",
                        "type": "string"
                      },
                      "isUnlocked": {
                        "description": "Whether task is unlocked",
                        "type": "boolean"
                      },
                      "requiredAction": {
                        "description": "Action required to complete the task",
                        "type": "string"
                      },
                      "groupActivityMembers": {
                        "description": "Members for group activities",
                        "type": "array",
                        "items": {}
                      },
                      "selectOptions": {
                        "description": "Options for selection tasks",
                        "type": "array",
                        "items": {}
                      },
                      "antiCheatRules": {
                        "description": "Rules to prevent cheating"
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded for this task",
                        "type": "number"
                      },
                      "rewardEarned": {
                        "description": "Reward earned for this task",
                        "type": "string"
                      },
                      "isCompleted": {
                        "description": "Whether task is completed",
                        "type": "boolean"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "taskId",
                      "taskTheme",
                      "taskType",
                      "taskName",
                      "taskDesc",
                      "isUnlocked",
                      "requiredAction",
                      "antiCheatRules",
                      "magatamaPointAwarded",
                      "isCompleted"
                    ]
                  }
                },
                "touristSpot": {
                  "description": "Tourist spot associated with this quest",
                  "type": "object",
                  "properties": {
                    "touristSpotId": {
                      "description": "Unique identifier for the tourist spot",
                      "type": "string"
                    },
                    "storyChapterId": {
                      "description": "Unique identifier for the story chapter",
                      "type": "string"
                    },
                    "touristSpotName": {
                      "description": "Name of the tourist spot",
                      "type": "string"
                    },
                    "touristSpotDesc": {
                      "description": "Description of the tourist spot",
                      "type": "string"
                    },
                    "bestVisitTime": {
                      "description": "Best visit time of the tourist spot",
                      "type": "string"
                    },
                    "address": {
                      "description": "Address of the tourist spot",
                      "type": "string"
                    },
                    "touristSpotLatitude": {
                      "description": "Latitude of the tourist spot",
                      "type": "number"
                    },
                    "touristSpotLongitude": {
                      "description": "Longitude of the tourist spot",
                      "type": "number"
                    },
                    "touristSpotHashtag": {
                      "description": "Hashtags associated with this location",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storyChapterLink": {
                      "description": "Link to the related story chapter",
                      "type": "string"
                    },
                    "imageSet": {
                      "description": "Image set for the tourist spot",
                      "type": "object",
                      "properties": {
                        "main": {
                          "description": "Main image of the tourist spot",
                          "type": "string"
                        },
                        "small": {
                          "description": "Small images of the tourist spot",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "main",
                        "small"
                      ]
                    },
                    "weatherInfo": {
                      "description": "Weather info for the tourist spot",
                      "type": "object",
                      "properties": {
                        "temperatureCelsius": {
                          "description": "Temperature of the weather",
                          "type": "number"
                        },
                        "weatherName": {
                          "description": "Name of the weather",
                          "type": "string"
                        },
                        "weatherDesc": {
                          "description": "Description of the weather",
                          "type": "string"
                        }
                      },
                      "required": [
                        "temperatureCelsius",
                        "weatherName",
                        "weatherDesc"
                      ]
                    },
                    "delFlag": {
                      "description": "Flag to indicate if the record is deleted",
                      "type": "boolean"
                    },
                    "insUserId": {
                      "description": "ID of user who created this record",
                      "type": "string"
                    },
                    "insDateTime": {
                      "description": "Timestamp of record creation",
                      "type": "string"
                    },
                    "updUserId": {
                      "description": "ID of user who last updated this record",
                      "type": "string"
                    },
                    "updDateTime": {
                      "description": "Timestamp of last record update",
                      "type": "string"
                    }
                  },
                  "required": [
                    "touristSpotId",
                    "storyChapterId",
                    "touristSpotName",
                    "touristSpotDesc",
                    "bestVisitTime",
                    "address",
                    "touristSpotLatitude",
                    "touristSpotLongitude",
                    "touristSpotHashtag"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "questId",
                "questName",
                "questDesc",
                "questType",
                "isUnlocked",
                "isPremium",
                "totalMagatamaPointAwarded"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Update Quest",
        "tags": [
          "Quest"
        ]
      }
    },
    "/quests/update-task": {
      "post": {
        "description": "Update an existing quest task.",
        "operationId": "TouriiBackendController_updateQuestTask",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Quest task update request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "taskTheme": {
                    "description": "Theme of the task",
                    "type": "string",
                    "enum": [
                      "STORY",
                      "LOCAL_CULTURE",
                      "FOOD",
                      "URBAN_EXPLORE",
                      "NATURE"
                    ],
                    "x-enumNames": [
                      "STORY",
                      "LOCAL_CULTURE",
                      "FOOD",
                      "URBAN_EXPLORE",
                      "NATURE"
                    ]
                  },
                  "taskType": {
                    "description": "Type of the task",
                    "type": "string",
                    "enum": [
                      "VISIT_LOCATION",
                      "PHOTO_UPLOAD",
                      "ANSWER_TEXT",
                      "SELECT_OPTION",
                      "SHARE_SOCIAL",
                      "CHECK_IN",
                      "GROUP_ACTIVITY",
                      "LOCAL_INTERACTION"
                    ],
                    "x-enumNames": [
                      "VISIT_LOCATION",
                      "PHOTO_UPLOAD",
                      "ANSWER_TEXT",
                      "SELECT_OPTION",
                      "SHARE_SOCIAL",
                      "CHECK_IN",
                      "GROUP_ACTIVITY",
                      "LOCAL_INTERACTION"
                    ]
                  },
                  "taskName": {
                    "description": "Name of the task",
                    "type": "string"
                  },
                  "taskDesc": {
                    "description": "Description of the task",
                    "type": "string"
                  },
                  "isUnlocked": {
                    "description": "Whether task is unlocked",
                    "type": "boolean"
                  },
                  "requiredAction": {
                    "description": "Action required to complete the task",
                    "type": "string"
                  },
                  "groupActivityMembers": {
                    "description": "Members for group activities",
                    "type": "array",
                    "items": {}
                  },
                  "selectOptions": {
                    "description": "Options for selection tasks",
                    "type": "array",
                    "items": {}
                  },
                  "antiCheatRules": {
                    "description": "Rules to prevent cheating"
                  },
                  "magatamaPointAwarded": {
                    "description": "Magatama points awarded for this task",
                    "type": "number"
                  },
                  "rewardEarned": {
                    "description": "Reward earned for this task",
                    "type": "string"
                  },
                  "taskId": {
                    "description": "Unique identifier for the task",
                    "type": "string"
                  },
                  "delFlag": {
                    "description": "Flag to indicate if the task is deleted",
                    "type": "boolean"
                  },
                  "updUserId": {
                    "description": "Unique identifier for the user who updated the task",
                    "type": "string"
                  }
                },
                "required": [
                  "taskTheme",
                  "taskType",
                  "taskName",
                  "taskDesc",
                  "isUnlocked",
                  "requiredAction",
                  "antiCheatRules",
                  "magatamaPointAwarded",
                  "taskId",
                  "delFlag",
                  "updUserId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully updated quest task",
            "schema": {
              "type": "object",
              "properties": {
                "taskId": {
                  "description": "Unique identifier for the task",
                  "type": "string"
                },
                "taskTheme": {
                  "description": "Theme of the task",
                  "type": "string",
                  "enum": [
                    "STORY",
                    "LOCAL_CULTURE",
                    "FOOD",
                    "URBAN_EXPLORE",
                    "NATURE"
                  ],
                  "x-enumNames": [
                    "STORY",
                    "LOCAL_CULTURE",
                    "FOOD",
                    "URBAN_EXPLORE",
                    "NATURE"
                  ]
                },
                "taskType": {
                  "description": "Type of the task",
                  "type": "string",
                  "enum": [
                    "VISIT_LOCATION",
                    "PHOTO_UPLOAD",
                    "ANSWER_TEXT",
                    "SELECT_OPTION",
                    "SHARE_SOCIAL",
                    "CHECK_IN",
                    "GROUP_ACTIVITY",
                    "LOCAL_INTERACTION"
                  ],
                  "x-enumNames": [
                    "VISIT_LOCATION",
                    "PHOTO_UPLOAD",
                    "ANSWER_TEXT",
                    "SELECT_OPTION",
                    "SHARE_SOCIAL",
                    "CHECK_IN",
                    "GROUP_ACTIVITY",
                    "LOCAL_INTERACTION"
                  ]
                },
                "taskName": {
                  "description": "Name of the task",
                  "type": "string"
                },
                "taskDesc": {
                  "description": "Description of the task",
                  "type": "string"
                },
                "isUnlocked": {
                  "description": "Whether task is unlocked",
                  "type": "boolean"
                },
                "requiredAction": {
                  "description": "Action required to complete the task",
                  "type": "string"
                },
                "groupActivityMembers": {
                  "description": "Members for group activities",
                  "type": "array",
                  "items": {}
                },
                "selectOptions": {
                  "description": "Options for selection tasks",
                  "type": "array",
                  "items": {}
                },
                "antiCheatRules": {
                  "description": "Rules to prevent cheating"
                },
                "magatamaPointAwarded": {
                  "description": "Magatama points awarded for this task",
                  "type": "number"
                },
                "rewardEarned": {
                  "description": "Reward earned for this task",
                  "type": "string"
                },
                "isCompleted": {
                  "description": "Whether task is completed",
                  "type": "boolean"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "taskId",
                "taskTheme",
                "taskType",
                "taskName",
                "taskDesc",
                "isUnlocked",
                "requiredAction",
                "antiCheatRules",
                "magatamaPointAwarded",
                "isCompleted"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Update Quest Task",
        "tags": [
          "Quest"
        ]
      }
    },
    "/tasks/{taskId}": {
      "delete": {
        "description": "Delete an individual quest task.",
        "operationId": "TouriiBackendController_deleteQuestTask",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Quest task deleted"
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Delete Quest Task",
        "tags": [
          "Quest"
        ]
      }
    },
    "/quests/{questId}/group/members": {
      "get": {
        "description": "Return current members of the group quest.",
        "operationId": "TouriiBackendController_getGroupMembers",
        "parameters": [
          {
            "name": "questId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member list",
            "schema": {
              "type": "object",
              "properties": {
                "groupId": {
                  "description": "Unique identifier for the group",
                  "type": "string"
                },
                "leaderUserId": {
                  "description": "User ID of the group leader",
                  "type": "string"
                },
                "members": {
                  "description": "List of group members",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "description": "User ID of the member",
                        "type": "string"
                      },
                      "username": {
                        "description": "Username of the member",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userId",
                      "username"
                    ]
                  }
                }
              },
              "required": [
                "groupId",
                "leaderUserId",
                "members"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupMembersResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get Group Members",
        "tags": [
          "Quest"
        ]
      }
    },
    "/quests/{questId}/group/start": {
      "post": {
        "description": "Leader starts the quest for all members.",
        "operationId": "TouriiBackendController_startGroupQuest",
        "parameters": [
          {
            "name": "questId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Start group quest request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "description": "User ID of the quest leader starting the quest",
                    "type": "string"
                  },
                  "latitude": {
                    "description": "Optional latitude for location tracking",
                    "type": "number"
                  },
                  "longitude": {
                    "description": "Optional longitude for location tracking",
                    "type": "number"
                  }
                },
                "required": [
                  "userId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group quest started",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "Result message for starting the quest",
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartGroupQuestResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Start Group Quest",
        "tags": [
          "Quest"
        ]
      }
    },
    "/tasks/{taskId}/photo-upload": {
      "post": {
        "description": "Upload photo for photo submission task completion.",
        "operationId": "TouriiBackendController_uploadTaskPhoto",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Photo upload payload",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Photo submitted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "Result message for photo upload",
                  "type": "string"
                },
                "proofUrl": {
                  "description": "Public URL for the uploaded proof image",
                  "type": "string",
                  "format": "uri"
                },
                "estimatedReviewTime": {
                  "description": "Estimated time for admin review of the submission",
                  "type": "string"
                }
              },
              "required": [
                "message",
                "proofUrl",
                "estimatedReviewTime"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestTaskPhotoUploadResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Upload task photo",
        "tags": [
          "Task"
        ]
      }
    },
    "/tasks/{taskId}/social-share": {
      "post": {
        "description": "Submit social media proof URL for task completion.",
        "operationId": "TouriiBackendController_completeSocialShareTask",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Social share proof URL",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "proofUrl": {
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                  },
                  "latitude": {
                    "description": "Optional latitude for location tracking",
                    "type": "number"
                  },
                  "longitude": {
                    "description": "Optional longitude for location tracking",
                    "type": "number"
                  }
                },
                "required": [
                  "proofUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Social share recorded successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "Result message for social share completion",
                  "type": "string"
                },
                "estimatedReviewTime": {
                  "description": "Estimated time for admin review of the submission",
                  "type": "string"
                }
              },
              "required": [
                "message",
                "estimatedReviewTime"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestTaskSocialShareResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Complete social sharing task",
        "tags": [
          "Task"
        ]
      }
    },
    "/tasks/{taskId}/qr-scan": {
      "post": {
        "description": "Validate scanned QR code and complete the task if correct",
        "operationId": "TouriiBackendController_completeQrScanTask",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "QR scan request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1000,
                    "pattern": "^[A-Za-z0-9_\\-:./#]+$"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "longitude": {
                    "type": "number"
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "QR code validated and task completed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                },
                "taskId": {
                  "type": "string"
                },
                "questId": {
                  "type": "string"
                },
                "magatama_point_awarded": {
                  "type": "number"
                },
                "completed_at": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "success",
                "message",
                "taskId",
                "questId",
                "magatama_point_awarded",
                "completed_at"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrScanResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Complete QR scan task",
        "tags": [
          "Task"
        ]
      }
    },
    "/tasks/{taskId}/answer-text": {
      "post": {
        "description": "Submit text answer for text-based task completion.",
        "operationId": "TouriiBackendController_submitAnswerTextTask",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Submit answer text task request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "answer": {
                    "description": "Answer to the task",
                    "type": "string"
                  }
                },
                "required": [
                  "answer"
                ],
                "$ref": "#/components/schemas/SubmitAnswerTextRequestTaskDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Submit answer text task successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "description": "Whether the answer is correct",
                  "type": "boolean"
                },
                "message": {
                  "description": "Message to the user",
                  "type": "string"
                },
                "estimatedReviewTime": {
                  "description": "Estimated time for admin review (only for manual verification tasks)",
                  "type": "string"
                }
              },
              "required": [
                "success",
                "message"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitTaskResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Submit answer text task",
        "tags": [
          "Task"
        ]
      }
    },
    "/tasks/{taskId}/select-option": {
      "post": {
        "description": "Submit selected options for multiple choice task completion.",
        "operationId": "TouriiBackendController_submitSelectOptionTask",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Submit select option task request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "selectedOptionIds": {
                    "description": "IDs of the selected options",
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                },
                "required": [
                  "selectedOptionIds"
                ],
                "$ref": "#/components/schemas/SubmitSelectOptionsTaskRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Submit select option task successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "description": "Whether the answer is correct",
                  "type": "boolean"
                },
                "message": {
                  "description": "Message to the user",
                  "type": "string"
                },
                "estimatedReviewTime": {
                  "description": "Estimated time for admin review (only for manual verification tasks)",
                  "type": "string"
                }
              },
              "required": [
                "success",
                "message"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitTaskResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Submit select option task",
        "tags": [
          "Task"
        ]
      }
    },
    "/tasks/{taskId}/checkin": {
      "post": {
        "description": "Submit location coordinates for check-in task completion.",
        "operationId": "TouriiBackendController_submitCheckInTask",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Submit checkin task request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "longitude": {
                    "description": "Longitude of the user",
                    "type": "number"
                  },
                  "latitude": {
                    "description": "Latitude of the user",
                    "type": "number"
                  }
                },
                "required": [
                  "longitude",
                  "latitude"
                ],
                "$ref": "#/components/schemas/SubmitCheckInTaskRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Submit checkin task successfully",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "description": "Whether the answer is correct",
                  "type": "boolean"
                },
                "message": {
                  "description": "Message to the user",
                  "type": "string"
                },
                "estimatedReviewTime": {
                  "description": "Estimated time for admin review (only for manual verification tasks)",
                  "type": "string"
                }
              },
              "required": [
                "success",
                "message"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitTaskResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Submit checkin task",
        "tags": [
          "Task"
        ]
      }
    },
    "/tasks/{taskId}/local-interaction": {
      "post": {
        "description": "Submit text, photo, or audio content for local interaction tasks. Supports both JSON (with base64) and multipart file uploads.",
        "operationId": "TouriiBackendController_submitLocalInteraction",
        "parameters": [
          {
            "name": "taskId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-user-id",
            "in": "header",
            "description": "User ID for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Local interaction submission - supports JSON with base64 or multipart file upload",
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "interactionType": {
                        "description": "Type of interaction content",
                        "type": "string",
                        "enum": [
                          "text",
                          "photo",
                          "audio"
                        ]
                      },
                      "content": {
                        "description": "Text content or base64 encoded file",
                        "type": "string"
                      },
                      "latitude": {
                        "description": "Optional latitude for anti-cheat verification",
                        "type": "number"
                      },
                      "longitude": {
                        "description": "Optional longitude for anti-cheat verification",
                        "type": "number"
                      }
                    },
                    "required": [
                      "interactionType",
                      "content"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "interactionType": {
                        "type": "string",
                        "enum": [
                          "text",
                          "photo",
                          "audio"
                        ],
                        "description": "Type of interaction content"
                      },
                      "content": {
                        "type": "string",
                        "description": "Text content (for text type)"
                      },
                      "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Photo or audio file (for photo/audio types)"
                      },
                      "latitude": {
                        "type": "number",
                        "description": "Optional latitude for anti-cheat verification"
                      },
                      "longitude": {
                        "type": "number",
                        "description": "Optional longitude for anti-cheat verification"
                      }
                    },
                    "required": [
                      "interactionType"
                    ]
                  }
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "interactionType": {
                        "description": "Type of interaction content",
                        "type": "string",
                        "enum": [
                          "text",
                          "photo",
                          "audio"
                        ]
                      },
                      "content": {
                        "description": "Text content or base64 encoded file",
                        "type": "string"
                      },
                      "latitude": {
                        "description": "Optional latitude for anti-cheat verification",
                        "type": "number"
                      },
                      "longitude": {
                        "description": "Optional longitude for anti-cheat verification",
                        "type": "number"
                      }
                    },
                    "required": [
                      "interactionType",
                      "content"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "interactionType": {
                        "type": "string",
                        "enum": [
                          "text",
                          "photo",
                          "audio"
                        ],
                        "description": "Type of interaction content"
                      },
                      "content": {
                        "type": "string",
                        "description": "Text content (for text type)"
                      },
                      "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Photo or audio file (for photo/audio types)"
                      },
                      "latitude": {
                        "type": "number",
                        "description": "Optional latitude for anti-cheat verification"
                      },
                      "longitude": {
                        "type": "number",
                        "description": "Optional longitude for anti-cheat verification"
                      }
                    },
                    "required": [
                      "interactionType"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Local interaction submitted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "Status message",
                  "type": "string"
                },
                "status": {
                  "description": "Task status after submission",
                  "type": "string",
                  "enum": [
                    "AVAILABLE",
                    "ONGOING",
                    "COMPLETED",
                    "FAILED"
                  ],
                  "x-enumNames": [
                    "AVAILABLE",
                    "ONGOING",
                    "COMPLETED",
                    "FAILED"
                  ]
                },
                "estimatedReviewTime": {
                  "description": "Expected review timeframe",
                  "type": "string"
                }
              },
              "required": [
                "message",
                "status",
                "estimatedReviewTime"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalInteractionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Submit local interaction task",
        "tags": [
          "Task"
        ]
      }
    },
    "/moments": {
      "get": {
        "description": "Retrieve latest traveler moments and activities.",
        "operationId": "TouriiBackendController_getMoments",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fetch moments successfully",
            "schema": {
              "type": "object",
              "properties": {
                "moments": {
                  "type": "array",
                  "items": {
                    "description": "Traveler moment information",
                    "type": "object",
                    "properties": {
                      "imageUrl": {
                        "description": "URL of the moment image",
                        "type": "string",
                        "nullable": true
                      },
                      "username": {
                        "description": "Traveler display name",
                        "type": "string",
                        "nullable": true
                      },
                      "description": {
                        "description": "Short moment description",
                        "type": "string",
                        "nullable": true
                      },
                      "rewardText": {
                        "description": "Text describing earned rewards",
                        "type": "string",
                        "nullable": true
                      },
                      "insDateTime": {
                        "description": "Timestamp when the moment occurred",
                        "type": "string"
                      }
                    },
                    "required": [
                      "insDateTime"
                    ]
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "currentPage": {
                      "description": "Current page number",
                      "type": "number"
                    },
                    "totalPages": {
                      "description": "Total number of pages",
                      "type": "number"
                    },
                    "totalItems": {
                      "description": "Total number of items",
                      "type": "number"
                    }
                  },
                  "required": [
                    "currentPage",
                    "totalPages",
                    "totalItems"
                  ]
                }
              },
              "required": [
                "moments",
                "pagination"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MomentListResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get latest moments",
        "tags": [
          "Moment"
        ]
      }
    },
    "/v2/homepage/highlights": {
      "get": {
        "description": "Latest chapter and popular quest",
        "operationId": "TouriiBackendController_getHomepageHighlights",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Homepage highlights",
            "schema": {
              "type": "object",
              "properties": {
                "latestChapter": {
                  "type": "object",
                  "properties": {
                    "storyId": {
                      "description": "Story ID",
                      "type": "string"
                    },
                    "chapterId": {
                      "description": "Chapter ID",
                      "type": "string"
                    },
                    "chapterNumber": {
                      "description": "Chapter number (e.g., \"Chapter 1\", \"Prologue\")",
                      "type": "string"
                    },
                    "title": {
                      "description": "Chapter title",
                      "type": "string"
                    },
                    "imageUrl": {
                      "description": "Cover image URL",
                      "type": "string",
                      "nullable": true
                    },
                    "region": {
                      "description": "Region of the story",
                      "type": "string",
                      "nullable": true
                    },
                    "link": {
                      "description": "Deep link to chapter",
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "storyId",
                    "chapterId",
                    "chapterNumber",
                    "title",
                    "imageUrl",
                    "region",
                    "link"
                  ],
                  "nullable": true
                },
                "popularQuests": {
                  "description": "Top 3 popular quests",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "questId": {
                        "description": "Quest ID",
                        "type": "string"
                      },
                      "title": {
                        "description": "Quest title",
                        "type": "string"
                      },
                      "imageUrl": {
                        "description": "Quest image URL",
                        "type": "string",
                        "nullable": true
                      },
                      "link": {
                        "description": "Deep link to quest",
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "required": [
                      "questId",
                      "title",
                      "imageUrl",
                      "link"
                    ]
                  }
                }
              },
              "required": [
                "latestChapter",
                "popularQuests"
              ]
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomepageHighlightsResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": ""
          }
        },
        "summary": "Get homepage highlights",
        "tags": [
          "Homepage"
        ]
      }
    },
    "/test/headers": {
      "get": {
        "description": "Tests the security headers set by SecurityMiddleware. Returns all configured security headers in the response.",
        "operationId": "TestController_testHeaders",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Security headers test successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Check response headers"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid version format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_021"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid version format"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_010"
                    },
                    "message": {
                      "type": "string",
                      "example": "API key is required"
                    },
                    "type": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Test Security Headers",
        "tags": [
          "Security Tests"
        ]
      }
    },
    "/test/rate-limit": {
      "get": {
        "description": "Tests the rate limiting middleware. Limited to 3 requests per second.",
        "operationId": "TestController_testRateLimit",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rate limit test successful",
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Maximum number of requests allowed",
                "schema": {
                  "type": "number"
                },
                "example": 3
              },
              "X-RateLimit-Remaining": {
                "description": "Number of requests remaining",
                "schema": {
                  "type": "number"
                },
                "example": 2
              },
              "X-RateLimit-Reset": {
                "description": "Time until rate limit resets (in seconds)",
                "schema": {
                  "type": "number"
                },
                "example": 1
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Rate limit test endpoint"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_010"
                    },
                    "message": {
                      "type": "string",
                      "example": "API key is required"
                    },
                    "type": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "ThrottlerException: Too Many Requests"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Test Rate Limiting",
        "tags": [
          "Security Tests"
        ]
      }
    },
    "/test/api-key": {
      "get": {
        "description": "Tests the API key validation middleware.",
        "operationId": "TestController_testApiKey",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API key validation successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API key is valid"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_010"
                    },
                    "message": {
                      "type": "string",
                      "example": "API key is required"
                    },
                    "type": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Test API Key Validation",
        "tags": [
          "Security Tests"
        ]
      }
    },
    "/test/version": {
      "get": {
        "description": "Tests the API version validation middleware.",
        "operationId": "TestController_testVersion",
        "parameters": [
          {
            "name": "accept-version",
            "in": "header",
            "description": "API version (e.g., 1.0.0)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "API key for authentication",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Version validation successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API version is supported"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing version header",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_020"
                    },
                    "message": {
                      "type": "string",
                      "example": "Version header is required"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAD_REQUEST"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "E_TB_010"
                    },
                    "message": {
                      "type": "string",
                      "example": "API key is required"
                    },
                    "type": {
                      "type": "string",
                      "example": "UNAUTHORIZED"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Test Version Validation",
        "tags": [
          "Security Tests"
        ]
      }
    },
    "/api/passport/generate/{tokenId}": {
      "post": {
        "description": "Generate a professional PDF passport document with user achievements and QR code verification. Uploads to cloud storage and returns download URL.",
        "operationId": "PassportGenerationController_generatePdf",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Passport PDF generated and uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenId": {
                      "type": "string",
                      "example": "123"
                    },
                    "downloadUrl": {
                      "type": "string",
                      "example": "https://assets.tourii.com/passports/pdf/123_1640995200000.pdf"
                    },
                    "qrCode": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-01T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid token ID"
          },
          "404": {
            "description": "Passport not found"
          }
        },
        "summary": "Generate Digital Passport PDF",
        "tags": [
          "passport-generation"
        ]
      }
    },
    "/api/passport/{tokenId}": {
      "get": {
        "description": "Retrieve passport metadata (existing endpoint from onchain service)",
        "operationId": "PassportGenerationController_getPassportMetadata",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "description": "The token ID of the Digital Passport NFT",
            "schema": {
              "example": "123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Passport metadata retrieved successfully"
          }
        },
        "summary": "Get Passport Metadata",
        "tags": [
          "passport-generation"
        ]
      }
    },
    "/api/passport/refresh/{tokenId}": {
      "post": {
        "description": "Regenerate passport PDF with updated user achievements and progress",
        "operationId": "PassportGenerationController_refreshPassport",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "description": "The token ID of the Digital Passport NFT",
            "schema": {
              "example": "123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Passport refreshed successfully"
          }
        },
        "summary": "Refresh Passport with New Achievements",
        "tags": [
          "passport-generation"
        ]
      }
    },
    "/api/passport/preview/{tokenId}": {
      "get": {
        "description": "Generate a preview PDF without uploading to storage (for testing/preview purposes)",
        "operationId": "PassportGenerationController_generatePreview",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "description": "The token ID of the Digital Passport NFT",
            "schema": {
              "example": "123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preview PDF generated successfully",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "summary": "Generate Passport Preview",
        "tags": [
          "passport-generation"
        ]
      }
    },
    "/api/passport/download/{tokenId}": {
      "post": {
        "description": "Generate and directly download passport PDF (generates on-demand)",
        "operationId": "PassportGenerationController_downloadPdf",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "description": "The token ID of the Digital Passport NFT",
            "schema": {
              "example": "123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PDF downloaded successfully",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "summary": "Download Passport PDF",
        "tags": [
          "passport-generation"
        ]
      }
    },
    "/api/passport/validate/{tokenId}": {
      "get": {
        "description": "Check if a token ID exists and is valid for passport generation",
        "operationId": "PassportGenerationController_validateToken",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "description": "The token ID to validate",
            "schema": {
              "example": "123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token validation result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean",
                      "example": true
                    },
                    "tokenId": {
                      "type": "string",
                      "example": "123"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Validate Token ID",
        "tags": [
          "passport-generation"
        ]
      }
    },
    "/api/wallet/apple/pass": {
      "post": {
        "description": "Generate a .pkpass file for Apple Wallet with passport achievements and QR code",
        "operationId": "WalletIntegrationController_generateApplePass",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tokenId": {
                    "type": "string",
                    "example": "123"
                  }
                },
                "required": [
                  "tokenId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Apple Wallet pass generated successfully",
            "content": {
              "application/vnd.apple.pkpass": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "summary": "Generate Apple Wallet Pass",
        "tags": [
          "wallet-integration"
        ]
      },
      "get": {
        "description": "Download the .pkpass file for Apple Wallet",
        "operationId": "WalletIntegrationController_downloadApplePass",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "query",
            "description": "The token ID of the Digital Passport NFT",
            "schema": {
              "example": "123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Apple Wallet pass file downloaded successfully",
            "content": {
              "application/vnd.apple.pkpass": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "summary": "Download Apple Wallet Pass",
        "tags": [
          "wallet-integration"
        ]
      }
    },
    "/api/wallet/google/pass": {
      "post": {
        "description": "Generate a Google Pay pass with passport achievements and QR code",
        "operationId": "WalletIntegrationController_generateGooglePass",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tokenId": {
                    "type": "string",
                    "example": "123"
                  }
                },
                "required": [
                  "tokenId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Google Pay pass generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenId": {
                      "type": "string",
                      "example": "123"
                    },
                    "platform": {
                      "type": "string",
                      "example": "google"
                    },
                    "redirectUrl": {
                      "type": "string",
                      "example": "https://pay.google.com/gp/v/save/..."
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-08T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Generate Google Pay Pass",
        "tags": [
          "wallet-integration"
        ]
      }
    },
    "/api/wallet/auto/{tokenId}": {
      "get": {
        "description": "Automatically detect device platform (iOS/Android) and generate appropriate wallet pass",
        "operationId": "WalletIntegrationController_generateAutoPass",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "description": "The token ID of the Digital Passport NFT",
            "schema": {
              "example": "123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Platform-specific pass generated successfully"
          }
        },
        "summary": "Auto-Generate Platform-Specific Pass",
        "tags": [
          "wallet-integration"
        ]
      }
    },
    "/api/wallet/both/{tokenId}": {
      "get": {
        "description": "Generate both Apple Wallet and Google Pay passes simultaneously",
        "operationId": "WalletIntegrationController_generateBothPasses",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "description": "The token ID of the Digital Passport NFT",
            "schema": {
              "example": "123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Both platform passes generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenId": {
                      "type": "string",
                      "example": "123"
                    },
                    "apple": {
                      "type": "object",
                      "properties": {
                        "tokenId": {
                          "type": "string",
                          "example": "123"
                        },
                        "platform": {
                          "type": "string",
                          "example": "apple"
                        },
                        "downloadUrl": {
                          "type": "string"
                        },
                        "redirectUrl": {
                          "type": "string"
                        },
                        "expiresAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "google": {
                      "type": "object",
                      "properties": {
                        "tokenId": {
                          "type": "string",
                          "example": "123"
                        },
                        "platform": {
                          "type": "string",
                          "example": "google"
                        },
                        "redirectUrl": {
                          "type": "string"
                        },
                        "expiresAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Generate Both Platform Passes",
        "tags": [
          "wallet-integration"
        ]
      }
    },
    "/api/wallet/update": {
      "post": {
        "description": "Push updates to existing wallet pass when user earns new achievements",
        "operationId": "WalletIntegrationController_updatePass",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tokenId": {
                    "type": "string",
                    "example": "123"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "apple",
                      "google"
                    ],
                    "example": "apple"
                  }
                },
                "required": [
                  "tokenId",
                  "platform"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet pass updated successfully"
          }
        },
        "summary": "Update Existing Wallet Pass",
        "tags": [
          "wallet-integration"
        ]
      }
    },
    "/api/wallet/status/{tokenId}": {
      "get": {
        "description": "Check the status of wallet passes for a given token ID",
        "operationId": "WalletIntegrationController_getPassStatus",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "description": "The token ID of the Digital Passport NFT",
            "schema": {
              "example": "123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pass status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenId": {
                      "type": "string",
                      "example": "123"
                    },
                    "apple": {
                      "type": "boolean",
                      "example": true
                    },
                    "google": {
                      "type": "boolean",
                      "example": true
                    },
                    "checkedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Check Pass Status",
        "tags": [
          "wallet-integration"
        ]
      }
    },
    "/api/wallet/detect-platform": {
      "get": {
        "description": "Detect the client device platform (iOS/Android/Web) from User-Agent",
        "operationId": "WalletIntegrationController_detectPlatform",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Platform detected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userAgent": {
                      "type": "string",
                      "example": "Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X)..."
                    },
                    "platform": {
                      "type": "string",
                      "enum": [
                        "ios",
                        "android",
                        "web"
                      ],
                      "example": "ios"
                    },
                    "recommendedWallet": {
                      "type": "string",
                      "enum": [
                        "apple",
                        "google"
                      ],
                      "example": "apple"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Detect Device Platform",
        "tags": [
          "wallet-integration"
        ]
      }
    },
    "/api/verify/{verificationCode}": {
      "get": {
        "description": "Verify a passport verification token (from QR code or manual entry). Public endpoint requiring no authentication.",
        "operationId": "PassportVerificationController_verifyPassport",
        "parameters": [
          {
            "name": "verificationCode",
            "required": true,
            "in": "path",
            "description": "The verification token (JWT) from QR code or manual entry",
            "schema": {
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Verification completed (check valid field for result)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean",
                      "example": true
                    },
                    "tokenId": {
                      "type": "string",
                      "example": "123"
                    },
                    "verifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-01T12:00:00.000Z"
                    },
                    "expiresAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-02T12:00:00.000Z"
                    },
                    "passportData": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "alice"
                        },
                        "level": {
                          "type": "string",
                          "example": "E-Class Amatsukami"
                        },
                        "passportType": {
                          "type": "string",
                          "example": "Amatsukami"
                        },
                        "questsCompleted": {
                          "type": "number",
                          "example": 15
                        },
                        "travelDistance": {
                          "type": "number",
                          "example": 250
                        },
                        "magatamaPoints": {
                          "type": "number",
                          "example": 1500
                        },
                        "registeredAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "error": {
                      "type": "string",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Verify Passport Token",
        "tags": [
          "passport-verification"
        ]
      }
    },
    "/api/verify/batch": {
      "post": {
        "description": "Verify multiple passport tokens at once. Useful for bulk verification scenarios.",
        "operationId": "PassportVerificationController_batchVerifyPassports",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tokens": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    ]
                  }
                },
                "required": [
                  "tokens"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch verification completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "valid": {
                            "type": "boolean"
                          },
                          "tokenId": {
                            "type": "string"
                          },
                          "verifiedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "passportData": {
                            "type": "object"
                          },
                          "error": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 2
                        },
                        "valid": {
                          "type": "number",
                          "example": 1
                        },
                        "invalid": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Batch Verify Multiple Passports",
        "tags": [
          "passport-verification"
        ]
      }
    },
    "/api/verify/qr/{qrCode}": {
      "get": {
        "description": "Verify a passport using QR code data. Alias for standard verification endpoint.",
        "operationId": "PassportVerificationController_verifyQrCode",
        "parameters": [
          {
            "name": "qrCode",
            "required": true,
            "in": "path",
            "description": "The QR code data (JWT token)",
            "schema": {
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QR code verification completed"
          }
        },
        "summary": "Verify QR Code",
        "tags": [
          "passport-verification"
        ]
      }
    },
    "/api/verify/stats/{tokenId}": {
      "get": {
        "description": "Get verification statistics for a specific token ID or global stats if no token ID provided",
        "operationId": "PassportVerificationController_getVerificationStats",
        "parameters": [
          {
            "name": "tokenId",
            "required": false,
            "in": "path",
            "description": "The token ID to get stats for (optional)",
            "schema": {
              "example": "123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Verification statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokenId": {
                      "type": "string",
                      "example": "123"
                    },
                    "totalVerifications": {
                      "type": "number",
                      "example": 45
                    },
                    "todayVerifications": {
                      "type": "number",
                      "example": 3
                    },
                    "lastVerified": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-01T12:00:00.000Z"
                    },
                    "popularPassports": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "tokenId": {
                            "type": "string",
                            "example": "123"
                          },
                          "username": {
                            "type": "string",
                            "example": "alice"
                          },
                          "verificationCount": {
                            "type": "number",
                            "example": 45
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get Verification Statistics",
        "tags": [
          "passport-verification"
        ]
      }
    }
  },
  "info": {
    "title": "Tourii Backend API",
    "description": "Tourii Backend API Def",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "v1.0.0",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "StoryCreateRequestDto": {
        "type": "object",
        "properties": {
          "sagaName": {
            "description": "Name of the story saga (e.g., 'Prologue', 'Bungo Ono')",
            "type": "string"
          },
          "sagaDesc": {
            "description": "Detailed description of the saga's narrative",
            "type": "string"
          },
          "backgroundMedia": {
            "description": "URL to the saga's cover media (image or video)",
            "type": "string"
          },
          "mapImage": {
            "description": "URL to the map image for the saga",
            "type": "string"
          },
          "location": {
            "description": "Real-world location of the saga (e.g., 'Tokyo')",
            "type": "string"
          },
          "order": {
            "description": "Display order in the saga list",
            "type": "number"
          },
          "isPrologue": {
            "description": "Whether the saga is a prologue",
            "type": "boolean"
          },
          "isSelected": {
            "description": "Whether the saga is selected by default",
            "type": "boolean"
          },
          "chapterList": {
            "description": "List of chapters in the saga",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "touristSpotId": {
                  "description": "Unique identifier for the tourist spot",
                  "type": "string"
                },
                "chapterNumber": {
                  "description": "Chapter number or position (e.g., 'Prologue', 'Chapter 1')",
                  "type": "string"
                },
                "chapterTitle": {
                  "description": "Title of the story chapter",
                  "type": "string"
                },
                "chapterDesc": {
                  "description": "Detailed description or content of the story",
                  "type": "string"
                },
                "chapterImage": {
                  "description": "URL to the fictional chapter image",
                  "type": "string"
                },
                "characterNameList": {
                  "description": "List of character names involved in the chapter",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "realWorldImage": {
                  "description": "URL to the real-world location image",
                  "type": "string"
                },
                "chapterVideoUrl": {
                  "description": "URL to the chapter video for desktop viewing",
                  "type": "string"
                },
                "chapterVideoMobileUrl": {
                  "description": "URL to the chapter video optimized for mobile",
                  "type": "string"
                },
                "chapterPdfUrl": {
                  "description": "URL to the downloadable PDF version",
                  "type": "string"
                },
                "isUnlocked": {
                  "description": "Whether the chapter is available to users without prerequisites",
                  "type": "boolean"
                }
              },
              "required": [
                "touristSpotId",
                "chapterNumber",
                "chapterTitle",
                "chapterDesc",
                "chapterImage",
                "characterNameList",
                "realWorldImage",
                "chapterVideoUrl",
                "chapterVideoMobileUrl",
                "chapterPdfUrl",
                "isUnlocked"
              ]
            }
          }
        },
        "required": [
          "sagaName",
          "sagaDesc",
          "backgroundMedia",
          "order",
          "isPrologue",
          "isSelected"
        ]
      },
      "StoryChapterCreateRequestDto": {
        "type": "object",
        "properties": {
          "touristSpotId": {
            "description": "Unique identifier for the tourist spot",
            "type": "string"
          },
          "chapterNumber": {
            "description": "Chapter number or position (e.g., 'Prologue', 'Chapter 1')",
            "type": "string"
          },
          "chapterTitle": {
            "description": "Title of the story chapter",
            "type": "string"
          },
          "chapterDesc": {
            "description": "Detailed description or content of the story",
            "type": "string"
          },
          "chapterImage": {
            "description": "URL to the fictional chapter image",
            "type": "string"
          },
          "characterNameList": {
            "description": "List of character names involved in the chapter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "realWorldImage": {
            "description": "URL to the real-world location image",
            "type": "string"
          },
          "chapterVideoUrl": {
            "description": "URL to the chapter video for desktop viewing",
            "type": "string"
          },
          "chapterVideoMobileUrl": {
            "description": "URL to the chapter video optimized for mobile",
            "type": "string"
          },
          "chapterPdfUrl": {
            "description": "URL to the downloadable PDF version",
            "type": "string"
          },
          "isUnlocked": {
            "description": "Whether the chapter is available to users without prerequisites",
            "type": "boolean"
          }
        },
        "required": [
          "touristSpotId",
          "chapterNumber",
          "chapterTitle",
          "chapterDesc",
          "chapterImage",
          "characterNameList",
          "realWorldImage",
          "chapterVideoUrl",
          "chapterVideoMobileUrl",
          "chapterPdfUrl",
          "isUnlocked"
        ]
      },
      "ModelRouteCreateRequestDto": {
        "type": "object",
        "properties": {
          "storyId": {
            "description": "Unique identifier for the story",
            "type": "string"
          },
          "routeName": {
            "description": "Name of the model route",
            "type": "string"
          },
          "region": {
            "description": "Region of the model route",
            "type": "string"
          },
          "regionDesc": {
            "description": "Description of the region",
            "type": "string"
          },
          "regionBackgroundMedia": {
            "description": "Background media of the region",
            "type": "string"
          },
          "recommendation": {
            "description": "Recommendation of the model route",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "touristSpotList": {
            "description": "List of tourist spots in the model route",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "storyChapterId": {
                  "description": "Unique identifier for the story chapter",
                  "type": "string"
                },
                "touristSpotName": {
                  "description": "Name of the tourist spot",
                  "type": "string"
                },
                "touristSpotDesc": {
                  "description": "Description of the tourist spot",
                  "type": "string"
                },
                "bestVisitTime": {
                  "description": "Best visit time of the tourist spot",
                  "type": "string"
                },
                "touristSpotHashtag": {
                  "description": "Hashtags associated with this location",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "imageSet": {
                  "description": "Image set for the tourist spot",
                  "type": "object",
                  "properties": {
                    "main": {
                      "description": "Main image of the tourist spot",
                      "type": "string"
                    },
                    "small": {
                      "description": "Small images of the tourist spot",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "main",
                    "small"
                  ]
                },
                "address": {
                  "description": "Address for enhanced search accuracy",
                  "type": "string"
                }
              },
              "required": [
                "storyChapterId",
                "touristSpotName",
                "touristSpotDesc",
                "bestVisitTime",
                "touristSpotHashtag"
              ]
            }
          }
        },
        "required": [
          "storyId",
          "routeName",
          "region",
          "regionDesc",
          "regionBackgroundMedia",
          "recommendation",
          "touristSpotList"
        ]
      },
      "TouristSpotCreateRequestDto": {
        "type": "object",
        "properties": {
          "storyChapterId": {
            "description": "Unique identifier for the story chapter",
            "type": "string"
          },
          "touristSpotName": {
            "description": "Name of the tourist spot",
            "type": "string"
          },
          "touristSpotDesc": {
            "description": "Description of the tourist spot",
            "type": "string"
          },
          "bestVisitTime": {
            "description": "Best visit time of the tourist spot",
            "type": "string"
          },
          "touristSpotHashtag": {
            "description": "Hashtags associated with this location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "imageSet": {
            "description": "Image set for the tourist spot",
            "type": "object",
            "properties": {
              "main": {
                "description": "Main image of the tourist spot",
                "type": "string"
              },
              "small": {
                "description": "Small images of the tourist spot",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "main",
              "small"
            ]
          },
          "address": {
            "description": "Address for enhanced search accuracy",
            "type": "string"
          }
        },
        "required": [
          "storyChapterId",
          "touristSpotName",
          "touristSpotDesc",
          "bestVisitTime",
          "touristSpotHashtag"
        ]
      },
      "StoryUpdateRequestDto": {
        "type": "object",
        "properties": {
          "sagaName": {
            "description": "Name of the story saga (e.g., 'Prologue', 'Bungo Ono')",
            "type": "string"
          },
          "sagaDesc": {
            "description": "Detailed description of the saga's narrative",
            "type": "string"
          },
          "backgroundMedia": {
            "description": "URL to the saga's cover media (image or video)",
            "type": "string"
          },
          "mapImage": {
            "description": "URL to the map image for the saga",
            "type": "string"
          },
          "location": {
            "description": "Real-world location of the saga (e.g., 'Tokyo')",
            "type": "string"
          },
          "order": {
            "description": "Display order in the saga list",
            "type": "number"
          },
          "isPrologue": {
            "description": "Whether the saga is a prologue",
            "type": "boolean"
          },
          "isSelected": {
            "description": "Whether the saga is selected by default",
            "type": "boolean"
          },
          "chapterList": {
            "description": "List of chapters",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "touristSpotId": {
                  "description": "Unique identifier for the tourist spot",
                  "type": "string"
                },
                "chapterNumber": {
                  "description": "Chapter number or position (e.g., 'Prologue', 'Chapter 1')",
                  "type": "string"
                },
                "chapterTitle": {
                  "description": "Title of the story chapter",
                  "type": "string"
                },
                "chapterDesc": {
                  "description": "Detailed description or content of the story",
                  "type": "string"
                },
                "chapterImage": {
                  "description": "URL to the fictional chapter image",
                  "type": "string"
                },
                "characterNameList": {
                  "description": "List of character names involved in the chapter",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "realWorldImage": {
                  "description": "URL to the real-world location image",
                  "type": "string"
                },
                "chapterVideoUrl": {
                  "description": "URL to the chapter video for desktop viewing",
                  "type": "string"
                },
                "chapterVideoMobileUrl": {
                  "description": "URL to the chapter video optimized for mobile",
                  "type": "string"
                },
                "chapterPdfUrl": {
                  "description": "URL to the downloadable PDF version",
                  "type": "string"
                },
                "isUnlocked": {
                  "description": "Whether the chapter is available to users without prerequisites",
                  "type": "boolean"
                },
                "storyChapterId": {
                  "description": "Unique identifier for the story chapter",
                  "type": "string"
                },
                "delFlag": {
                  "description": "Flag to indicate if the story chapter is deleted",
                  "type": "boolean"
                },
                "updUserId": {
                  "description": "Unique identifier for the user who updated the story chapter",
                  "type": "string"
                }
              },
              "required": [
                "touristSpotId",
                "chapterNumber",
                "chapterTitle",
                "chapterDesc",
                "chapterImage",
                "characterNameList",
                "realWorldImage",
                "chapterVideoUrl",
                "chapterVideoMobileUrl",
                "chapterPdfUrl",
                "isUnlocked",
                "storyChapterId",
                "delFlag",
                "updUserId"
              ]
            }
          },
          "sagaId": {
            "description": "Unique identifier for the story saga",
            "type": "string"
          },
          "delFlag": {
            "description": "Flag to indicate if the story saga is deleted",
            "type": "boolean"
          },
          "updUserId": {
            "description": "Unique identifier for the user who updated the story saga",
            "type": "string"
          }
        },
        "required": [
          "sagaName",
          "sagaDesc",
          "backgroundMedia",
          "order",
          "isPrologue",
          "isSelected",
          "chapterList",
          "sagaId",
          "delFlag",
          "updUserId"
        ]
      },
      "StoryChapterUpdateRequestDto": {
        "type": "object",
        "properties": {
          "touristSpotId": {
            "description": "Unique identifier for the tourist spot",
            "type": "string"
          },
          "chapterNumber": {
            "description": "Chapter number or position (e.g., 'Prologue', 'Chapter 1')",
            "type": "string"
          },
          "chapterTitle": {
            "description": "Title of the story chapter",
            "type": "string"
          },
          "chapterDesc": {
            "description": "Detailed description or content of the story",
            "type": "string"
          },
          "chapterImage": {
            "description": "URL to the fictional chapter image",
            "type": "string"
          },
          "characterNameList": {
            "description": "List of character names involved in the chapter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "realWorldImage": {
            "description": "URL to the real-world location image",
            "type": "string"
          },
          "chapterVideoUrl": {
            "description": "URL to the chapter video for desktop viewing",
            "type": "string"
          },
          "chapterVideoMobileUrl": {
            "description": "URL to the chapter video optimized for mobile",
            "type": "string"
          },
          "chapterPdfUrl": {
            "description": "URL to the downloadable PDF version",
            "type": "string"
          },
          "isUnlocked": {
            "description": "Whether the chapter is available to users without prerequisites",
            "type": "boolean"
          },
          "storyChapterId": {
            "description": "Unique identifier for the story chapter",
            "type": "string"
          },
          "delFlag": {
            "description": "Flag to indicate if the story chapter is deleted",
            "type": "boolean"
          },
          "updUserId": {
            "description": "Unique identifier for the user who updated the story chapter",
            "type": "string"
          }
        },
        "required": [
          "touristSpotId",
          "chapterNumber",
          "chapterTitle",
          "chapterDesc",
          "chapterImage",
          "characterNameList",
          "realWorldImage",
          "chapterVideoUrl",
          "chapterVideoMobileUrl",
          "chapterPdfUrl",
          "isUnlocked",
          "storyChapterId",
          "delFlag",
          "updUserId"
        ]
      },
      "ModelRouteUpdateRequestDto": {
        "type": "object",
        "properties": {
          "storyId": {
            "description": "Unique identifier for the story",
            "type": "string"
          },
          "routeName": {
            "description": "Name of the model route",
            "type": "string"
          },
          "region": {
            "description": "Region of the model route",
            "type": "string"
          },
          "regionDesc": {
            "description": "Description of the region",
            "type": "string"
          },
          "regionBackgroundMedia": {
            "description": "Background media of the region",
            "type": "string"
          },
          "recommendation": {
            "description": "Recommendation of the model route",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "touristSpotList": {
            "description": "List of tourist spots in the model route",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "storyChapterId": {
                  "description": "Unique identifier for the story chapter",
                  "type": "string"
                },
                "touristSpotName": {
                  "description": "Name of the tourist spot",
                  "type": "string"
                },
                "touristSpotDesc": {
                  "description": "Description of the tourist spot",
                  "type": "string"
                },
                "bestVisitTime": {
                  "description": "Best visit time of the tourist spot",
                  "type": "string"
                },
                "touristSpotHashtag": {
                  "description": "Hashtags associated with this location",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "imageSet": {
                  "description": "Image set for the tourist spot",
                  "type": "object",
                  "properties": {
                    "main": {
                      "description": "Main image of the tourist spot",
                      "type": "string"
                    },
                    "small": {
                      "description": "Small images of the tourist spot",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "main",
                    "small"
                  ]
                },
                "address": {
                  "description": "Address for enhanced search accuracy",
                  "type": "string"
                },
                "touristSpotId": {
                  "description": "Unique identifier for the tourist spot",
                  "type": "string"
                },
                "delFlag": {
                  "description": "Flag to indicate if the tourist spot is deleted",
                  "type": "boolean"
                },
                "updUserId": {
                  "description": "Unique identifier for the user who updated the tourist spot",
                  "type": "string"
                }
              },
              "required": [
                "storyChapterId",
                "touristSpotName",
                "touristSpotDesc",
                "bestVisitTime",
                "touristSpotHashtag",
                "touristSpotId",
                "delFlag",
                "updUserId"
              ]
            }
          },
          "modelRouteId": {
            "description": "Unique identifier for the model route",
            "type": "string"
          },
          "delFlag": {
            "description": "Flag to indicate if the model route is deleted",
            "type": "boolean"
          },
          "updUserId": {
            "description": "Unique identifier for the user who updated the model route",
            "type": "string"
          }
        },
        "required": [
          "storyId",
          "routeName",
          "region",
          "regionDesc",
          "regionBackgroundMedia",
          "recommendation",
          "touristSpotList",
          "modelRouteId",
          "delFlag",
          "updUserId"
        ]
      },
      "TouristSpotUpdateRequestDto": {
        "type": "object",
        "properties": {
          "storyChapterId": {
            "description": "Unique identifier for the story chapter",
            "type": "string"
          },
          "touristSpotName": {
            "description": "Name of the tourist spot",
            "type": "string"
          },
          "touristSpotDesc": {
            "description": "Description of the tourist spot",
            "type": "string"
          },
          "bestVisitTime": {
            "description": "Best visit time of the tourist spot",
            "type": "string"
          },
          "touristSpotHashtag": {
            "description": "Hashtags associated with this location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "imageSet": {
            "description": "Image set for the tourist spot",
            "type": "object",
            "properties": {
              "main": {
                "description": "Main image of the tourist spot",
                "type": "string"
              },
              "small": {
                "description": "Small images of the tourist spot",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "main",
              "small"
            ]
          },
          "address": {
            "description": "Address for enhanced search accuracy",
            "type": "string"
          },
          "touristSpotId": {
            "description": "Unique identifier for the tourist spot",
            "type": "string"
          },
          "delFlag": {
            "description": "Flag to indicate if the tourist spot is deleted",
            "type": "boolean"
          },
          "updUserId": {
            "description": "Unique identifier for the user who updated the tourist spot",
            "type": "string"
          }
        },
        "required": [
          "storyChapterId",
          "touristSpotName",
          "touristSpotDesc",
          "bestVisitTime",
          "touristSpotHashtag",
          "touristSpotId",
          "delFlag",
          "updUserId"
        ]
      },
      "StoryReadingStartRequestDto": {
        "type": "object",
        "properties": {
          "userId": {
            "description": "ID of the user starting to read the story chapter",
            "type": "string"
          }
        },
        "required": [
          "userId"
        ]
      },
      "StoryReadingCompleteRequestDto": {
        "type": "object",
        "properties": {
          "userId": {
            "description": "ID of the user completing the story chapter",
            "type": "string"
          }
        },
        "required": [
          "userId"
        ]
      },
      "StoryResponseDto": {
        "type": "object",
        "properties": {
          "storyId": {
            "description": "Unique identifier for the story saga",
            "type": "string"
          },
          "sagaName": {
            "description": "Name of the story saga",
            "type": "string"
          },
          "sagaDesc": {
            "description": "Detailed description of the saga's narrative",
            "type": "string"
          },
          "backgroundMedia": {
            "description": "URL to the saga's cover media (image or video)",
            "type": "string"
          },
          "mapImage": {
            "description": "URL to the map image for the saga",
            "type": "string"
          },
          "location": {
            "description": "Real-world location of the saga",
            "type": "string"
          },
          "order": {
            "description": "Display order in the saga list",
            "type": "number"
          },
          "isPrologue": {
            "description": "Whether the saga is a prologue",
            "type": "boolean"
          },
          "isSelected": {
            "description": "Whether the saga is selected by default",
            "type": "boolean"
          },
          "chapterList": {
            "description": "List of stories in the saga",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "storyId": {
                  "description": "Unique identifier for the story",
                  "type": "string"
                },
                "touristSpotId": {
                  "description": "Unique identifier for the tourist spot",
                  "type": "string"
                },
                "storyChapterId": {
                  "description": "Unique identifier for the story chapter",
                  "type": "string"
                },
                "sagaName": {
                  "description": "Name of the saga",
                  "type": "string"
                },
                "chapterNumber": {
                  "description": "Chapter number or position",
                  "type": "string"
                },
                "chapterTitle": {
                  "description": "Title of the chapter",
                  "type": "string"
                },
                "chapterDesc": {
                  "description": "Detailed description of the chapter",
                  "type": "string"
                },
                "chapterImage": {
                  "description": "URL to the fictional chapter image",
                  "type": "string"
                },
                "characterNameList": {
                  "description": "List of character names involved in the chapter",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "realWorldImage": {
                  "description": "URL to the real-world location image",
                  "type": "string"
                },
                "chapterVideoUrl": {
                  "description": "URL to the chapter video for desktop viewing",
                  "type": "string"
                },
                "chapterVideoMobileUrl": {
                  "description": "URL to the chapter video optimized for mobile",
                  "type": "string"
                },
                "chapterPdfUrl": {
                  "description": "URL to the downloadable PDF version",
                  "type": "string"
                },
                "isUnlocked": {
                  "description": "Whether the chapter is available to users without prerequisites",
                  "type": "boolean"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "storyId",
                "touristSpotId",
                "storyChapterId",
                "sagaName",
                "chapterNumber",
                "chapterTitle",
                "chapterDesc",
                "chapterImage",
                "characterNameList",
                "realWorldImage",
                "chapterVideoUrl",
                "chapterVideoMobileUrl",
                "chapterPdfUrl",
                "isUnlocked"
              ]
            }
          },
          "delFlag": {
            "description": "Flag to indicate if the record is deleted",
            "type": "boolean"
          },
          "insUserId": {
            "description": "ID of user who created this record",
            "type": "string"
          },
          "insDateTime": {
            "description": "Timestamp of record creation",
            "type": "string"
          },
          "updUserId": {
            "description": "ID of user who last updated this record",
            "type": "string"
          },
          "updDateTime": {
            "description": "Timestamp of last record update",
            "type": "string"
          }
        },
        "required": [
          "storyId",
          "sagaName",
          "sagaDesc",
          "backgroundMedia",
          "mapImage",
          "location",
          "order",
          "isPrologue",
          "isSelected"
        ]
      },
      "StoryChapterResponseDto": {
        "type": "object",
        "properties": {
          "storyId": {
            "description": "Unique identifier for the story",
            "type": "string"
          },
          "touristSpotId": {
            "description": "Unique identifier for the tourist spot",
            "type": "string"
          },
          "storyChapterId": {
            "description": "Unique identifier for the story chapter",
            "type": "string"
          },
          "sagaName": {
            "description": "Name of the saga",
            "type": "string"
          },
          "chapterNumber": {
            "description": "Chapter number or position",
            "type": "string"
          },
          "chapterTitle": {
            "description": "Title of the chapter",
            "type": "string"
          },
          "chapterDesc": {
            "description": "Detailed description of the chapter",
            "type": "string"
          },
          "chapterImage": {
            "description": "URL to the fictional chapter image",
            "type": "string"
          },
          "characterNameList": {
            "description": "List of character names involved in the chapter",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "realWorldImage": {
            "description": "URL to the real-world location image",
            "type": "string"
          },
          "chapterVideoUrl": {
            "description": "URL to the chapter video for desktop viewing",
            "type": "string"
          },
          "chapterVideoMobileUrl": {
            "description": "URL to the chapter video optimized for mobile",
            "type": "string"
          },
          "chapterPdfUrl": {
            "description": "URL to the downloadable PDF version",
            "type": "string"
          },
          "isUnlocked": {
            "description": "Whether the chapter is available to users without prerequisites",
            "type": "boolean"
          },
          "delFlag": {
            "description": "Flag to indicate if the record is deleted",
            "type": "boolean"
          },
          "insUserId": {
            "description": "ID of user who created this record",
            "type": "string"
          },
          "insDateTime": {
            "description": "Timestamp of record creation",
            "type": "string"
          },
          "updUserId": {
            "description": "ID of user who last updated this record",
            "type": "string"
          },
          "updDateTime": {
            "description": "Timestamp of last record update",
            "type": "string"
          }
        },
        "required": [
          "storyId",
          "touristSpotId",
          "storyChapterId",
          "sagaName",
          "chapterNumber",
          "chapterTitle",
          "chapterDesc",
          "chapterImage",
          "characterNameList",
          "realWorldImage",
          "chapterVideoUrl",
          "chapterVideoMobileUrl",
          "chapterPdfUrl",
          "isUnlocked"
        ]
      },
      "StoryCompletionResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Whether the story completion was successful",
            "type": "boolean"
          },
          "message": {
            "description": "Success or error message",
            "type": "string"
          },
          "storyProgress": {
            "description": "Story progress information",
            "type": "object",
            "properties": {
              "storyChapterId": {
                "description": "ID of the completed story chapter",
                "type": "string"
              },
              "chapterTitle": {
                "description": "Title of the completed chapter",
                "type": "string"
              },
              "status": {
                "description": "Current story status",
                "type": "string",
                "enum": [
                  "UNREAD",
                  "IN_PROGRESS",
                  "COMPLETED"
                ],
                "x-enumNames": [
                  "UNREAD",
                  "IN_PROGRESS",
                  "COMPLETED"
                ]
              },
              "completedAt": {
                "description": "Timestamp when the story was completed",
                "nullable": true
              }
            },
            "required": [
              "storyChapterId",
              "chapterTitle",
              "status",
              "completedAt"
            ]
          },
          "unlockedQuests": {
            "description": "List of quests unlocked by completing this story",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "questId": {
                  "description": "ID of the unlocked quest",
                  "type": "string"
                },
                "questName": {
                  "description": "Name of the unlocked quest",
                  "type": "string"
                },
                "questDesc": {
                  "description": "Description of the unlocked quest",
                  "type": "string"
                },
                "questImage": {
                  "description": "Image URL for the quest",
                  "type": "string",
                  "nullable": true
                },
                "touristSpotName": {
                  "description": "Name of the tourist spot where the quest is located",
                  "type": "string"
                },
                "totalMagatamaPointAwarded": {
                  "description": "Total magatama points awarded for completing this quest",
                  "type": "number"
                },
                "isPremium": {
                  "description": "Whether this is a premium quest",
                  "type": "boolean"
                }
              },
              "required": [
                "questId",
                "questName",
                "questDesc",
                "questImage",
                "touristSpotName",
                "totalMagatamaPointAwarded",
                "isPremium"
              ]
            }
          },
          "rewards": {
            "description": "Rewards earned from story completion",
            "type": "object",
            "properties": {
              "magatamaPointsEarned": {
                "description": "Total magatama points earned from story completion and achievements",
                "type": "number"
              },
              "achievementsUnlocked": {
                "description": "List of achievement names unlocked",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "magatamaPointsEarned",
              "achievementsUnlocked"
            ]
          }
        },
        "required": [
          "success",
          "message",
          "storyProgress",
          "unlockedQuests",
          "rewards"
        ]
      },
      "StoryProgressResponseDto": {
        "type": "object",
        "properties": {
          "storyChapterId": {
            "description": "ID of the story chapter",
            "type": "string"
          },
          "status": {
            "description": "Current reading status",
            "type": "string",
            "enum": [
              "UNREAD",
              "IN_PROGRESS",
              "COMPLETED"
            ],
            "x-enumNames": [
              "UNREAD",
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "unlockedAt": {
            "description": "Timestamp when the user started reading",
            "nullable": true
          },
          "finishedAt": {
            "description": "Timestamp when the user finished reading",
            "nullable": true
          },
          "canStart": {
            "description": "Whether the user can start reading this chapter",
            "type": "boolean"
          },
          "canComplete": {
            "description": "Whether the user can complete this chapter",
            "type": "boolean"
          }
        },
        "required": [
          "storyChapterId",
          "status",
          "unlockedAt",
          "finishedAt",
          "canStart",
          "canComplete"
        ]
      },
      "ModelRouteResponseDto": {
        "type": "object",
        "properties": {
          "modelRouteId": {
            "description": "Unique identifier for the model route",
            "type": "string"
          },
          "storyId": {
            "description": "Unique identifier for the story",
            "type": "string"
          },
          "routeName": {
            "description": "Name of the model route",
            "type": "string"
          },
          "region": {
            "description": "Region of the model route",
            "type": "string"
          },
          "regionDesc": {
            "description": "Description of the region",
            "type": "string"
          },
          "recommendation": {
            "description": "Recommendation of the model route",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "regionLatitude": {
            "description": "Latitude of the region",
            "type": "number"
          },
          "regionLongitude": {
            "description": "Longitude of the region",
            "type": "number"
          },
          "regionBackgroundMedia": {
            "description": "URL to the region's cover media",
            "type": "string"
          },
          "touristSpotList": {
            "description": "List of tourist spots in the model route",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "touristSpotId": {
                  "description": "Unique identifier for the tourist spot",
                  "type": "string"
                },
                "storyChapterId": {
                  "description": "Unique identifier for the story chapter",
                  "type": "string"
                },
                "touristSpotName": {
                  "description": "Name of the tourist spot",
                  "type": "string"
                },
                "touristSpotDesc": {
                  "description": "Description of the tourist spot",
                  "type": "string"
                },
                "bestVisitTime": {
                  "description": "Best visit time of the tourist spot",
                  "type": "string"
                },
                "address": {
                  "description": "Address of the tourist spot",
                  "type": "string"
                },
                "touristSpotLatitude": {
                  "description": "Latitude of the tourist spot",
                  "type": "number"
                },
                "touristSpotLongitude": {
                  "description": "Longitude of the tourist spot",
                  "type": "number"
                },
                "touristSpotHashtag": {
                  "description": "Hashtags associated with this location",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "storyChapterLink": {
                  "description": "Link to the related story chapter",
                  "type": "string"
                },
                "imageSet": {
                  "description": "Image set for the tourist spot",
                  "type": "object",
                  "properties": {
                    "main": {
                      "description": "Main image of the tourist spot",
                      "type": "string"
                    },
                    "small": {
                      "description": "Small images of the tourist spot",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "main",
                    "small"
                  ]
                },
                "weatherInfo": {
                  "description": "Weather info for the tourist spot",
                  "type": "object",
                  "properties": {
                    "temperatureCelsius": {
                      "description": "Temperature of the weather",
                      "type": "number"
                    },
                    "weatherName": {
                      "description": "Name of the weather",
                      "type": "string"
                    },
                    "weatherDesc": {
                      "description": "Description of the weather",
                      "type": "string"
                    }
                  },
                  "required": [
                    "temperatureCelsius",
                    "weatherName",
                    "weatherDesc"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "touristSpotId",
                "storyChapterId",
                "touristSpotName",
                "touristSpotDesc",
                "bestVisitTime",
                "address",
                "touristSpotLatitude",
                "touristSpotLongitude",
                "touristSpotHashtag"
              ]
            }
          },
          "regionWeatherInfo": {
            "description": "Current weather info for the region",
            "type": "object",
            "properties": {
              "temperatureCelsius": {
                "description": "Temperature of the weather",
                "type": "number"
              },
              "weatherName": {
                "description": "Name of the weather",
                "type": "string"
              },
              "weatherDesc": {
                "description": "Description of the weather",
                "type": "string"
              },
              "regionName": {
                "description": "Name of the region",
                "type": "string"
              }
            },
            "required": [
              "temperatureCelsius",
              "weatherName",
              "weatherDesc",
              "regionName"
            ]
          },
          "delFlag": {
            "description": "Flag to indicate if the record is deleted",
            "type": "boolean"
          },
          "insUserId": {
            "description": "ID of user who created this record",
            "type": "string"
          },
          "insDateTime": {
            "description": "Timestamp of record creation",
            "type": "string"
          },
          "updUserId": {
            "description": "ID of user who last updated this record",
            "type": "string"
          },
          "updDateTime": {
            "description": "Timestamp of last record update",
            "type": "string"
          }
        },
        "required": [
          "modelRouteId",
          "storyId",
          "routeName",
          "region",
          "regionDesc",
          "recommendation",
          "regionLatitude",
          "regionLongitude",
          "regionBackgroundMedia",
          "touristSpotList",
          "regionWeatherInfo"
        ]
      },
      "TouristSpotResponseDto": {
        "type": "object",
        "properties": {
          "touristSpotId": {
            "description": "Unique identifier for the tourist spot",
            "type": "string"
          },
          "storyChapterId": {
            "description": "Unique identifier for the story chapter",
            "type": "string"
          },
          "touristSpotName": {
            "description": "Name of the tourist spot",
            "type": "string"
          },
          "touristSpotDesc": {
            "description": "Description of the tourist spot",
            "type": "string"
          },
          "bestVisitTime": {
            "description": "Best visit time of the tourist spot",
            "type": "string"
          },
          "address": {
            "description": "Address of the tourist spot",
            "type": "string"
          },
          "touristSpotLatitude": {
            "description": "Latitude of the tourist spot",
            "type": "number"
          },
          "touristSpotLongitude": {
            "description": "Longitude of the tourist spot",
            "type": "number"
          },
          "touristSpotHashtag": {
            "description": "Hashtags associated with this location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "storyChapterLink": {
            "description": "Link to the related story chapter",
            "type": "string"
          },
          "imageSet": {
            "description": "Image set for the tourist spot",
            "type": "object",
            "properties": {
              "main": {
                "description": "Main image of the tourist spot",
                "type": "string"
              },
              "small": {
                "description": "Small images of the tourist spot",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "main",
              "small"
            ]
          },
          "weatherInfo": {
            "description": "Weather info for the tourist spot",
            "type": "object",
            "properties": {
              "temperatureCelsius": {
                "description": "Temperature of the weather",
                "type": "number"
              },
              "weatherName": {
                "description": "Name of the weather",
                "type": "string"
              },
              "weatherDesc": {
                "description": "Description of the weather",
                "type": "string"
              }
            },
            "required": [
              "temperatureCelsius",
              "weatherName",
              "weatherDesc"
            ]
          },
          "delFlag": {
            "description": "Flag to indicate if the record is deleted",
            "type": "boolean"
          },
          "insUserId": {
            "description": "ID of user who created this record",
            "type": "string"
          },
          "insDateTime": {
            "description": "Timestamp of record creation",
            "type": "string"
          },
          "updUserId": {
            "description": "ID of user who last updated this record",
            "type": "string"
          },
          "updDateTime": {
            "description": "Timestamp of last record update",
            "type": "string"
          }
        },
        "required": [
          "touristSpotId",
          "storyChapterId",
          "touristSpotName",
          "touristSpotDesc",
          "bestVisitTime",
          "address",
          "touristSpotLatitude",
          "touristSpotLongitude",
          "touristSpotHashtag"
        ]
      },
      "UserEntity": {
        "type": "object",
        "properties": {}
      },
      "QuestListResponseDto": {
        "type": "object",
        "properties": {
          "quests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "questId": {
                  "description": "Unique identifier for the quest",
                  "type": "string"
                },
                "questName": {
                  "description": "Name of the quest",
                  "type": "string"
                },
                "questDesc": {
                  "description": "Description of the quest",
                  "type": "string"
                },
                "questImage": {
                  "description": "URL to the quest image",
                  "type": "string"
                },
                "questType": {
                  "description": "Quest type",
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "TRAVEL_TO_EARN",
                    "EARN_TO_TRAVEL",
                    "CAMPAIGN",
                    "COMMUNITY_EVENT"
                  ],
                  "x-enumNames": [
                    "UNKNOWN",
                    "TRAVEL_TO_EARN",
                    "EARN_TO_TRAVEL",
                    "CAMPAIGN",
                    "COMMUNITY_EVENT"
                  ]
                },
                "isUnlocked": {
                  "description": "Whether quest is unlocked",
                  "type": "boolean"
                },
                "isPremium": {
                  "description": "Whether quest is premium",
                  "type": "boolean"
                },
                "totalMagatamaPointAwarded": {
                  "description": "Total Magatama points awarded",
                  "type": "number"
                },
                "tasks": {
                  "description": "Tasks associated with this quest",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "taskId": {
                        "description": "Unique identifier for the task",
                        "type": "string"
                      },
                      "taskTheme": {
                        "description": "Theme of the task",
                        "type": "string",
                        "enum": [
                          "STORY",
                          "LOCAL_CULTURE",
                          "FOOD",
                          "URBAN_EXPLORE",
                          "NATURE"
                        ],
                        "x-enumNames": [
                          "STORY",
                          "LOCAL_CULTURE",
                          "FOOD",
                          "URBAN_EXPLORE",
                          "NATURE"
                        ]
                      },
                      "taskType": {
                        "description": "Type of the task",
                        "type": "string",
                        "enum": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ],
                        "x-enumNames": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ]
                      },
                      "taskName": {
                        "description": "Name of the task",
                        "type": "string"
                      },
                      "taskDesc": {
                        "description": "Description of the task",
                        "type": "string"
                      },
                      "isUnlocked": {
                        "description": "Whether task is unlocked",
                        "type": "boolean"
                      },
                      "requiredAction": {
                        "description": "Action required to complete the task",
                        "type": "string"
                      },
                      "groupActivityMembers": {
                        "description": "Members for group activities",
                        "type": "array",
                        "items": {}
                      },
                      "selectOptions": {
                        "description": "Options for selection tasks",
                        "type": "array",
                        "items": {}
                      },
                      "antiCheatRules": {
                        "description": "Rules to prevent cheating"
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded for this task",
                        "type": "number"
                      },
                      "rewardEarned": {
                        "description": "Reward earned for this task",
                        "type": "string"
                      },
                      "isCompleted": {
                        "description": "Whether task is completed",
                        "type": "boolean"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "taskId",
                      "taskTheme",
                      "taskType",
                      "taskName",
                      "taskDesc",
                      "isUnlocked",
                      "requiredAction",
                      "antiCheatRules",
                      "magatamaPointAwarded",
                      "isCompleted"
                    ]
                  }
                },
                "touristSpot": {
                  "description": "Tourist spot associated with this quest",
                  "type": "object",
                  "properties": {
                    "touristSpotId": {
                      "description": "Unique identifier for the tourist spot",
                      "type": "string"
                    },
                    "storyChapterId": {
                      "description": "Unique identifier for the story chapter",
                      "type": "string"
                    },
                    "touristSpotName": {
                      "description": "Name of the tourist spot",
                      "type": "string"
                    },
                    "touristSpotDesc": {
                      "description": "Description of the tourist spot",
                      "type": "string"
                    },
                    "bestVisitTime": {
                      "description": "Best visit time of the tourist spot",
                      "type": "string"
                    },
                    "address": {
                      "description": "Address of the tourist spot",
                      "type": "string"
                    },
                    "touristSpotLatitude": {
                      "description": "Latitude of the tourist spot",
                      "type": "number"
                    },
                    "touristSpotLongitude": {
                      "description": "Longitude of the tourist spot",
                      "type": "number"
                    },
                    "touristSpotHashtag": {
                      "description": "Hashtags associated with this location",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "storyChapterLink": {
                      "description": "Link to the related story chapter",
                      "type": "string"
                    },
                    "imageSet": {
                      "description": "Image set for the tourist spot",
                      "type": "object",
                      "properties": {
                        "main": {
                          "description": "Main image of the tourist spot",
                          "type": "string"
                        },
                        "small": {
                          "description": "Small images of the tourist spot",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "main",
                        "small"
                      ]
                    },
                    "weatherInfo": {
                      "description": "Weather info for the tourist spot",
                      "type": "object",
                      "properties": {
                        "temperatureCelsius": {
                          "description": "Temperature of the weather",
                          "type": "number"
                        },
                        "weatherName": {
                          "description": "Name of the weather",
                          "type": "string"
                        },
                        "weatherDesc": {
                          "description": "Description of the weather",
                          "type": "string"
                        }
                      },
                      "required": [
                        "temperatureCelsius",
                        "weatherName",
                        "weatherDesc"
                      ]
                    },
                    "delFlag": {
                      "description": "Flag to indicate if the record is deleted",
                      "type": "boolean"
                    },
                    "insUserId": {
                      "description": "ID of user who created this record",
                      "type": "string"
                    },
                    "insDateTime": {
                      "description": "Timestamp of record creation",
                      "type": "string"
                    },
                    "updUserId": {
                      "description": "ID of user who last updated this record",
                      "type": "string"
                    },
                    "updDateTime": {
                      "description": "Timestamp of last record update",
                      "type": "string"
                    }
                  },
                  "required": [
                    "touristSpotId",
                    "storyChapterId",
                    "touristSpotName",
                    "touristSpotDesc",
                    "bestVisitTime",
                    "address",
                    "touristSpotLatitude",
                    "touristSpotLongitude",
                    "touristSpotHashtag"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "questId",
                "questName",
                "questDesc",
                "questType",
                "isUnlocked",
                "isPremium",
                "totalMagatamaPointAwarded"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "currentPage": {
                "type": "number"
              },
              "totalPages": {
                "type": "number"
              },
              "totalQuests": {
                "type": "number"
              }
            },
            "required": [
              "currentPage",
              "totalPages",
              "totalQuests"
            ]
          }
        },
        "required": [
          "quests",
          "pagination"
        ]
      },
      "QuestResponseDto": {
        "type": "object",
        "properties": {
          "questId": {
            "description": "Unique identifier for the quest",
            "type": "string"
          },
          "questName": {
            "description": "Name of the quest",
            "type": "string"
          },
          "questDesc": {
            "description": "Description of the quest",
            "type": "string"
          },
          "questImage": {
            "description": "URL to the quest image",
            "type": "string"
          },
          "questType": {
            "description": "Quest type",
            "type": "string",
            "enum": [
              "UNKNOWN",
              "TRAVEL_TO_EARN",
              "EARN_TO_TRAVEL",
              "CAMPAIGN",
              "COMMUNITY_EVENT"
            ],
            "x-enumNames": [
              "UNKNOWN",
              "TRAVEL_TO_EARN",
              "EARN_TO_TRAVEL",
              "CAMPAIGN",
              "COMMUNITY_EVENT"
            ]
          },
          "isUnlocked": {
            "description": "Whether quest is unlocked",
            "type": "boolean"
          },
          "isPremium": {
            "description": "Whether quest is premium",
            "type": "boolean"
          },
          "totalMagatamaPointAwarded": {
            "description": "Total Magatama points awarded",
            "type": "number"
          },
          "tasks": {
            "description": "Tasks associated with this quest",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "taskId": {
                  "description": "Unique identifier for the task",
                  "type": "string"
                },
                "taskTheme": {
                  "description": "Theme of the task",
                  "type": "string",
                  "enum": [
                    "STORY",
                    "LOCAL_CULTURE",
                    "FOOD",
                    "URBAN_EXPLORE",
                    "NATURE"
                  ],
                  "x-enumNames": [
                    "STORY",
                    "LOCAL_CULTURE",
                    "FOOD",
                    "URBAN_EXPLORE",
                    "NATURE"
                  ]
                },
                "taskType": {
                  "description": "Type of the task",
                  "type": "string",
                  "enum": [
                    "VISIT_LOCATION",
                    "PHOTO_UPLOAD",
                    "ANSWER_TEXT",
                    "SELECT_OPTION",
                    "SHARE_SOCIAL",
                    "CHECK_IN",
                    "GROUP_ACTIVITY",
                    "LOCAL_INTERACTION"
                  ],
                  "x-enumNames": [
                    "VISIT_LOCATION",
                    "PHOTO_UPLOAD",
                    "ANSWER_TEXT",
                    "SELECT_OPTION",
                    "SHARE_SOCIAL",
                    "CHECK_IN",
                    "GROUP_ACTIVITY",
                    "LOCAL_INTERACTION"
                  ]
                },
                "taskName": {
                  "description": "Name of the task",
                  "type": "string"
                },
                "taskDesc": {
                  "description": "Description of the task",
                  "type": "string"
                },
                "isUnlocked": {
                  "description": "Whether task is unlocked",
                  "type": "boolean"
                },
                "requiredAction": {
                  "description": "Action required to complete the task",
                  "type": "string"
                },
                "groupActivityMembers": {
                  "description": "Members for group activities",
                  "type": "array",
                  "items": {}
                },
                "selectOptions": {
                  "description": "Options for selection tasks",
                  "type": "array",
                  "items": {}
                },
                "antiCheatRules": {
                  "description": "Rules to prevent cheating"
                },
                "magatamaPointAwarded": {
                  "description": "Magatama points awarded for this task",
                  "type": "number"
                },
                "rewardEarned": {
                  "description": "Reward earned for this task",
                  "type": "string"
                },
                "isCompleted": {
                  "description": "Whether task is completed",
                  "type": "boolean"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "taskId",
                "taskTheme",
                "taskType",
                "taskName",
                "taskDesc",
                "isUnlocked",
                "requiredAction",
                "antiCheatRules",
                "magatamaPointAwarded",
                "isCompleted"
              ]
            }
          },
          "touristSpot": {
            "description": "Tourist spot associated with this quest",
            "type": "object",
            "properties": {
              "touristSpotId": {
                "description": "Unique identifier for the tourist spot",
                "type": "string"
              },
              "storyChapterId": {
                "description": "Unique identifier for the story chapter",
                "type": "string"
              },
              "touristSpotName": {
                "description": "Name of the tourist spot",
                "type": "string"
              },
              "touristSpotDesc": {
                "description": "Description of the tourist spot",
                "type": "string"
              },
              "bestVisitTime": {
                "description": "Best visit time of the tourist spot",
                "type": "string"
              },
              "address": {
                "description": "Address of the tourist spot",
                "type": "string"
              },
              "touristSpotLatitude": {
                "description": "Latitude of the tourist spot",
                "type": "number"
              },
              "touristSpotLongitude": {
                "description": "Longitude of the tourist spot",
                "type": "number"
              },
              "touristSpotHashtag": {
                "description": "Hashtags associated with this location",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "storyChapterLink": {
                "description": "Link to the related story chapter",
                "type": "string"
              },
              "imageSet": {
                "description": "Image set for the tourist spot",
                "type": "object",
                "properties": {
                  "main": {
                    "description": "Main image of the tourist spot",
                    "type": "string"
                  },
                  "small": {
                    "description": "Small images of the tourist spot",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "main",
                  "small"
                ]
              },
              "weatherInfo": {
                "description": "Weather info for the tourist spot",
                "type": "object",
                "properties": {
                  "temperatureCelsius": {
                    "description": "Temperature of the weather",
                    "type": "number"
                  },
                  "weatherName": {
                    "description": "Name of the weather",
                    "type": "string"
                  },
                  "weatherDesc": {
                    "description": "Description of the weather",
                    "type": "string"
                  }
                },
                "required": [
                  "temperatureCelsius",
                  "weatherName",
                  "weatherDesc"
                ]
              },
              "delFlag": {
                "description": "Flag to indicate if the record is deleted",
                "type": "boolean"
              },
              "insUserId": {
                "description": "ID of user who created this record",
                "type": "string"
              },
              "insDateTime": {
                "description": "Timestamp of record creation",
                "type": "string"
              },
              "updUserId": {
                "description": "ID of user who last updated this record",
                "type": "string"
              },
              "updDateTime": {
                "description": "Timestamp of last record update",
                "type": "string"
              }
            },
            "required": [
              "touristSpotId",
              "storyChapterId",
              "touristSpotName",
              "touristSpotDesc",
              "bestVisitTime",
              "address",
              "touristSpotLatitude",
              "touristSpotLongitude",
              "touristSpotHashtag"
            ]
          },
          "delFlag": {
            "description": "Flag to indicate if the record is deleted",
            "type": "boolean"
          },
          "insUserId": {
            "description": "ID of user who created this record",
            "type": "string"
          },
          "insDateTime": {
            "description": "Timestamp of record creation",
            "type": "string"
          },
          "updUserId": {
            "description": "ID of user who last updated this record",
            "type": "string"
          },
          "updDateTime": {
            "description": "Timestamp of last record update",
            "type": "string"
          }
        },
        "required": [
          "questId",
          "questName",
          "questDesc",
          "questType",
          "isUnlocked",
          "isPremium",
          "totalMagatamaPointAwarded"
        ]
      },
      "TaskResponseDto": {
        "type": "object",
        "properties": {
          "taskId": {
            "description": "Unique identifier for the task",
            "type": "string"
          },
          "taskTheme": {
            "description": "Theme of the task",
            "type": "string",
            "enum": [
              "STORY",
              "LOCAL_CULTURE",
              "FOOD",
              "URBAN_EXPLORE",
              "NATURE"
            ],
            "x-enumNames": [
              "STORY",
              "LOCAL_CULTURE",
              "FOOD",
              "URBAN_EXPLORE",
              "NATURE"
            ]
          },
          "taskType": {
            "description": "Type of the task",
            "type": "string",
            "enum": [
              "VISIT_LOCATION",
              "PHOTO_UPLOAD",
              "ANSWER_TEXT",
              "SELECT_OPTION",
              "SHARE_SOCIAL",
              "CHECK_IN",
              "GROUP_ACTIVITY",
              "LOCAL_INTERACTION"
            ],
            "x-enumNames": [
              "VISIT_LOCATION",
              "PHOTO_UPLOAD",
              "ANSWER_TEXT",
              "SELECT_OPTION",
              "SHARE_SOCIAL",
              "CHECK_IN",
              "GROUP_ACTIVITY",
              "LOCAL_INTERACTION"
            ]
          },
          "taskName": {
            "description": "Name of the task",
            "type": "string"
          },
          "taskDesc": {
            "description": "Description of the task",
            "type": "string"
          },
          "isUnlocked": {
            "description": "Whether task is unlocked",
            "type": "boolean"
          },
          "requiredAction": {
            "description": "Action required to complete the task",
            "type": "string"
          },
          "groupActivityMembers": {
            "description": "Members for group activities",
            "type": "array",
            "items": {}
          },
          "selectOptions": {
            "description": "Options for selection tasks",
            "type": "array",
            "items": {}
          },
          "antiCheatRules": {
            "description": "Rules to prevent cheating"
          },
          "magatamaPointAwarded": {
            "description": "Magatama points awarded for this task",
            "type": "number"
          },
          "rewardEarned": {
            "description": "Reward earned for this task",
            "type": "string"
          },
          "isCompleted": {
            "description": "Whether task is completed",
            "type": "boolean"
          },
          "delFlag": {
            "description": "Flag to indicate if the record is deleted",
            "type": "boolean"
          },
          "insUserId": {
            "description": "ID of user who created this record",
            "type": "string"
          },
          "insDateTime": {
            "description": "Timestamp of record creation",
            "type": "string"
          },
          "updUserId": {
            "description": "ID of user who last updated this record",
            "type": "string"
          },
          "updDateTime": {
            "description": "Timestamp of last record update",
            "type": "string"
          }
        },
        "required": [
          "taskId",
          "taskTheme",
          "taskType",
          "taskName",
          "taskDesc",
          "isUnlocked",
          "requiredAction",
          "antiCheatRules",
          "magatamaPointAwarded",
          "isCompleted"
        ]
      },
      "QuestCreateRequestDto": {
        "type": "object",
        "properties": {
          "touristSpotId": {
            "description": "Unique identifier for the tourist spot",
            "type": "string"
          },
          "questName": {
            "description": "Name of the quest",
            "type": "string"
          },
          "questDesc": {
            "description": "Description of the quest",
            "type": "string"
          },
          "questImage": {
            "description": "URL to the quest image",
            "type": "string"
          },
          "questType": {
            "description": "Quest type",
            "type": "string",
            "enum": [
              "UNKNOWN",
              "TRAVEL_TO_EARN",
              "EARN_TO_TRAVEL",
              "CAMPAIGN",
              "COMMUNITY_EVENT"
            ],
            "x-enumNames": [
              "UNKNOWN",
              "TRAVEL_TO_EARN",
              "EARN_TO_TRAVEL",
              "CAMPAIGN",
              "COMMUNITY_EVENT"
            ]
          },
          "isUnlocked": {
            "description": "Whether quest is unlocked",
            "type": "boolean"
          },
          "isPremium": {
            "description": "Whether quest is premium",
            "type": "boolean"
          },
          "totalMagatamaPointAwarded": {
            "description": "Total Magatama points awarded",
            "type": "number"
          },
          "rewardType": {
            "description": "Reward type",
            "type": "string",
            "enum": [
              "UNKNOWN",
              "LOCAL_EXPERIENCES",
              "CULINARY",
              "ADVENTURE_NATURE",
              "CULTURAL_COMMUNITY",
              "HIDDEN_PERKS",
              "SURPRISE_TREATS",
              "BONUS_UPGRADES",
              "SOCIAL_RECOGNITION",
              "RETURNING_VISITOR_BONUS",
              "ELITE_EXPERIENCES",
              "WELLNESS",
              "SHOPPING",
              "ENTERTAINMENT",
              "TRANSPORT_CONNECTIVITY",
              "LOCAL_PARTNERSHIPS"
            ],
            "x-enumNames": [
              "UNKNOWN",
              "LOCAL_EXPERIENCES",
              "CULINARY",
              "ADVENTURE_NATURE",
              "CULTURAL_COMMUNITY",
              "HIDDEN_PERKS",
              "SURPRISE_TREATS",
              "BONUS_UPGRADES",
              "SOCIAL_RECOGNITION",
              "RETURNING_VISITOR_BONUS",
              "ELITE_EXPERIENCES",
              "WELLNESS",
              "SHOPPING",
              "ENTERTAINMENT",
              "TRANSPORT_CONNECTIVITY",
              "LOCAL_PARTNERSHIPS"
            ]
          },
          "delFlag": {
            "description": "Flag to indicate if the quest is deleted",
            "type": "boolean"
          }
        },
        "required": [
          "touristSpotId",
          "questName",
          "questDesc",
          "questType",
          "isUnlocked",
          "isPremium",
          "totalMagatamaPointAwarded",
          "rewardType",
          "delFlag"
        ]
      },
      "QuestTaskCreateRequestDto": {
        "type": "object",
        "properties": {
          "taskTheme": {
            "description": "Theme of the task",
            "type": "string",
            "enum": [
              "STORY",
              "LOCAL_CULTURE",
              "FOOD",
              "URBAN_EXPLORE",
              "NATURE"
            ],
            "x-enumNames": [
              "STORY",
              "LOCAL_CULTURE",
              "FOOD",
              "URBAN_EXPLORE",
              "NATURE"
            ]
          },
          "taskType": {
            "description": "Type of the task",
            "type": "string",
            "enum": [
              "VISIT_LOCATION",
              "PHOTO_UPLOAD",
              "ANSWER_TEXT",
              "SELECT_OPTION",
              "SHARE_SOCIAL",
              "CHECK_IN",
              "GROUP_ACTIVITY",
              "LOCAL_INTERACTION"
            ],
            "x-enumNames": [
              "VISIT_LOCATION",
              "PHOTO_UPLOAD",
              "ANSWER_TEXT",
              "SELECT_OPTION",
              "SHARE_SOCIAL",
              "CHECK_IN",
              "GROUP_ACTIVITY",
              "LOCAL_INTERACTION"
            ]
          },
          "taskName": {
            "description": "Name of the task",
            "type": "string"
          },
          "taskDesc": {
            "description": "Description of the task",
            "type": "string"
          },
          "isUnlocked": {
            "description": "Whether task is unlocked",
            "type": "boolean"
          },
          "requiredAction": {
            "description": "Action required to complete the task",
            "type": "string"
          },
          "groupActivityMembers": {
            "description": "Members for group activities",
            "type": "array",
            "items": {}
          },
          "selectOptions": {
            "description": "Options for selection tasks",
            "type": "array",
            "items": {}
          },
          "antiCheatRules": {
            "description": "Rules to prevent cheating"
          },
          "magatamaPointAwarded": {
            "description": "Magatama points awarded for this task",
            "type": "number"
          },
          "rewardEarned": {
            "description": "Reward earned for this task",
            "type": "string"
          }
        },
        "required": [
          "taskTheme",
          "taskType",
          "taskName",
          "taskDesc",
          "isUnlocked",
          "requiredAction",
          "antiCheatRules",
          "magatamaPointAwarded"
        ]
      },
      "QuestUpdateRequestDto": {
        "type": "object",
        "properties": {
          "touristSpotId": {
            "description": "Unique identifier for the tourist spot",
            "type": "string"
          },
          "questName": {
            "description": "Name of the quest",
            "type": "string"
          },
          "questDesc": {
            "description": "Description of the quest",
            "type": "string"
          },
          "questImage": {
            "description": "URL to the quest image",
            "type": "string"
          },
          "questType": {
            "description": "Quest type",
            "type": "string",
            "enum": [
              "UNKNOWN",
              "TRAVEL_TO_EARN",
              "EARN_TO_TRAVEL",
              "CAMPAIGN",
              "COMMUNITY_EVENT"
            ],
            "x-enumNames": [
              "UNKNOWN",
              "TRAVEL_TO_EARN",
              "EARN_TO_TRAVEL",
              "CAMPAIGN",
              "COMMUNITY_EVENT"
            ]
          },
          "isUnlocked": {
            "description": "Whether quest is unlocked",
            "type": "boolean"
          },
          "isPremium": {
            "description": "Whether quest is premium",
            "type": "boolean"
          },
          "totalMagatamaPointAwarded": {
            "description": "Total Magatama points awarded",
            "type": "number"
          },
          "rewardType": {
            "description": "Reward type",
            "type": "string",
            "enum": [
              "UNKNOWN",
              "LOCAL_EXPERIENCES",
              "CULINARY",
              "ADVENTURE_NATURE",
              "CULTURAL_COMMUNITY",
              "HIDDEN_PERKS",
              "SURPRISE_TREATS",
              "BONUS_UPGRADES",
              "SOCIAL_RECOGNITION",
              "RETURNING_VISITOR_BONUS",
              "ELITE_EXPERIENCES",
              "WELLNESS",
              "SHOPPING",
              "ENTERTAINMENT",
              "TRANSPORT_CONNECTIVITY",
              "LOCAL_PARTNERSHIPS"
            ],
            "x-enumNames": [
              "UNKNOWN",
              "LOCAL_EXPERIENCES",
              "CULINARY",
              "ADVENTURE_NATURE",
              "CULTURAL_COMMUNITY",
              "HIDDEN_PERKS",
              "SURPRISE_TREATS",
              "BONUS_UPGRADES",
              "SOCIAL_RECOGNITION",
              "RETURNING_VISITOR_BONUS",
              "ELITE_EXPERIENCES",
              "WELLNESS",
              "SHOPPING",
              "ENTERTAINMENT",
              "TRANSPORT_CONNECTIVITY",
              "LOCAL_PARTNERSHIPS"
            ]
          },
          "delFlag": {
            "description": "Flag to indicate if the quest is deleted",
            "type": "boolean"
          },
          "questId": {
            "description": "Unique identifier for the quest",
            "type": "string"
          },
          "updUserId": {
            "description": "Unique identifier for the user who updated the quest",
            "type": "string"
          },
          "taskList": {
            "description": "List of tasks for the quest",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "taskTheme": {
                  "description": "Theme of the task",
                  "type": "string",
                  "enum": [
                    "STORY",
                    "LOCAL_CULTURE",
                    "FOOD",
                    "URBAN_EXPLORE",
                    "NATURE"
                  ],
                  "x-enumNames": [
                    "STORY",
                    "LOCAL_CULTURE",
                    "FOOD",
                    "URBAN_EXPLORE",
                    "NATURE"
                  ]
                },
                "taskType": {
                  "description": "Type of the task",
                  "type": "string",
                  "enum": [
                    "VISIT_LOCATION",
                    "PHOTO_UPLOAD",
                    "ANSWER_TEXT",
                    "SELECT_OPTION",
                    "SHARE_SOCIAL",
                    "CHECK_IN",
                    "GROUP_ACTIVITY",
                    "LOCAL_INTERACTION"
                  ],
                  "x-enumNames": [
                    "VISIT_LOCATION",
                    "PHOTO_UPLOAD",
                    "ANSWER_TEXT",
                    "SELECT_OPTION",
                    "SHARE_SOCIAL",
                    "CHECK_IN",
                    "GROUP_ACTIVITY",
                    "LOCAL_INTERACTION"
                  ]
                },
                "taskName": {
                  "description": "Name of the task",
                  "type": "string"
                },
                "taskDesc": {
                  "description": "Description of the task",
                  "type": "string"
                },
                "isUnlocked": {
                  "description": "Whether task is unlocked",
                  "type": "boolean"
                },
                "requiredAction": {
                  "description": "Action required to complete the task",
                  "type": "string"
                },
                "groupActivityMembers": {
                  "description": "Members for group activities",
                  "type": "array",
                  "items": {}
                },
                "selectOptions": {
                  "description": "Options for selection tasks",
                  "type": "array",
                  "items": {}
                },
                "antiCheatRules": {
                  "description": "Rules to prevent cheating"
                },
                "magatamaPointAwarded": {
                  "description": "Magatama points awarded for this task",
                  "type": "number"
                },
                "rewardEarned": {
                  "description": "Reward earned for this task",
                  "type": "string"
                },
                "taskId": {
                  "description": "Unique identifier for the task",
                  "type": "string"
                },
                "delFlag": {
                  "description": "Flag to indicate if the task is deleted",
                  "type": "boolean"
                },
                "updUserId": {
                  "description": "Unique identifier for the user who updated the task",
                  "type": "string"
                }
              },
              "required": [
                "taskTheme",
                "taskType",
                "taskName",
                "taskDesc",
                "isUnlocked",
                "requiredAction",
                "antiCheatRules",
                "magatamaPointAwarded",
                "taskId",
                "delFlag",
                "updUserId"
              ]
            }
          }
        },
        "required": [
          "touristSpotId",
          "questName",
          "questDesc",
          "questType",
          "isUnlocked",
          "isPremium",
          "totalMagatamaPointAwarded",
          "rewardType",
          "delFlag",
          "questId",
          "updUserId"
        ]
      },
      "QuestTaskUpdateRequestDto": {
        "type": "object",
        "properties": {
          "taskTheme": {
            "description": "Theme of the task",
            "type": "string",
            "enum": [
              "STORY",
              "LOCAL_CULTURE",
              "FOOD",
              "URBAN_EXPLORE",
              "NATURE"
            ],
            "x-enumNames": [
              "STORY",
              "LOCAL_CULTURE",
              "FOOD",
              "URBAN_EXPLORE",
              "NATURE"
            ]
          },
          "taskType": {
            "description": "Type of the task",
            "type": "string",
            "enum": [
              "VISIT_LOCATION",
              "PHOTO_UPLOAD",
              "ANSWER_TEXT",
              "SELECT_OPTION",
              "SHARE_SOCIAL",
              "CHECK_IN",
              "GROUP_ACTIVITY",
              "LOCAL_INTERACTION"
            ],
            "x-enumNames": [
              "VISIT_LOCATION",
              "PHOTO_UPLOAD",
              "ANSWER_TEXT",
              "SELECT_OPTION",
              "SHARE_SOCIAL",
              "CHECK_IN",
              "GROUP_ACTIVITY",
              "LOCAL_INTERACTION"
            ]
          },
          "taskName": {
            "description": "Name of the task",
            "type": "string"
          },
          "taskDesc": {
            "description": "Description of the task",
            "type": "string"
          },
          "isUnlocked": {
            "description": "Whether task is unlocked",
            "type": "boolean"
          },
          "requiredAction": {
            "description": "Action required to complete the task",
            "type": "string"
          },
          "groupActivityMembers": {
            "description": "Members for group activities",
            "type": "array",
            "items": {}
          },
          "selectOptions": {
            "description": "Options for selection tasks",
            "type": "array",
            "items": {}
          },
          "antiCheatRules": {
            "description": "Rules to prevent cheating"
          },
          "magatamaPointAwarded": {
            "description": "Magatama points awarded for this task",
            "type": "number"
          },
          "rewardEarned": {
            "description": "Reward earned for this task",
            "type": "string"
          },
          "taskId": {
            "description": "Unique identifier for the task",
            "type": "string"
          },
          "delFlag": {
            "description": "Flag to indicate if the task is deleted",
            "type": "boolean"
          },
          "updUserId": {
            "description": "Unique identifier for the user who updated the task",
            "type": "string"
          }
        },
        "required": [
          "taskTheme",
          "taskType",
          "taskName",
          "taskDesc",
          "isUnlocked",
          "requiredAction",
          "antiCheatRules",
          "magatamaPointAwarded",
          "taskId",
          "delFlag",
          "updUserId"
        ]
      },
      "LoginRequestDto": {
        "type": "object",
        "properties": {
          "username": {
            "description": "Username for login",
            "type": "string"
          },
          "password": {
            "description": "User password",
            "type": "string"
          },
          "passportWalletAddress": {
            "description": "Passport wallet address to validate",
            "type": "string"
          },
          "discordId": {
            "description": "Discord user ID",
            "type": "string"
          },
          "googleEmail": {
            "description": "Google email address",
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      },
      "AuthSignupRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "description": "Email address for signup",
            "type": "string",
            "format": "email"
          },
          "socialProvider": {
            "description": "Social provider for signup",
            "type": "string"
          },
          "socialId": {
            "description": "Social ID for signup",
            "type": "string"
          }
        },
        "required": [
          "email",
          "socialProvider",
          "socialId"
        ]
      },
      "AuthSignupResponseDto": {
        "type": "object",
        "properties": {
          "userId": {
            "description": "Unique identifier for the user",
            "type": "string"
          },
          "walletAddress": {
            "description": "Wallet address for the user",
            "type": "string"
          }
        },
        "required": [
          "userId",
          "walletAddress"
        ]
      },
      "GroupMembersResponseDto": {
        "type": "object",
        "properties": {
          "groupId": {
            "description": "Unique identifier for the group",
            "type": "string"
          },
          "leaderUserId": {
            "description": "User ID of the group leader",
            "type": "string"
          },
          "members": {
            "description": "List of group members",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userId": {
                  "description": "User ID of the member",
                  "type": "string"
                },
                "username": {
                  "description": "Username of the member",
                  "type": "string"
                }
              },
              "required": [
                "userId",
                "username"
              ]
            }
          }
        },
        "required": [
          "groupId",
          "leaderUserId",
          "members"
        ]
      },
      "StartGroupQuestRequestDto": {
        "type": "object",
        "properties": {
          "userId": {
            "description": "User ID of the quest leader starting the quest",
            "type": "string"
          },
          "latitude": {
            "description": "Optional latitude for location tracking",
            "type": "number"
          },
          "longitude": {
            "description": "Optional longitude for location tracking",
            "type": "number"
          }
        },
        "required": [
          "userId"
        ]
      },
      "StartGroupQuestResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Result message for starting the quest",
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "LocationQueryDto": {
        "type": "object",
        "properties": {
          "query": {
            "description": "Place name or search query",
            "type": "string"
          },
          "latitude": {
            "description": "Latitude for location bias",
            "type": "string"
          },
          "longitude": {
            "description": "Longitude for location bias",
            "type": "string"
          },
          "address": {
            "description": "Address for enhanced search accuracy",
            "type": "string"
          }
        },
        "required": [
          "query"
        ]
      },
      "LocationInfoResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Location name from Google Places",
            "type": "string"
          },
          "formattedAddress": {
            "description": "Formatted address from Google Places",
            "type": "string"
          },
          "phoneNumber": {
            "description": "International phone number",
            "type": "string"
          },
          "website": {
            "description": "Website URL",
            "type": "string"
          },
          "rating": {
            "description": "Google Places rating (1-5 scale)",
            "type": "number"
          },
          "googleMapsUrl": {
            "description": "Direct Google Maps URL",
            "type": "string"
          },
          "openingHours": {
            "description": "Opening hours for each day of the week",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "images": {
            "description": "Thumbnail images of the location (up to 3 images, 400x400px)",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "description": "Direct URL to the image from Google Places Photos API",
                  "type": "string"
                },
                "width": {
                  "description": "Image width in pixels",
                  "type": "number"
                },
                "height": {
                  "description": "Image height in pixels",
                  "type": "number"
                },
                "photoReference": {
                  "description": "Google Places photo reference ID",
                  "type": "string"
                }
              },
              "required": [
                "url",
                "width",
                "height",
                "photoReference"
              ]
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "MomentListResponseDto": {
        "type": "object",
        "properties": {
          "moments": {
            "type": "array",
            "items": {
              "description": "Traveler moment information",
              "type": "object",
              "properties": {
                "imageUrl": {
                  "description": "URL of the moment image",
                  "type": "string",
                  "nullable": true
                },
                "username": {
                  "description": "Traveler display name",
                  "type": "string",
                  "nullable": true
                },
                "description": {
                  "description": "Short moment description",
                  "type": "string",
                  "nullable": true
                },
                "rewardText": {
                  "description": "Text describing earned rewards",
                  "type": "string",
                  "nullable": true
                },
                "insDateTime": {
                  "description": "Timestamp when the moment occurred",
                  "type": "string"
                }
              },
              "required": [
                "insDateTime"
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "currentPage": {
                "description": "Current page number",
                "type": "number"
              },
              "totalPages": {
                "description": "Total number of pages",
                "type": "number"
              },
              "totalItems": {
                "description": "Total number of items",
                "type": "number"
              }
            },
            "required": [
              "currentPage",
              "totalPages",
              "totalItems"
            ]
          }
        },
        "required": [
          "moments",
          "pagination"
        ]
      },
      "MomentResponseDto": {
        "description": "Traveler moment information",
        "type": "object",
        "properties": {
          "imageUrl": {
            "description": "URL of the moment image",
            "type": "string",
            "nullable": true
          },
          "username": {
            "description": "Traveler display name",
            "type": "string",
            "nullable": true
          },
          "description": {
            "description": "Short moment description",
            "type": "string",
            "nullable": true
          },
          "rewardText": {
            "description": "Text describing earned rewards",
            "type": "string",
            "nullable": true
          },
          "insDateTime": {
            "description": "Timestamp when the moment occurred",
            "type": "string"
          }
        },
        "required": [
          "insDateTime"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "userId": {
            "description": "User ID",
            "type": "string"
          },
          "username": {
            "description": "Username",
            "type": "string"
          },
          "discordId": {
            "description": "Discord ID",
            "type": "string"
          },
          "discordUsername": {
            "description": "Discord username",
            "type": "string"
          },
          "twitterId": {
            "description": "Twitter ID",
            "type": "string"
          },
          "twitterUsername": {
            "description": "Twitter username",
            "type": "string"
          },
          "googleEmail": {
            "description": "Google email",
            "type": "string"
          },
          "passportWalletAddress": {
            "description": "Passport wallet address",
            "type": "string"
          },
          "perksWalletAddress": {
            "description": "Perks wallet address",
            "type": "string"
          },
          "email": {
            "description": "Email",
            "type": "string"
          },
          "isPremium": {
            "description": "Premium status",
            "type": "boolean"
          },
          "totalQuestCompleted": {
            "description": "Total quests completed",
            "type": "number"
          },
          "totalTravelDistance": {
            "description": "Total travel distance",
            "type": "number"
          },
          "role": {
            "description": "User role",
            "type": "string",
            "enum": [
              "USER",
              "MODERATOR",
              "ADMIN"
            ],
            "x-enumNames": [
              "USER",
              "MODERATOR",
              "ADMIN"
            ]
          },
          "registeredAt": {
            "description": "Registration date"
          },
          "discordJoinedAt": {
            "description": "Discord joined date"
          },
          "isBanned": {
            "description": "Ban status",
            "type": "boolean"
          },
          "delFlag": {
            "description": "Flag to indicate if the record is deleted",
            "type": "boolean"
          },
          "insUserId": {
            "description": "ID of user who created this record",
            "type": "string"
          },
          "insDateTime": {
            "description": "Timestamp of record creation",
            "type": "string"
          },
          "updUserId": {
            "description": "ID of user who last updated this record",
            "type": "string"
          },
          "updDateTime": {
            "description": "Timestamp of last record update",
            "type": "string"
          },
          "userInfo": {
            "description": "User info",
            "type": "object",
            "properties": {
              "userId": {
                "description": "User ID",
                "type": "string"
              },
              "digitalPassportAddress": {
                "description": "Digital passport NFT address",
                "type": "string"
              },
              "logNftAddress": {
                "description": "Log NFT address",
                "type": "string"
              },
              "userDigitalPassportType": {
                "description": "Digital passport type",
                "type": "string",
                "enum": [
                  "BONJIN",
                  "AMATSUKAMI",
                  "KUNITSUKAMI",
                  "YOKAI"
                ],
                "x-enumNames": [
                  "BONJIN",
                  "AMATSUKAMI",
                  "KUNITSUKAMI",
                  "YOKAI"
                ]
              },
              "level": {
                "description": "User level",
                "type": "string",
                "enum": [
                  "BONJIN",
                  "E_CLASS_AMATSUKAMI",
                  "E_CLASS_KUNITSUKAMI",
                  "E_CLASS_YOKAI",
                  "D_CLASS_AMATSUKAMI",
                  "D_CLASS_KUNITSUKAMI",
                  "D_CLASS_YOKAI",
                  "C_CLASS_AMATSUKAMI",
                  "C_CLASS_KUNITSUKAMI",
                  "C_CLASS_YOKAI",
                  "B_CLASS_AMATSUKAMI",
                  "B_CLASS_KUNITSUKAMI",
                  "B_CLASS_YOKAI",
                  "A_CLASS_AMATSUKAMI",
                  "A_CLASS_KUNITSUKAMI",
                  "A_CLASS_YOKAI",
                  "S_CLASS_AMATSUKAMI",
                  "S_CLASS_KUNITSUKAMI",
                  "S_CLASS_YOKAI"
                ],
                "x-enumNames": [
                  "BONJIN",
                  "E_CLASS_AMATSUKAMI",
                  "E_CLASS_KUNITSUKAMI",
                  "E_CLASS_YOKAI",
                  "D_CLASS_AMATSUKAMI",
                  "D_CLASS_KUNITSUKAMI",
                  "D_CLASS_YOKAI",
                  "C_CLASS_AMATSUKAMI",
                  "C_CLASS_KUNITSUKAMI",
                  "C_CLASS_YOKAI",
                  "B_CLASS_AMATSUKAMI",
                  "B_CLASS_KUNITSUKAMI",
                  "B_CLASS_YOKAI",
                  "A_CLASS_AMATSUKAMI",
                  "A_CLASS_KUNITSUKAMI",
                  "A_CLASS_YOKAI",
                  "S_CLASS_AMATSUKAMI",
                  "S_CLASS_KUNITSUKAMI",
                  "S_CLASS_YOKAI"
                ]
              },
              "discountRate": {
                "description": "User discount rate",
                "type": "number"
              },
              "magatamaPoints": {
                "description": "Magatama points balance",
                "type": "number"
              },
              "magatamaBags": {
                "description": "Magatama bags count",
                "type": "number"
              },
              "totalQuestCompleted": {
                "description": "Total quests completed",
                "type": "number"
              },
              "totalTravelDistance": {
                "description": "Total travel distance",
                "type": "number"
              },
              "isPremium": {
                "description": "Premium status",
                "type": "boolean"
              },
              "prayerBead": {
                "description": "Prayer bead count",
                "type": "number"
              },
              "sword": {
                "description": "Sword count",
                "type": "number"
              },
              "orgeMask": {
                "description": "Orge mask count",
                "type": "number"
              },
              "delFlag": {
                "description": "Flag to indicate if the record is deleted",
                "type": "boolean"
              },
              "insUserId": {
                "description": "ID of user who created this record",
                "type": "string"
              },
              "insDateTime": {
                "description": "Timestamp of record creation",
                "type": "string"
              },
              "updUserId": {
                "description": "ID of user who last updated this record",
                "type": "string"
              },
              "updDateTime": {
                "description": "Timestamp of last record update",
                "type": "string"
              }
            },
            "required": [
              "userId",
              "digitalPassportAddress",
              "logNftAddress",
              "magatamaPoints",
              "totalQuestCompleted",
              "totalTravelDistance",
              "isPremium"
            ]
          },
          "userAchievements": {
            "description": "User achievements",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userAchievementId": {
                  "description": "Achievement ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "achievementName": {
                  "description": "Achievement name",
                  "type": "string"
                },
                "achievementDesc": {
                  "description": "Achievement description",
                  "type": "string"
                },
                "iconUrl": {
                  "description": "Icon URL",
                  "type": "string"
                },
                "achievementType": {
                  "description": "Achievement type",
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "STORY",
                    "TRAVEL",
                    "EXPLORE",
                    "COMMUNITY",
                    "MILESTONE"
                  ],
                  "x-enumNames": [
                    "UNKNOWN",
                    "STORY",
                    "TRAVEL",
                    "EXPLORE",
                    "COMMUNITY",
                    "MILESTONE"
                  ]
                },
                "magatamaPointAwarded": {
                  "description": "Magatama points awarded",
                  "type": "number"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "userAchievementId",
                "userId",
                "achievementName",
                "achievementType",
                "magatamaPointAwarded"
              ]
            }
          },
          "userOnchainItems": {
            "description": "User onchain items",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userOnchainItemId": {
                  "description": "Onchain item ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "itemType": {
                  "description": "Item type",
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "LOG_NFT",
                    "DIGITAL_PASSPORT",
                    "PERK"
                  ],
                  "x-enumNames": [
                    "UNKNOWN",
                    "LOG_NFT",
                    "DIGITAL_PASSPORT",
                    "PERK"
                  ]
                },
                "itemTxnHash": {
                  "description": "Transaction hash",
                  "type": "string"
                },
                "blockchainType": {
                  "description": "Blockchain type",
                  "type": "string",
                  "enum": [
                    "UNKNOWN",
                    "VARA",
                    "CAMINO"
                  ],
                  "x-enumNames": [
                    "UNKNOWN",
                    "VARA",
                    "CAMINO"
                  ]
                },
                "mintedAt": {
                  "description": "Minted date"
                },
                "onchainItemId": {
                  "description": "Onchain item ID",
                  "type": "string"
                },
                "status": {
                  "description": "Item status",
                  "type": "string",
                  "enum": [
                    "ACTIVE",
                    "USED",
                    "EXPIRED",
                    "PENDING"
                  ],
                  "x-enumNames": [
                    "ACTIVE",
                    "USED",
                    "EXPIRED",
                    "PENDING"
                  ]
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "userOnchainItemId",
                "itemType",
                "itemTxnHash",
                "blockchainType",
                "status"
              ]
            }
          },
          "userItemClaimLogs": {
            "description": "User item claim logs",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userItemClaimLogId": {
                  "description": "Item claim log ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "onchainItemId": {
                  "description": "Onchain item ID",
                  "type": "string"
                },
                "offchainItemName": {
                  "description": "Offchain item name",
                  "type": "string"
                },
                "itemAmount": {
                  "description": "Item amount",
                  "type": "number"
                },
                "itemDetails": {
                  "description": "Item details",
                  "type": "string"
                },
                "type": {
                  "description": "Item type",
                  "type": "string",
                  "enum": [
                    "ONCHAIN",
                    "OFFCHAIN"
                  ],
                  "x-enumNames": [
                    "ONCHAIN",
                    "OFFCHAIN"
                  ]
                },
                "claimedAt": {
                  "description": "Claimed date"
                },
                "status": {
                  "description": "Claim status",
                  "type": "string",
                  "enum": [
                    "SUCCESS",
                    "FAILED"
                  ],
                  "x-enumNames": [
                    "SUCCESS",
                    "FAILED"
                  ]
                },
                "errorMsg": {
                  "description": "Error message",
                  "type": "string"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "userItemClaimLogId",
                "userId",
                "itemAmount",
                "type",
                "status"
              ]
            }
          },
          "userStoryLogs": {
            "description": "User story logs",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userStoryLogId": {
                  "description": "Story log ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "storyChapterId": {
                  "description": "Story chapter ID",
                  "type": "string"
                },
                "status": {
                  "description": "Story status",
                  "type": "string",
                  "enum": [
                    "UNREAD",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ],
                  "x-enumNames": [
                    "UNREAD",
                    "IN_PROGRESS",
                    "COMPLETED"
                  ]
                },
                "unlockedAt": {
                  "description": "Unlocked date"
                },
                "finishedAt": {
                  "description": "Finished date"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "userStoryLogId",
                "userId",
                "storyChapterId",
                "status"
              ]
            }
          },
          "userTaskLogs": {
            "description": "User task logs",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userTaskLogId": {
                  "description": "Task log ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "questId": {
                  "description": "Quest ID",
                  "type": "string"
                },
                "taskId": {
                  "description": "Task ID",
                  "type": "string"
                },
                "status": {
                  "description": "Task status",
                  "type": "string",
                  "enum": [
                    "AVAILABLE",
                    "ONGOING",
                    "COMPLETED",
                    "FAILED"
                  ],
                  "x-enumNames": [
                    "AVAILABLE",
                    "ONGOING",
                    "COMPLETED",
                    "FAILED"
                  ]
                },
                "action": {
                  "description": "Task action type",
                  "type": "string",
                  "enum": [
                    "VISIT_LOCATION",
                    "PHOTO_UPLOAD",
                    "ANSWER_TEXT",
                    "SELECT_OPTION",
                    "SHARE_SOCIAL",
                    "CHECK_IN",
                    "GROUP_ACTIVITY",
                    "LOCAL_INTERACTION"
                  ],
                  "x-enumNames": [
                    "VISIT_LOCATION",
                    "PHOTO_UPLOAD",
                    "ANSWER_TEXT",
                    "SELECT_OPTION",
                    "SHARE_SOCIAL",
                    "CHECK_IN",
                    "GROUP_ACTIVITY",
                    "LOCAL_INTERACTION"
                  ]
                },
                "userResponse": {
                  "description": "User response",
                  "type": "string"
                },
                "groupActivityMembers": {
                  "description": "Group activity members",
                  "type": "array",
                  "items": {}
                },
                "submissionData": {
                  "description": "Submission data"
                },
                "failedReason": {
                  "description": "Failed reason",
                  "type": "string"
                },
                "completedAt": {
                  "description": "Completed date"
                },
                "claimedAt": {
                  "description": "Claimed date"
                },
                "totalMagatamaPointAwarded": {
                  "description": "Total magatama points awarded",
                  "type": "number"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "userTaskLogId",
                "userId",
                "questId",
                "taskId",
                "status",
                "action",
                "groupActivityMembers",
                "totalMagatamaPointAwarded"
              ]
            }
          },
          "userTravelLogs": {
            "description": "User travel logs",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userTravelLogId": {
                  "description": "Travel log ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "questId": {
                  "description": "Quest ID",
                  "type": "string"
                },
                "taskId": {
                  "description": "Task ID",
                  "type": "string"
                },
                "touristSpotId": {
                  "description": "Tourist spot ID",
                  "type": "string"
                },
                "userLongitude": {
                  "description": "User longitude",
                  "type": "number"
                },
                "userLatitude": {
                  "description": "User latitude",
                  "type": "number"
                },
                "travelDistanceFromTarget": {
                  "description": "Distance from target",
                  "type": "number"
                },
                "travelDistance": {
                  "description": "Travel distance",
                  "type": "number"
                },
                "qrCodeValue": {
                  "description": "QR code value",
                  "type": "string"
                },
                "checkInMethod": {
                  "description": "Check-in method",
                  "type": "string",
                  "enum": [
                    "QR_CODE",
                    "GPS",
                    "AUTO_DETECTED",
                    "BACKGROUND_GPS"
                  ],
                  "x-enumNames": [
                    "QR_CODE",
                    "GPS",
                    "AUTO_DETECTED",
                    "BACKGROUND_GPS"
                  ]
                },
                "detectedFraud": {
                  "description": "Fraud detected",
                  "type": "boolean"
                },
                "fraudReason": {
                  "description": "Fraud reason",
                  "type": "string"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "userTravelLogId",
                "userId",
                "questId",
                "taskId",
                "touristSpotId",
                "userLongitude",
                "userLatitude",
                "travelDistance"
              ]
            }
          },
          "discordActivityLogs": {
            "description": "Discord activity logs",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "discordActivityLogId": {
                  "description": "Discord activity log ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "activityType": {
                  "description": "Activity type",
                  "type": "string"
                },
                "activityDetails": {
                  "description": "Activity details",
                  "type": "string"
                },
                "magatamaPointAwarded": {
                  "description": "Magatama points awarded",
                  "type": "number"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "discordActivityLogId",
                "userId",
                "activityType",
                "magatamaPointAwarded"
              ]
            }
          },
          "discordUserRoles": {
            "description": "Discord user roles",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "discordUserRolesId": {
                  "description": "Discord user roles ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "roleId": {
                  "description": "Role ID",
                  "type": "string"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "discordUserRolesId",
                "userId",
                "roleId"
              ]
            }
          },
          "discordRewardedRoles": {
            "description": "Discord rewarded roles",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "discordRewardedRolesId": {
                  "description": "Discord rewarded roles ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "roleId": {
                  "description": "Role ID",
                  "type": "string"
                },
                "magatamaPointAwarded": {
                  "description": "Magatama points awarded",
                  "type": "number"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "discordRewardedRolesId",
                "userId",
                "roleId",
                "magatamaPointAwarded"
              ]
            }
          },
          "userInviteLogs": {
            "description": "User invite logs",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "inviteLogId": {
                  "description": "Invite log ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "inviteeDiscordId": {
                  "description": "Invitee Discord ID",
                  "type": "string"
                },
                "inviteeUserId": {
                  "description": "Invitee user ID",
                  "type": "string"
                },
                "magatamaPointAwarded": {
                  "description": "Magatama points awarded",
                  "type": "number"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "inviteLogId",
                "userId",
                "magatamaPointAwarded"
              ]
            }
          }
        },
        "required": [
          "userId",
          "username",
          "isPremium",
          "totalQuestCompleted",
          "totalTravelDistance",
          "role",
          "registeredAt",
          "discordJoinedAt",
          "isBanned"
        ]
      },
      "UserTravelLogListResponseDto": {
        "type": "object",
        "properties": {
          "checkins": {
            "description": "List of user travel log checkins",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userTravelLogId": {
                  "description": "Travel log ID",
                  "type": "string"
                },
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "questId": {
                  "description": "Quest ID",
                  "type": "string"
                },
                "taskId": {
                  "description": "Task ID",
                  "type": "string"
                },
                "touristSpotId": {
                  "description": "Tourist spot ID",
                  "type": "string"
                },
                "userLongitude": {
                  "description": "User longitude",
                  "type": "number"
                },
                "userLatitude": {
                  "description": "User latitude",
                  "type": "number"
                },
                "travelDistanceFromTarget": {
                  "description": "Distance from target",
                  "type": "number"
                },
                "travelDistance": {
                  "description": "Travel distance",
                  "type": "number"
                },
                "qrCodeValue": {
                  "description": "QR code value",
                  "type": "string"
                },
                "checkInMethod": {
                  "description": "Check-in method",
                  "type": "string",
                  "enum": [
                    "QR_CODE",
                    "GPS",
                    "AUTO_DETECTED",
                    "BACKGROUND_GPS"
                  ],
                  "x-enumNames": [
                    "QR_CODE",
                    "GPS",
                    "AUTO_DETECTED",
                    "BACKGROUND_GPS"
                  ]
                },
                "detectedFraud": {
                  "description": "Fraud detected",
                  "type": "boolean"
                },
                "fraudReason": {
                  "description": "Fraud reason",
                  "type": "string"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                }
              },
              "required": [
                "userTravelLogId",
                "userId",
                "questId",
                "taskId",
                "touristSpotId",
                "userLongitude",
                "userLatitude",
                "travelDistance"
              ]
            }
          },
          "pagination": {
            "description": "Pagination information",
            "type": "object",
            "properties": {
              "currentPage": {
                "description": "Current page number",
                "type": "number"
              },
              "totalPages": {
                "description": "Total number of pages",
                "type": "number"
              },
              "totalItems": {
                "description": "Total number of items",
                "type": "number"
              }
            },
            "required": [
              "currentPage",
              "totalPages",
              "totalItems"
            ]
          }
        },
        "required": [
          "checkins",
          "pagination"
        ]
      },
      "CheckinsFetchRequestDto": {
        "type": "object",
        "properties": {
          "page": {
            "description": "Page number (default: 1)",
            "type": "string",
            "default": "1"
          },
          "limit": {
            "description": "Items per page (default: 20, max: 100)",
            "type": "string",
            "default": "20"
          },
          "userId": {
            "description": "Filter by specific user ID (admin only)",
            "type": "string"
          },
          "questId": {
            "description": "Filter by specific quest ID",
            "type": "string"
          },
          "touristSpotId": {
            "description": "Filter by specific tourist spot ID",
            "type": "string"
          },
          "checkInMethod": {
            "description": "Filter by check-in method",
            "type": "string",
            "enum": [
              "QR_CODE",
              "GPS",
              "AUTO_DETECTED",
              "BACKGROUND_GPS"
            ]
          },
          "source": {
            "description": "Filter by source type (manual=QR_CODE|GPS, auto=AUTO_DETECTED|BACKGROUND_GPS)",
            "type": "string",
            "enum": [
              "manual",
              "auto"
            ]
          },
          "startDate": {
            "description": "Filter from date (ISO format)",
            "type": "string"
          },
          "endDate": {
            "description": "Filter to date (ISO format)",
            "type": "string"
          }
        },
        "required": [
          "page",
          "limit",
          "startDate",
          "endDate"
        ]
      },
      "QuestTaskPhotoUploadResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Result message for photo upload",
            "type": "string"
          },
          "proofUrl": {
            "description": "Public URL for the uploaded proof image",
            "type": "string",
            "format": "uri"
          },
          "estimatedReviewTime": {
            "description": "Estimated time for admin review of the submission",
            "type": "string"
          }
        },
        "required": [
          "message",
          "proofUrl",
          "estimatedReviewTime"
        ]
      },
      "QrScanRequestDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1000,
            "pattern": "^[A-Za-z0-9_\\-:./#]+$"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          }
        },
        "required": [
          "code"
        ]
      },
      "QrScanResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "taskId": {
            "type": "string"
          },
          "questId": {
            "type": "string"
          },
          "magatama_point_awarded": {
            "type": "number"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "success",
          "message",
          "taskId",
          "questId",
          "magatama_point_awarded",
          "completed_at"
        ]
      },
      "HomepageHighlightsResponseDto": {
        "type": "object",
        "properties": {
          "latestChapter": {
            "type": "object",
            "properties": {
              "storyId": {
                "description": "Story ID",
                "type": "string"
              },
              "chapterId": {
                "description": "Chapter ID",
                "type": "string"
              },
              "chapterNumber": {
                "description": "Chapter number (e.g., \"Chapter 1\", \"Prologue\")",
                "type": "string"
              },
              "title": {
                "description": "Chapter title",
                "type": "string"
              },
              "imageUrl": {
                "description": "Cover image URL",
                "type": "string",
                "nullable": true
              },
              "region": {
                "description": "Region of the story",
                "type": "string",
                "nullable": true
              },
              "link": {
                "description": "Deep link to chapter",
                "type": "string",
                "nullable": true
              }
            },
            "required": [
              "storyId",
              "chapterId",
              "chapterNumber",
              "title",
              "imageUrl",
              "region",
              "link"
            ],
            "nullable": true
          },
          "popularQuests": {
            "description": "Top 3 popular quests",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "questId": {
                  "description": "Quest ID",
                  "type": "string"
                },
                "title": {
                  "description": "Quest title",
                  "type": "string"
                },
                "imageUrl": {
                  "description": "Quest image URL",
                  "type": "string",
                  "nullable": true
                },
                "link": {
                  "description": "Deep link to quest",
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "questId",
                "title",
                "imageUrl",
                "link"
              ]
            }
          }
        },
        "required": [
          "latestChapter",
          "popularQuests"
        ]
      },
      "AdminUserListResponseDto": {
        "type": "object",
        "properties": {
          "users": {
            "description": "List of users",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userId": {
                  "description": "User ID",
                  "type": "string"
                },
                "username": {
                  "description": "Username",
                  "type": "string"
                },
                "discordId": {
                  "description": "Discord ID",
                  "type": "string"
                },
                "discordUsername": {
                  "description": "Discord username",
                  "type": "string"
                },
                "twitterId": {
                  "description": "Twitter ID",
                  "type": "string"
                },
                "twitterUsername": {
                  "description": "Twitter username",
                  "type": "string"
                },
                "googleEmail": {
                  "description": "Google email",
                  "type": "string"
                },
                "email": {
                  "description": "Email",
                  "type": "string"
                },
                "passportWalletAddress": {
                  "description": "Passport wallet address",
                  "type": "string"
                },
                "perksWalletAddress": {
                  "description": "Perks wallet address",
                  "type": "string"
                },
                "latestIpAddress": {
                  "description": "Latest IP address",
                  "type": "string"
                },
                "isPremium": {
                  "description": "Premium status",
                  "type": "boolean"
                },
                "totalQuestCompleted": {
                  "description": "Total quests completed",
                  "type": "number"
                },
                "totalTravelDistance": {
                  "description": "Total travel distance",
                  "type": "number"
                },
                "role": {
                  "description": "User role",
                  "type": "string",
                  "enum": [
                    "USER",
                    "MODERATOR",
                    "ADMIN"
                  ],
                  "x-enumNames": [
                    "USER",
                    "MODERATOR",
                    "ADMIN"
                  ]
                },
                "registeredAt": {
                  "description": "Registration date"
                },
                "discordJoinedAt": {
                  "description": "Discord joined date"
                },
                "isBanned": {
                  "description": "Ban status",
                  "type": "boolean"
                },
                "delFlag": {
                  "description": "Flag to indicate if the record is deleted",
                  "type": "boolean"
                },
                "insUserId": {
                  "description": "ID of user who created this record",
                  "type": "string"
                },
                "insDateTime": {
                  "description": "Timestamp of record creation",
                  "type": "string"
                },
                "updUserId": {
                  "description": "ID of user who last updated this record",
                  "type": "string"
                },
                "updDateTime": {
                  "description": "Timestamp of last record update",
                  "type": "string"
                },
                "userInfo": {
                  "description": "User detailed info",
                  "type": "object",
                  "properties": {
                    "userId": {
                      "description": "User ID",
                      "type": "string"
                    },
                    "digitalPassportAddress": {
                      "description": "Digital passport NFT address",
                      "type": "string"
                    },
                    "logNftAddress": {
                      "description": "Log NFT address",
                      "type": "string"
                    },
                    "userDigitalPassportType": {
                      "description": "Digital passport type",
                      "type": "string",
                      "enum": [
                        "BONJIN",
                        "AMATSUKAMI",
                        "KUNITSUKAMI",
                        "YOKAI"
                      ],
                      "x-enumNames": [
                        "BONJIN",
                        "AMATSUKAMI",
                        "KUNITSUKAMI",
                        "YOKAI"
                      ]
                    },
                    "level": {
                      "description": "User level",
                      "type": "string",
                      "enum": [
                        "BONJIN",
                        "E_CLASS_AMATSUKAMI",
                        "E_CLASS_KUNITSUKAMI",
                        "E_CLASS_YOKAI",
                        "D_CLASS_AMATSUKAMI",
                        "D_CLASS_KUNITSUKAMI",
                        "D_CLASS_YOKAI",
                        "C_CLASS_AMATSUKAMI",
                        "C_CLASS_KUNITSUKAMI",
                        "C_CLASS_YOKAI",
                        "B_CLASS_AMATSUKAMI",
                        "B_CLASS_KUNITSUKAMI",
                        "B_CLASS_YOKAI",
                        "A_CLASS_AMATSUKAMI",
                        "A_CLASS_KUNITSUKAMI",
                        "A_CLASS_YOKAI",
                        "S_CLASS_AMATSUKAMI",
                        "S_CLASS_KUNITSUKAMI",
                        "S_CLASS_YOKAI"
                      ],
                      "x-enumNames": [
                        "BONJIN",
                        "E_CLASS_AMATSUKAMI",
                        "E_CLASS_KUNITSUKAMI",
                        "E_CLASS_YOKAI",
                        "D_CLASS_AMATSUKAMI",
                        "D_CLASS_KUNITSUKAMI",
                        "D_CLASS_YOKAI",
                        "C_CLASS_AMATSUKAMI",
                        "C_CLASS_KUNITSUKAMI",
                        "C_CLASS_YOKAI",
                        "B_CLASS_AMATSUKAMI",
                        "B_CLASS_KUNITSUKAMI",
                        "B_CLASS_YOKAI",
                        "A_CLASS_AMATSUKAMI",
                        "A_CLASS_KUNITSUKAMI",
                        "A_CLASS_YOKAI",
                        "S_CLASS_AMATSUKAMI",
                        "S_CLASS_KUNITSUKAMI",
                        "S_CLASS_YOKAI"
                      ]
                    },
                    "discountRate": {
                      "description": "User discount rate",
                      "type": "number"
                    },
                    "magatamaPoints": {
                      "description": "Magatama points balance",
                      "type": "number"
                    },
                    "magatamaBags": {
                      "description": "Magatama bags count",
                      "type": "number"
                    },
                    "totalQuestCompleted": {
                      "description": "Total quests completed",
                      "type": "number"
                    },
                    "totalTravelDistance": {
                      "description": "Total travel distance",
                      "type": "number"
                    },
                    "isPremium": {
                      "description": "Premium status",
                      "type": "boolean"
                    },
                    "prayerBead": {
                      "description": "Prayer bead count",
                      "type": "number"
                    },
                    "sword": {
                      "description": "Sword count",
                      "type": "number"
                    },
                    "orgeMask": {
                      "description": "Orge mask count",
                      "type": "number"
                    },
                    "delFlag": {
                      "description": "Flag to indicate if the record is deleted",
                      "type": "boolean"
                    },
                    "insUserId": {
                      "description": "ID of user who created this record",
                      "type": "string"
                    },
                    "insDateTime": {
                      "description": "Timestamp of record creation",
                      "type": "string"
                    },
                    "updUserId": {
                      "description": "ID of user who last updated this record",
                      "type": "string"
                    },
                    "updDateTime": {
                      "description": "Timestamp of last record update",
                      "type": "string"
                    }
                  },
                  "required": [
                    "userId",
                    "digitalPassportAddress",
                    "logNftAddress",
                    "magatamaPoints",
                    "totalQuestCompleted",
                    "totalTravelDistance",
                    "isPremium"
                  ]
                },
                "userAchievements": {
                  "description": "User achievements",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userAchievementId": {
                        "description": "Achievement ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "achievementName": {
                        "description": "Achievement name",
                        "type": "string"
                      },
                      "achievementDesc": {
                        "description": "Achievement description",
                        "type": "string"
                      },
                      "iconUrl": {
                        "description": "Icon URL",
                        "type": "string"
                      },
                      "achievementType": {
                        "description": "Achievement type",
                        "type": "string",
                        "enum": [
                          "UNKNOWN",
                          "STORY",
                          "TRAVEL",
                          "EXPLORE",
                          "COMMUNITY",
                          "MILESTONE"
                        ],
                        "x-enumNames": [
                          "UNKNOWN",
                          "STORY",
                          "TRAVEL",
                          "EXPLORE",
                          "COMMUNITY",
                          "MILESTONE"
                        ]
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded",
                        "type": "number"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userAchievementId",
                      "userId",
                      "achievementName",
                      "achievementType",
                      "magatamaPointAwarded"
                    ]
                  }
                },
                "userOnchainItems": {
                  "description": "User onchain items",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userOnchainItemId": {
                        "description": "Onchain item ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "itemType": {
                        "description": "Item type",
                        "type": "string",
                        "enum": [
                          "UNKNOWN",
                          "LOG_NFT",
                          "DIGITAL_PASSPORT",
                          "PERK"
                        ],
                        "x-enumNames": [
                          "UNKNOWN",
                          "LOG_NFT",
                          "DIGITAL_PASSPORT",
                          "PERK"
                        ]
                      },
                      "itemTxnHash": {
                        "description": "Transaction hash",
                        "type": "string"
                      },
                      "blockchainType": {
                        "description": "Blockchain type",
                        "type": "string",
                        "enum": [
                          "UNKNOWN",
                          "VARA",
                          "CAMINO"
                        ],
                        "x-enumNames": [
                          "UNKNOWN",
                          "VARA",
                          "CAMINO"
                        ]
                      },
                      "mintedAt": {
                        "description": "Minted date"
                      },
                      "onchainItemId": {
                        "description": "Onchain item ID",
                        "type": "string"
                      },
                      "status": {
                        "description": "Item status",
                        "type": "string",
                        "enum": [
                          "ACTIVE",
                          "USED",
                          "EXPIRED",
                          "PENDING"
                        ],
                        "x-enumNames": [
                          "ACTIVE",
                          "USED",
                          "EXPIRED",
                          "PENDING"
                        ]
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userOnchainItemId",
                      "itemType",
                      "itemTxnHash",
                      "blockchainType",
                      "status"
                    ]
                  }
                },
                "userItemClaimLogs": {
                  "description": "User item claim logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userItemClaimLogId": {
                        "description": "Item claim log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "onchainItemId": {
                        "description": "Onchain item ID",
                        "type": "string"
                      },
                      "offchainItemName": {
                        "description": "Offchain item name",
                        "type": "string"
                      },
                      "itemAmount": {
                        "description": "Item amount",
                        "type": "number"
                      },
                      "itemDetails": {
                        "description": "Item details",
                        "type": "string"
                      },
                      "type": {
                        "description": "Item type",
                        "type": "string",
                        "enum": [
                          "ONCHAIN",
                          "OFFCHAIN"
                        ],
                        "x-enumNames": [
                          "ONCHAIN",
                          "OFFCHAIN"
                        ]
                      },
                      "claimedAt": {
                        "description": "Claimed date"
                      },
                      "status": {
                        "description": "Claim status",
                        "type": "string",
                        "enum": [
                          "SUCCESS",
                          "FAILED"
                        ],
                        "x-enumNames": [
                          "SUCCESS",
                          "FAILED"
                        ]
                      },
                      "errorMsg": {
                        "description": "Error message",
                        "type": "string"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userItemClaimLogId",
                      "userId",
                      "itemAmount",
                      "type",
                      "status"
                    ]
                  }
                },
                "userStoryLogs": {
                  "description": "User story logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userStoryLogId": {
                        "description": "Story log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "storyChapterId": {
                        "description": "Story chapter ID",
                        "type": "string"
                      },
                      "status": {
                        "description": "Story status",
                        "type": "string",
                        "enum": [
                          "UNREAD",
                          "IN_PROGRESS",
                          "COMPLETED"
                        ],
                        "x-enumNames": [
                          "UNREAD",
                          "IN_PROGRESS",
                          "COMPLETED"
                        ]
                      },
                      "unlockedAt": {
                        "description": "Unlocked date"
                      },
                      "finishedAt": {
                        "description": "Finished date"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userStoryLogId",
                      "userId",
                      "storyChapterId",
                      "status"
                    ]
                  }
                },
                "userTaskLogs": {
                  "description": "User task logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userTaskLogId": {
                        "description": "Task log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "questId": {
                        "description": "Quest ID",
                        "type": "string"
                      },
                      "taskId": {
                        "description": "Task ID",
                        "type": "string"
                      },
                      "status": {
                        "description": "Task status",
                        "type": "string",
                        "enum": [
                          "AVAILABLE",
                          "ONGOING",
                          "COMPLETED",
                          "FAILED"
                        ],
                        "x-enumNames": [
                          "AVAILABLE",
                          "ONGOING",
                          "COMPLETED",
                          "FAILED"
                        ]
                      },
                      "action": {
                        "description": "Task action type",
                        "type": "string",
                        "enum": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ],
                        "x-enumNames": [
                          "VISIT_LOCATION",
                          "PHOTO_UPLOAD",
                          "ANSWER_TEXT",
                          "SELECT_OPTION",
                          "SHARE_SOCIAL",
                          "CHECK_IN",
                          "GROUP_ACTIVITY",
                          "LOCAL_INTERACTION"
                        ]
                      },
                      "userResponse": {
                        "description": "User response",
                        "type": "string"
                      },
                      "groupActivityMembers": {
                        "description": "Group activity members",
                        "type": "array",
                        "items": {}
                      },
                      "submissionData": {
                        "description": "Submission data"
                      },
                      "failedReason": {
                        "description": "Failed reason",
                        "type": "string"
                      },
                      "completedAt": {
                        "description": "Completed date"
                      },
                      "claimedAt": {
                        "description": "Claimed date"
                      },
                      "totalMagatamaPointAwarded": {
                        "description": "Total magatama points awarded",
                        "type": "number"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userTaskLogId",
                      "userId",
                      "questId",
                      "taskId",
                      "status",
                      "action",
                      "groupActivityMembers",
                      "totalMagatamaPointAwarded"
                    ]
                  }
                },
                "userTravelLogs": {
                  "description": "User travel logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userTravelLogId": {
                        "description": "Travel log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "questId": {
                        "description": "Quest ID",
                        "type": "string"
                      },
                      "taskId": {
                        "description": "Task ID",
                        "type": "string"
                      },
                      "touristSpotId": {
                        "description": "Tourist spot ID",
                        "type": "string"
                      },
                      "userLongitude": {
                        "description": "User longitude",
                        "type": "number"
                      },
                      "userLatitude": {
                        "description": "User latitude",
                        "type": "number"
                      },
                      "travelDistanceFromTarget": {
                        "description": "Distance from target",
                        "type": "number"
                      },
                      "travelDistance": {
                        "description": "Travel distance",
                        "type": "number"
                      },
                      "qrCodeValue": {
                        "description": "QR code value",
                        "type": "string"
                      },
                      "checkInMethod": {
                        "description": "Check-in method",
                        "type": "string",
                        "enum": [
                          "QR_CODE",
                          "GPS",
                          "AUTO_DETECTED",
                          "BACKGROUND_GPS"
                        ],
                        "x-enumNames": [
                          "QR_CODE",
                          "GPS",
                          "AUTO_DETECTED",
                          "BACKGROUND_GPS"
                        ]
                      },
                      "detectedFraud": {
                        "description": "Fraud detected",
                        "type": "boolean"
                      },
                      "fraudReason": {
                        "description": "Fraud reason",
                        "type": "string"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "userTravelLogId",
                      "userId",
                      "questId",
                      "taskId",
                      "touristSpotId",
                      "userLongitude",
                      "userLatitude",
                      "travelDistance"
                    ]
                  }
                },
                "discordActivityLogs": {
                  "description": "Discord activity logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "discordActivityLogId": {
                        "description": "Discord activity log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "activityType": {
                        "description": "Activity type",
                        "type": "string"
                      },
                      "activityDetails": {
                        "description": "Activity details",
                        "type": "string"
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded",
                        "type": "number"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "discordActivityLogId",
                      "userId",
                      "activityType",
                      "magatamaPointAwarded"
                    ]
                  }
                },
                "discordUserRoles": {
                  "description": "Discord user roles",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "discordUserRolesId": {
                        "description": "Discord user roles ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "roleId": {
                        "description": "Role ID",
                        "type": "string"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "discordUserRolesId",
                      "userId",
                      "roleId"
                    ]
                  }
                },
                "discordRewardedRoles": {
                  "description": "Discord rewarded roles",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "discordRewardedRolesId": {
                        "description": "Discord rewarded roles ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "roleId": {
                        "description": "Role ID",
                        "type": "string"
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded",
                        "type": "number"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "discordRewardedRolesId",
                      "userId",
                      "roleId",
                      "magatamaPointAwarded"
                    ]
                  }
                },
                "userInviteLogs": {
                  "description": "User invite logs",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "inviteLogId": {
                        "description": "Invite log ID",
                        "type": "string"
                      },
                      "userId": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "inviteeDiscordId": {
                        "description": "Invitee Discord ID",
                        "type": "string"
                      },
                      "inviteeUserId": {
                        "description": "Invitee user ID",
                        "type": "string"
                      },
                      "magatamaPointAwarded": {
                        "description": "Magatama points awarded",
                        "type": "number"
                      },
                      "delFlag": {
                        "description": "Flag to indicate if the record is deleted",
                        "type": "boolean"
                      },
                      "insUserId": {
                        "description": "ID of user who created this record",
                        "type": "string"
                      },
                      "insDateTime": {
                        "description": "Timestamp of record creation",
                        "type": "string"
                      },
                      "updUserId": {
                        "description": "ID of user who last updated this record",
                        "type": "string"
                      },
                      "updDateTime": {
                        "description": "Timestamp of last record update",
                        "type": "string"
                      }
                    },
                    "required": [
                      "inviteLogId",
                      "userId",
                      "magatamaPointAwarded"
                    ]
                  }
                },
                "summaryStats": {
                  "description": "Summary statistics for admin view",
                  "type": "object",
                  "properties": {
                    "achievementCount": {
                      "description": "Total achievements earned",
                      "type": "number"
                    },
                    "onchainItemCount": {
                      "description": "Total onchain items",
                      "type": "number"
                    },
                    "storyCompletedCount": {
                      "description": "Stories completed",
                      "type": "number"
                    },
                    "taskCompletedCount": {
                      "description": "Tasks completed",
                      "type": "number"
                    },
                    "totalCheckinsCount": {
                      "description": "Total check-ins",
                      "type": "number"
                    },
                    "discordActivityCount": {
                      "description": "Discord activities",
                      "type": "number"
                    },
                    "invitesSentCount": {
                      "description": "Invitations sent",
                      "type": "number"
                    }
                  },
                  "required": [
                    "achievementCount",
                    "onchainItemCount",
                    "storyCompletedCount",
                    "taskCompletedCount",
                    "totalCheckinsCount",
                    "discordActivityCount",
                    "invitesSentCount"
                  ]
                }
              },
              "required": [
                "userId",
                "username",
                "isPremium",
                "totalQuestCompleted",
                "totalTravelDistance",
                "role",
                "registeredAt",
                "discordJoinedAt",
                "isBanned"
              ]
            }
          },
          "pagination": {
            "description": "Pagination information",
            "type": "object",
            "properties": {
              "totalCount": {
                "description": "Total number of users",
                "type": "number"
              },
              "page": {
                "description": "Current page number",
                "type": "number"
              },
              "limit": {
                "description": "Users per page",
                "type": "number"
              },
              "totalPages": {
                "description": "Total number of pages",
                "type": "number"
              }
            },
            "required": [
              "totalCount",
              "page",
              "limit",
              "totalPages"
            ]
          },
          "filters": {
            "description": "Applied filters",
            "type": "object",
            "properties": {
              "searchTerm": {
                "description": "Applied search term",
                "type": "string"
              },
              "role": {
                "description": "Applied role filter",
                "type": "string"
              },
              "isPremium": {
                "description": "Applied premium filter",
                "type": "boolean"
              },
              "isBanned": {
                "description": "Applied banned filter",
                "type": "boolean"
              },
              "startDate": {
                "description": "Applied start date filter"
              },
              "endDate": {
                "description": "Applied end date filter"
              },
              "sortBy": {
                "description": "Applied sort field",
                "type": "string"
              },
              "sortOrder": {
                "description": "Applied sort order",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "users",
          "pagination",
          "filters"
        ]
      },
      "AdminUserQueryDto": {
        "type": "object",
        "properties": {
          "page": {
            "description": "Page number",
            "type": "string",
            "default": "1"
          },
          "limit": {
            "description": "Users per page (max 100)",
            "type": "string",
            "default": "20"
          },
          "searchTerm": {
            "description": "Search in username, email, discord/twitter usernames",
            "type": "string"
          },
          "role": {
            "description": "Filter by user role",
            "type": "string",
            "enum": [
              "USER",
              "MODERATOR",
              "ADMIN"
            ]
          },
          "isPremium": {
            "description": "Filter by premium status (true/false)",
            "type": "string"
          },
          "isBanned": {
            "description": "Filter by banned status (true/false)",
            "type": "string"
          },
          "startDate": {
            "description": "Filter by registration start date (ISO format)",
            "type": "string"
          },
          "endDate": {
            "description": "Filter by registration end date (ISO format)",
            "type": "string"
          },
          "sortBy": {
            "description": "Sort field",
            "type": "string",
            "enum": [
              "username",
              "registered_at",
              "total_quest_completed",
              "total_travel_distance"
            ],
            "default": "registered_at"
          },
          "sortOrder": {
            "description": "Sort order",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc"
          }
        }
      },
      "LocalInteractionSubmissionDto": {
        "type": "object",
        "properties": {
          "interactionType": {
            "description": "Type of interaction content",
            "type": "string",
            "enum": [
              "text",
              "photo",
              "audio"
            ]
          },
          "content": {
            "description": "Text content or base64 encoded file",
            "type": "string"
          },
          "latitude": {
            "description": "Optional latitude for anti-cheat verification",
            "type": "number"
          },
          "longitude": {
            "description": "Optional longitude for anti-cheat verification",
            "type": "number"
          }
        },
        "required": [
          "interactionType",
          "content"
        ]
      },
      "LocalInteractionResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Status message",
            "type": "string"
          },
          "status": {
            "description": "Task status after submission",
            "type": "string",
            "enum": [
              "AVAILABLE",
              "ONGOING",
              "COMPLETED",
              "FAILED"
            ],
            "x-enumNames": [
              "AVAILABLE",
              "ONGOING",
              "COMPLETED",
              "FAILED"
            ]
          },
          "estimatedReviewTime": {
            "description": "Expected review timeframe",
            "type": "string"
          }
        },
        "required": [
          "message",
          "status",
          "estimatedReviewTime"
        ]
      },
      "VerifySubmissionRequestDto": {
        "type": "object",
        "properties": {
          "action": {
            "description": "Action to take on the submission",
            "type": "string",
            "enum": [
              "approve",
              "reject"
            ]
          },
          "rejectionReason": {
            "description": "Reason for rejection (required when action is reject)",
            "type": "string"
          }
        },
        "required": [
          "action"
        ]
      },
      "UserSensitiveInfoResponseDto": {
        "type": "object",
        "properties": {
          "password": {
            "description": "Password",
            "type": "string"
          },
          "refreshToken": {
            "description": "Refresh token",
            "type": "string"
          },
          "encryptedPrivateKey": {
            "description": "Encrypted private key",
            "type": "string"
          },
          "passportWalletAddress": {
            "description": "Passport wallet address",
            "type": "string"
          },
          "perksWalletAddress": {
            "description": "Perks wallet address",
            "type": "string"
          },
          "latestIpAddress": {
            "description": "Latest IP address",
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      },
      "QuestTaskSocialShareResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Result message for social share completion",
            "type": "string"
          },
          "estimatedReviewTime": {
            "description": "Estimated time for admin review of the submission",
            "type": "string"
          }
        },
        "required": [
          "message",
          "estimatedReviewTime"
        ]
      },
      "SubmitAnswerTextRequestTaskDto": {
        "type": "object",
        "properties": {
          "answer": {
            "description": "Answer to the task",
            "type": "string"
          }
        },
        "required": [
          "answer"
        ]
      },
      "SubmitTaskResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "description": "Whether the answer is correct",
            "type": "boolean"
          },
          "message": {
            "description": "Message to the user",
            "type": "string"
          },
          "estimatedReviewTime": {
            "description": "Estimated time for admin review (only for manual verification tasks)",
            "type": "string"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "SubmitSelectOptionsTaskRequestDto": {
        "type": "object",
        "properties": {
          "selectedOptionIds": {
            "description": "IDs of the selected options",
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "selectedOptionIds"
        ]
      },
      "SubmitCheckInTaskRequestDto": {
        "type": "object",
        "properties": {
          "longitude": {
            "description": "Longitude of the user",
            "type": "number"
          },
          "latitude": {
            "description": "Latitude of the user",
            "type": "number"
          }
        },
        "required": [
          "longitude",
          "latitude"
        ]
      }
    }
  }
}